-- VHDL produced by vc2vhdl from virtual circuit (vc) description 
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity cal_Next_program_cnt is -- 
  generic (tag_length : integer); 
  port ( -- 
    opcode : in  std_logic_vector(7 downto 0);
    rd1 : in  std_logic_vector(31 downto 0);
    rd2 : in  std_logic_vector(31 downto 0);
    program_cnt : in  std_logic_vector(7 downto 0);
    is_rs1_neg : in  std_logic_vector(0 downto 0);
    n_program_cnt : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity cal_Next_program_cnt;
architecture cal_Next_program_cnt_arch of cal_Next_program_cnt is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 81)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal opcode_buffer :  std_logic_vector(7 downto 0);
  signal opcode_update_enable: Boolean;
  signal rd1_buffer :  std_logic_vector(31 downto 0);
  signal rd1_update_enable: Boolean;
  signal rd2_buffer :  std_logic_vector(31 downto 0);
  signal rd2_update_enable: Boolean;
  signal program_cnt_buffer :  std_logic_vector(7 downto 0);
  signal program_cnt_update_enable: Boolean;
  signal is_rs1_neg_buffer :  std_logic_vector(0 downto 0);
  signal is_rs1_neg_update_enable: Boolean;
  -- output port buffer signals
  signal n_program_cnt_buffer :  std_logic_vector(7 downto 0);
  signal n_program_cnt_update_enable: Boolean;
  signal cal_Next_program_cnt_CP_0_start: Boolean;
  signal cal_Next_program_cnt_CP_0_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "cal_Next_program_cnt_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 81) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= opcode;
  opcode_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(39 downto 8) <= rd1;
  rd1_buffer <= in_buffer_data_out(39 downto 8);
  in_buffer_data_in(71 downto 40) <= rd2;
  rd2_buffer <= in_buffer_data_out(71 downto 40);
  in_buffer_data_in(79 downto 72) <= program_cnt;
  program_cnt_buffer <= in_buffer_data_out(79 downto 72);
  in_buffer_data_in(80 downto 80) <= is_rs1_neg;
  is_rs1_neg_buffer <= in_buffer_data_out(80 downto 80);
  in_buffer_data_in(tag_length + 80 downto 81) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 80 downto 81);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  cal_Next_program_cnt_CP_0_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "cal_Next_program_cnt_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 8) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(7 downto 0) <= n_program_cnt_buffer;
  n_program_cnt <= out_buffer_data_out(7 downto 0);
  out_buffer_data_in(tag_length + 7 downto 8) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 7 downto 8);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= cal_Next_program_cnt_CP_0_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= cal_Next_program_cnt_CP_0_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= cal_Next_program_cnt_CP_0_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  cal_Next_program_cnt_CP_0: Block -- control-path 
    signal cal_Next_program_cnt_CP_0_elements: BooleanArray(0 downto 0);
    -- 
  begin -- 
    cal_Next_program_cnt_CP_0_elements(0) <= cal_Next_program_cnt_CP_0_start;
    cal_Next_program_cnt_CP_0_symbol <= cal_Next_program_cnt_CP_0_elements(0);
    -- CP-element group 0:  transition  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0:  members (4) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 $exit
      -- CP-element group 0: 	 assign_stmt_137_to_assign_stmt_188/$entry
      -- CP-element group 0: 	 assign_stmt_137_to_assign_stmt_188/$exit
      -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal ADD_u8_u8_183_wire : std_logic_vector(7 downto 0);
    signal AND_u1_u1_130_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_135_wire : std_logic_vector(0 downto 0);
    signal EQ_u1_u1_174_wire : std_logic_vector(0 downto 0);
    signal EQ_u1_u1_180_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_127_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_133_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_142_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_146_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_161_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_167_wire : std_logic_vector(0 downto 0);
    signal MUX_164_wire : std_logic_vector(7 downto 0);
    signal MUX_170_wire : std_logic_vector(7 downto 0);
    signal MUX_177_wire : std_logic_vector(7 downto 0);
    signal MUX_185_wire : std_logic_vector(7 downto 0);
    signal NOT_u1_u1_129_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_143_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_147_wire : std_logic_vector(0 downto 0);
    signal OR_u8_u8_171_wire : std_logic_vector(7 downto 0);
    signal OR_u8_u8_186_wire : std_logic_vector(7 downto 0);
    signal R_BN_132_wire_constant : std_logic_vector(7 downto 0);
    signal R_BZ_126_wire_constant : std_logic_vector(7 downto 0);
    signal R_CALL_141_wire_constant : std_logic_vector(7 downto 0);
    signal R_CALL_160_wire_constant : std_logic_vector(7 downto 0);
    signal R_JMP_145_wire_constant : std_logic_vector(7 downto 0);
    signal R_JMP_166_wire_constant : std_logic_vector(7 downto 0);
    signal R_one_1_173_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_1_179_wire_constant : std_logic_vector(0 downto 0);
    signal addr1_153 : std_logic_vector(7 downto 0);
    signal addr2_157 : std_logic_vector(7 downto 0);
    signal is_Branch_137 : std_logic_vector(0 downto 0);
    signal konst_163_wire_constant : std_logic_vector(7 downto 0);
    signal konst_169_wire_constant : std_logic_vector(7 downto 0);
    signal konst_176_wire_constant : std_logic_vector(7 downto 0);
    signal konst_182_wire_constant : std_logic_vector(7 downto 0);
    signal konst_184_wire_constant : std_logic_vector(7 downto 0);
    signal normalFlow_149 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_BN_132_wire_constant <= "00001111";
    R_BZ_126_wire_constant <= "00001110";
    R_CALL_141_wire_constant <= "00010000";
    R_CALL_160_wire_constant <= "00010000";
    R_JMP_145_wire_constant <= "00010001";
    R_JMP_166_wire_constant <= "00010001";
    R_one_1_173_wire_constant <= "1";
    R_one_1_179_wire_constant <= "1";
    konst_163_wire_constant <= "00000000";
    konst_169_wire_constant <= "00000000";
    konst_176_wire_constant <= "00000000";
    konst_182_wire_constant <= "00000001";
    konst_184_wire_constant <= "00000000";
    -- flow-through select operator MUX_164_inst
    MUX_164_wire <= addr1_153 when (EQ_u8_u1_161_wire(0) /=  '0') else konst_163_wire_constant;
    -- flow-through select operator MUX_170_inst
    MUX_170_wire <= addr1_153 when (EQ_u8_u1_167_wire(0) /=  '0') else konst_169_wire_constant;
    -- flow-through select operator MUX_177_inst
    MUX_177_wire <= addr2_157 when (EQ_u1_u1_174_wire(0) /=  '0') else konst_176_wire_constant;
    -- flow-through select operator MUX_185_inst
    MUX_185_wire <= ADD_u8_u8_183_wire when (EQ_u1_u1_180_wire(0) /=  '0') else konst_184_wire_constant;
    -- flow-through slice operator slice_152_inst
    addr1_153 <= rd1_buffer(7 downto 0);
    -- flow-through slice operator slice_156_inst
    addr2_157 <= rd2_buffer(7 downto 0);
    -- binary operator ADD_u8_u8_183_inst
    process(program_cnt_buffer) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApIntAdd_proc(program_cnt_buffer, konst_182_wire_constant, tmp_var);
      ADD_u8_u8_183_wire <= tmp_var; --
    end process;
    -- binary operator AND_u1_u1_130_inst
    process(EQ_u8_u1_127_wire, NOT_u1_u1_129_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntAnd_proc(EQ_u8_u1_127_wire, NOT_u1_u1_129_wire, tmp_var);
      AND_u1_u1_130_wire <= tmp_var; --
    end process;
    -- binary operator AND_u1_u1_135_inst
    process(EQ_u8_u1_133_wire, is_rs1_neg_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntAnd_proc(EQ_u8_u1_133_wire, is_rs1_neg_buffer, tmp_var);
      AND_u1_u1_135_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u1_u1_174_inst
    process(is_Branch_137) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(is_Branch_137, R_one_1_173_wire_constant, tmp_var);
      EQ_u1_u1_174_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u1_u1_180_inst
    process(normalFlow_149) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(normalFlow_149, R_one_1_179_wire_constant, tmp_var);
      EQ_u1_u1_180_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_127_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_BZ_126_wire_constant, tmp_var);
      EQ_u8_u1_127_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_133_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_BN_132_wire_constant, tmp_var);
      EQ_u8_u1_133_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_142_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_CALL_141_wire_constant, tmp_var);
      EQ_u8_u1_142_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_146_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_JMP_145_wire_constant, tmp_var);
      EQ_u8_u1_146_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_161_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_CALL_160_wire_constant, tmp_var);
      EQ_u8_u1_161_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_167_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_JMP_166_wire_constant, tmp_var);
      EQ_u8_u1_167_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_129_inst
    process(is_rs1_neg_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", is_rs1_neg_buffer, tmp_var);
      NOT_u1_u1_129_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_148_inst
    process(OR_u1_u1_147_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", OR_u1_u1_147_wire, tmp_var);
      normalFlow_149 <= tmp_var; -- 
    end process;
    -- binary operator OR_u1_u1_136_inst
    process(AND_u1_u1_130_wire, AND_u1_u1_135_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(AND_u1_u1_130_wire, AND_u1_u1_135_wire, tmp_var);
      is_Branch_137 <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_143_inst
    process(is_Branch_137, EQ_u8_u1_142_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(is_Branch_137, EQ_u8_u1_142_wire, tmp_var);
      OR_u1_u1_143_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_147_inst
    process(OR_u1_u1_143_wire, EQ_u8_u1_146_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_143_wire, EQ_u8_u1_146_wire, tmp_var);
      OR_u1_u1_147_wire <= tmp_var; --
    end process;
    -- binary operator OR_u8_u8_171_inst
    process(MUX_164_wire, MUX_170_wire) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_164_wire, MUX_170_wire, tmp_var);
      OR_u8_u8_171_wire <= tmp_var; --
    end process;
    -- binary operator OR_u8_u8_186_inst
    process(MUX_177_wire, MUX_185_wire) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_177_wire, MUX_185_wire, tmp_var);
      OR_u8_u8_186_wire <= tmp_var; --
    end process;
    -- binary operator OR_u8_u8_187_inst
    process(OR_u8_u8_171_wire, OR_u8_u8_186_wire) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u8_u8_171_wire, OR_u8_u8_186_wire, tmp_var);
      n_program_cnt_buffer <= tmp_var; --
    end process;
    -- 
  end Block; -- data_path
  -- 
end cal_Next_program_cnt_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity processor is -- 
  generic (tag_length : integer); 
  port ( -- 
    mem_out_pipe_read_req : out  std_logic_vector(0 downto 0);
    mem_out_pipe_read_ack : in   std_logic_vector(0 downto 0);
    mem_out_pipe_read_data : in   std_logic_vector(31 downto 0);
    start_processor : in std_logic_vector(7 downto 0);
    mem_in_pipe_write_req : out  std_logic_vector(0 downto 0);
    mem_in_pipe_write_ack : in   std_logic_vector(0 downto 0);
    mem_in_pipe_write_data : out  std_logic_vector(63 downto 0);
    cal_Next_program_cnt_call_reqs : out  std_logic_vector(0 downto 0);
    cal_Next_program_cnt_call_acks : in   std_logic_vector(0 downto 0);
    cal_Next_program_cnt_call_data : out  std_logic_vector(80 downto 0);
    cal_Next_program_cnt_call_tag  :  out  std_logic_vector(0 downto 0);
    cal_Next_program_cnt_return_reqs : out  std_logic_vector(0 downto 0);
    cal_Next_program_cnt_return_acks : in   std_logic_vector(0 downto 0);
    cal_Next_program_cnt_return_data : in   std_logic_vector(7 downto 0);
    cal_Next_program_cnt_return_tag :  in   std_logic_vector(0 downto 0);
    registerFileModule_call_reqs : out  std_logic_vector(0 downto 0);
    registerFileModule_call_acks : in   std_logic_vector(0 downto 0);
    registerFileModule_call_data : out  std_logic_vector(58 downto 0);
    registerFileModule_call_tag  :  out  std_logic_vector(1 downto 0);
    registerFileModule_return_reqs : out  std_logic_vector(0 downto 0);
    registerFileModule_return_acks : in   std_logic_vector(0 downto 0);
    registerFileModule_return_data : in   std_logic_vector(63 downto 0);
    registerFileModule_return_tag :  in   std_logic_vector(1 downto 0);
    send_to_uart_call_reqs : out  std_logic_vector(0 downto 0);
    send_to_uart_call_acks : in   std_logic_vector(0 downto 0);
    send_to_uart_call_data : out  std_logic_vector(31 downto 0);
    send_to_uart_call_tag  :  out  std_logic_vector(0 downto 0);
    send_to_uart_return_reqs : out  std_logic_vector(0 downto 0);
    send_to_uart_return_acks : in   std_logic_vector(0 downto 0);
    send_to_uart_return_tag :  in   std_logic_vector(0 downto 0);
    receive_from_uart_call_reqs : out  std_logic_vector(0 downto 0);
    receive_from_uart_call_acks : in   std_logic_vector(0 downto 0);
    receive_from_uart_call_tag  :  out  std_logic_vector(0 downto 0);
    receive_from_uart_return_reqs : out  std_logic_vector(0 downto 0);
    receive_from_uart_return_acks : in   std_logic_vector(0 downto 0);
    receive_from_uart_return_data : in   std_logic_vector(31 downto 0);
    receive_from_uart_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity processor;
architecture processor_arch of processor is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal processor_CP_545_start: Boolean;
  signal processor_CP_545_symbol: Boolean;
  -- volatile/operator module components. 
  component cal_Next_program_cnt is -- 
    generic (tag_length : integer); 
    port ( -- 
      opcode : in  std_logic_vector(7 downto 0);
      rd1 : in  std_logic_vector(31 downto 0);
      rd2 : in  std_logic_vector(31 downto 0);
      program_cnt : in  std_logic_vector(7 downto 0);
      is_rs1_neg : in  std_logic_vector(0 downto 0);
      n_program_cnt : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component registerFileModule is -- 
    generic (tag_length : integer); 
    port ( -- 
      valid_1 : in  std_logic_vector(0 downto 0);
      addr_1 : in  std_logic_vector(7 downto 0);
      valid_2 : in  std_logic_vector(0 downto 0);
      addr_2 : in  std_logic_vector(7 downto 0);
      valid_w : in  std_logic_vector(0 downto 0);
      addr_w : in  std_logic_vector(7 downto 0);
      data_to_be_written : in  std_logic_vector(31 downto 0);
      read_data_1 : out  std_logic_vector(31 downto 0);
      read_data_2 : out  std_logic_vector(31 downto 0);
      memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lr_addr : out  std_logic_vector(5 downto 0);
      memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_data : in   std_logic_vector(31 downto 0);
      memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
      memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sr_addr : out  std_logic_vector(5 downto 0);
      memory_space_0_sr_data : out  std_logic_vector(31 downto 0);
      memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component send_to_uart is -- 
    generic (tag_length : integer); 
    port ( -- 
      data_to_send : in  std_logic_vector(31 downto 0);
      out_pipe_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_pipe_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_pipe_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component receive_from_uart is -- 
    generic (tag_length : integer); 
    port ( -- 
      receive_data_from_uart : out  std_logic_vector(31 downto 0);
      in_pipe_pipe_read_req : out  std_logic_vector(0 downto 0);
      in_pipe_pipe_read_ack : in   std_logic_vector(0 downto 0);
      in_pipe_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_728_call_req_0 : boolean;
  signal MUX_699_inst_req_0 : boolean;
  signal CONCAT_u9_u64_331_inst_ack_1 : boolean;
  signal CONCAT_u9_u64_331_inst_req_1 : boolean;
  signal CONCAT_u9_u64_331_inst_ack_0 : boolean;
  signal CONCAT_u9_u64_331_inst_req_0 : boolean;
  signal W_rs2_654_delayed_9_0_704_inst_req_0 : boolean;
  signal call_stmt_361_call_ack_0 : boolean;
  signal W_write_to_uart_661_delayed_8_0_723_inst_ack_1 : boolean;
  signal call_stmt_728_call_ack_0 : boolean;
  signal n_program_cnt_378_322_buf_ack_1 : boolean;
  signal n_program_cnt_378_322_buf_req_1 : boolean;
  signal phi_stmt_319_ack_0 : boolean;
  signal do_while_stmt_317_branch_req_0 : boolean;
  signal WPIPE_mem_in_324_inst_ack_0 : boolean;
  signal W_rs1_imm_652_delayed_9_0_701_inst_req_0 : boolean;
  signal W_cmd_309_inst_ack_1 : boolean;
  signal WPIPE_mem_in_324_inst_req_0 : boolean;
  signal do_while_stmt_317_branch_ack_0 : boolean;
  signal W_cmd_309_inst_req_1 : boolean;
  signal W_write_to_uart_661_delayed_8_0_723_inst_ack_0 : boolean;
  signal WPIPE_mem_in_324_inst_req_1 : boolean;
  signal MUX_699_inst_req_1 : boolean;
  signal MUX_699_inst_ack_0 : boolean;
  signal W_opcode_385_delayed_7_0_366_inst_ack_0 : boolean;
  signal W_opcode_385_delayed_7_0_366_inst_req_1 : boolean;
  signal W_opcode_385_delayed_7_0_366_inst_ack_1 : boolean;
  signal W_regWrite_655_delayed_9_0_707_inst_ack_1 : boolean;
  signal W_regWrite_655_delayed_9_0_707_inst_req_1 : boolean;
  signal W_rs2_654_delayed_9_0_704_inst_ack_0 : boolean;
  signal W_write_to_uart_661_delayed_8_0_723_inst_req_0 : boolean;
  signal phi_stmt_319_req_0 : boolean;
  signal RPIPE_mem_out_334_inst_ack_0 : boolean;
  signal call_stmt_728_call_ack_1 : boolean;
  signal W_rs1_imm_652_delayed_9_0_701_inst_ack_0 : boolean;
  signal RPIPE_mem_out_334_inst_req_0 : boolean;
  signal W_rs2_654_delayed_9_0_704_inst_ack_1 : boolean;
  signal W_cmd_309_inst_ack_0 : boolean;
  signal W_cmd_309_inst_req_0 : boolean;
  signal W_rd_656_delayed_9_0_710_inst_req_0 : boolean;
  signal do_while_stmt_317_branch_ack_1 : boolean;
  signal RPIPE_mem_out_334_inst_req_1 : boolean;
  signal call_stmt_361_call_req_1 : boolean;
  signal call_stmt_361_call_ack_1 : boolean;
  signal n_program_cnt_378_322_buf_ack_0 : boolean;
  signal n_program_cnt_378_322_buf_req_0 : boolean;
  signal W_write_to_uart_661_delayed_8_0_723_inst_req_1 : boolean;
  signal WPIPE_mem_in_324_inst_ack_1 : boolean;
  signal call_stmt_361_call_req_0 : boolean;
  signal if_stmt_312_branch_ack_0 : boolean;
  signal phi_stmt_319_req_1 : boolean;
  signal if_stmt_312_branch_req_0 : boolean;
  signal W_program_cnt_388_delayed_7_0_369_inst_req_0 : boolean;
  signal W_program_cnt_388_delayed_7_0_369_inst_ack_0 : boolean;
  signal W_regWrite_655_delayed_9_0_707_inst_ack_0 : boolean;
  signal W_opcode_385_delayed_7_0_366_inst_req_0 : boolean;
  signal W_program_cnt_388_delayed_7_0_369_inst_req_1 : boolean;
  signal W_program_cnt_388_delayed_7_0_369_inst_ack_1 : boolean;
  signal RPIPE_mem_out_334_inst_ack_1 : boolean;
  signal if_stmt_312_branch_ack_1 : boolean;
  signal W_rs1_imm_652_delayed_9_0_701_inst_req_1 : boolean;
  signal MUX_699_inst_ack_1 : boolean;
  signal W_regWrite_655_delayed_9_0_707_inst_req_0 : boolean;
  signal call_stmt_728_call_req_1 : boolean;
  signal W_rs2_654_delayed_9_0_704_inst_req_1 : boolean;
  signal call_stmt_378_call_req_0 : boolean;
  signal call_stmt_378_call_ack_0 : boolean;
  signal call_stmt_378_call_req_1 : boolean;
  signal call_stmt_378_call_ack_1 : boolean;
  signal W_rs1_imm_652_delayed_9_0_701_inst_ack_1 : boolean;
  signal call_stmt_722_call_ack_1 : boolean;
  signal EQ_u8_u1_387_inst_req_0 : boolean;
  signal EQ_u8_u1_387_inst_ack_0 : boolean;
  signal call_stmt_722_call_req_1 : boolean;
  signal EQ_u8_u1_387_inst_req_1 : boolean;
  signal EQ_u8_u1_387_inst_ack_1 : boolean;
  signal EQ_u1_u1_686_inst_ack_1 : boolean;
  signal MUX_397_inst_req_0 : boolean;
  signal MUX_397_inst_ack_0 : boolean;
  signal MUX_397_inst_req_1 : boolean;
  signal MUX_397_inst_ack_1 : boolean;
  signal EQ_u1_u1_686_inst_req_1 : boolean;
  signal call_stmt_722_call_ack_0 : boolean;
  signal EQ_u8_u1_402_inst_req_0 : boolean;
  signal EQ_u8_u1_402_inst_ack_0 : boolean;
  signal call_stmt_722_call_req_0 : boolean;
  signal EQ_u8_u1_402_inst_req_1 : boolean;
  signal EQ_u8_u1_402_inst_ack_1 : boolean;
  signal EQ_u8_u1_407_inst_req_0 : boolean;
  signal EQ_u8_u1_407_inst_ack_0 : boolean;
  signal EQ_u8_u1_407_inst_req_1 : boolean;
  signal EQ_u8_u1_407_inst_ack_1 : boolean;
  signal EQ_u8_u1_412_inst_req_0 : boolean;
  signal EQ_u8_u1_412_inst_ack_0 : boolean;
  signal EQ_u8_u1_412_inst_req_1 : boolean;
  signal EQ_u8_u1_412_inst_ack_1 : boolean;
  signal EQ_u1_u1_686_inst_ack_0 : boolean;
  signal EQ_u8_u1_417_inst_req_0 : boolean;
  signal EQ_u8_u1_417_inst_ack_0 : boolean;
  signal EQ_u8_u1_417_inst_req_1 : boolean;
  signal EQ_u8_u1_417_inst_ack_1 : boolean;
  signal EQ_u1_u1_686_inst_req_0 : boolean;
  signal W_rd_656_delayed_9_0_710_inst_ack_1 : boolean;
  signal EQ_u8_u1_422_inst_req_0 : boolean;
  signal EQ_u8_u1_422_inst_ack_0 : boolean;
  signal W_rd_656_delayed_9_0_710_inst_req_1 : boolean;
  signal EQ_u8_u1_422_inst_req_1 : boolean;
  signal EQ_u8_u1_422_inst_ack_1 : boolean;
  signal EQ_u8_u1_427_inst_req_0 : boolean;
  signal EQ_u8_u1_427_inst_ack_0 : boolean;
  signal EQ_u8_u1_427_inst_req_1 : boolean;
  signal EQ_u8_u1_427_inst_ack_1 : boolean;
  signal W_rd_656_delayed_9_0_710_inst_ack_0 : boolean;
  signal EQ_u8_u1_432_inst_req_0 : boolean;
  signal EQ_u8_u1_432_inst_ack_0 : boolean;
  signal EQ_u8_u1_432_inst_req_1 : boolean;
  signal EQ_u8_u1_432_inst_ack_1 : boolean;
  signal EQ_u8_u1_437_inst_req_0 : boolean;
  signal EQ_u8_u1_437_inst_ack_0 : boolean;
  signal EQ_u8_u1_437_inst_req_1 : boolean;
  signal EQ_u8_u1_437_inst_ack_1 : boolean;
  signal EQ_u8_u1_442_inst_req_0 : boolean;
  signal EQ_u8_u1_442_inst_ack_0 : boolean;
  signal EQ_u8_u1_442_inst_req_1 : boolean;
  signal EQ_u8_u1_442_inst_ack_1 : boolean;
  signal EQ_u8_u1_447_inst_req_0 : boolean;
  signal EQ_u8_u1_447_inst_ack_0 : boolean;
  signal EQ_u8_u1_447_inst_req_1 : boolean;
  signal EQ_u8_u1_447_inst_ack_1 : boolean;
  signal OR_u32_u32_547_inst_req_0 : boolean;
  signal OR_u32_u32_547_inst_ack_0 : boolean;
  signal OR_u32_u32_547_inst_req_1 : boolean;
  signal OR_u32_u32_547_inst_ack_1 : boolean;
  signal W_addr_in_to_mem_606_inst_req_0 : boolean;
  signal W_addr_in_to_mem_606_inst_ack_0 : boolean;
  signal W_addr_in_to_mem_606_inst_req_1 : boolean;
  signal W_addr_in_to_mem_606_inst_ack_1 : boolean;
  signal W_memAddr_609_inst_req_0 : boolean;
  signal W_memAddr_609_inst_ack_0 : boolean;
  signal W_memAddr_609_inst_req_1 : boolean;
  signal W_memAddr_609_inst_ack_1 : boolean;
  signal W_is_uart_addr_600_delayed_6_0_620_inst_req_0 : boolean;
  signal W_is_uart_addr_600_delayed_6_0_620_inst_ack_0 : boolean;
  signal W_is_uart_addr_600_delayed_6_0_620_inst_req_1 : boolean;
  signal W_is_uart_addr_600_delayed_6_0_620_inst_ack_1 : boolean;
  signal W_memWrite_602_delayed_1_0_623_inst_req_0 : boolean;
  signal W_memWrite_602_delayed_1_0_623_inst_ack_0 : boolean;
  signal W_memWrite_602_delayed_1_0_623_inst_req_1 : boolean;
  signal W_memWrite_602_delayed_1_0_623_inst_ack_1 : boolean;
  signal CONCAT_u1_u9_629_inst_req_0 : boolean;
  signal CONCAT_u1_u9_629_inst_ack_0 : boolean;
  signal CONCAT_u1_u9_629_inst_req_1 : boolean;
  signal CONCAT_u1_u9_629_inst_ack_1 : boolean;
  signal CONCAT_u9_u64_637_inst_req_0 : boolean;
  signal CONCAT_u9_u64_637_inst_ack_0 : boolean;
  signal CONCAT_u9_u64_637_inst_req_1 : boolean;
  signal CONCAT_u9_u64_637_inst_ack_1 : boolean;
  signal WPIPE_mem_in_632_inst_req_0 : boolean;
  signal WPIPE_mem_in_632_inst_ack_0 : boolean;
  signal WPIPE_mem_in_632_inst_req_1 : boolean;
  signal WPIPE_mem_in_632_inst_ack_1 : boolean;
  signal RPIPE_mem_out_641_inst_req_0 : boolean;
  signal RPIPE_mem_out_641_inst_ack_0 : boolean;
  signal RPIPE_mem_out_641_inst_req_1 : boolean;
  signal RPIPE_mem_out_641_inst_ack_1 : boolean;
  signal call_stmt_645_call_req_0 : boolean;
  signal call_stmt_645_call_ack_0 : boolean;
  signal call_stmt_645_call_req_1 : boolean;
  signal call_stmt_645_call_ack_1 : boolean;
  signal W_regWrite_621_delayed_1_0_648_inst_req_0 : boolean;
  signal W_regWrite_621_delayed_1_0_648_inst_ack_0 : boolean;
  signal W_regWrite_621_delayed_1_0_648_inst_req_1 : boolean;
  signal W_regWrite_621_delayed_1_0_648_inst_ack_1 : boolean;
  signal W_memWrite_623_delayed_1_0_651_inst_req_0 : boolean;
  signal W_memWrite_623_delayed_1_0_651_inst_ack_0 : boolean;
  signal W_memWrite_623_delayed_1_0_651_inst_req_1 : boolean;
  signal W_memWrite_623_delayed_1_0_651_inst_ack_1 : boolean;
  signal EQ_u8_u1_669_inst_req_0 : boolean;
  signal EQ_u8_u1_669_inst_ack_0 : boolean;
  signal EQ_u8_u1_669_inst_req_1 : boolean;
  signal EQ_u8_u1_669_inst_ack_1 : boolean;
  signal W_memReadData_635_delayed_6_0_671_inst_req_0 : boolean;
  signal W_memReadData_635_delayed_6_0_671_inst_ack_0 : boolean;
  signal W_memReadData_635_delayed_6_0_671_inst_req_1 : boolean;
  signal W_memReadData_635_delayed_6_0_671_inst_ack_1 : boolean;
  signal EQ_u8_u1_677_inst_req_0 : boolean;
  signal EQ_u8_u1_677_inst_ack_0 : boolean;
  signal EQ_u8_u1_677_inst_req_1 : boolean;
  signal EQ_u8_u1_677_inst_ack_1 : boolean;
  signal type_cast_681_inst_req_0 : boolean;
  signal type_cast_681_inst_ack_0 : boolean;
  signal type_cast_681_inst_req_1 : boolean;
  signal type_cast_681_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "processor_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  processor_CP_545_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "processor_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= processor_CP_545_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= processor_CP_545_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= processor_CP_545_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  processor_CP_545: Block -- control-path 
    signal processor_CP_545_elements: BooleanArray(213 downto 0);
    -- 
  begin -- 
    processor_CP_545_elements(0) <= processor_CP_545_start;
    processor_CP_545_symbol <= processor_CP_545_elements(4);
    -- CP-element group 0:  branch  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	213 
    -- CP-element group 0:  members (7) 
      -- CP-element group 0: 	 branch_block_stmt_307/merge_stmt_308__entry__
      -- CP-element group 0: 	 branch_block_stmt_307/branch_block_stmt_307__entry__
      -- CP-element group 0: 	 branch_block_stmt_307/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_307/merge_stmt_308_dead_link/$entry
      -- CP-element group 0: 	 branch_block_stmt_307/merge_stmt_308__entry___PhiReq/$entry
      -- CP-element group 0: 	 branch_block_stmt_307/merge_stmt_308__entry___PhiReq/$exit
      -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	213 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Sample/ack
      -- CP-element group 1: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_sample_completed_
      -- 
    ack_584_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_cmd_309_inst_ack_0, ack => processor_CP_545_elements(1)); -- 
    -- CP-element group 2:  branch  transition  place  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	213 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	4 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (27) 
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Update/ca
      -- CP-element group 2: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Update/ack
      -- CP-element group 2: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_if_link/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/EQ_u8_u1_315_place
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Sample/ra
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Sample/rr
      -- CP-element group 2: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_update_completed_
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Sample/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Sample/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/assign_stmt_311/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_dead_link/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/EQ_u8_u1_315_inputs/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/EQ_u8_u1_315_inputs/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/$exit
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_else_link/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Update/cr
      -- CP-element group 2: 	 branch_block_stmt_307/assign_stmt_311__exit__
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/branch_req
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312__entry__
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Update/$entry
      -- CP-element group 2: 	 branch_block_stmt_307/if_stmt_312_eval_test/EQ_u8_u1_315/SplitProtocol/Update/$exit
      -- 
    ack_589_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_cmd_309_inst_ack_1, ack => processor_CP_545_elements(2)); -- 
    branch_req_616_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_616_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(2), ack => if_stmt_312_branch_req_0); -- 
    -- CP-element group 3:  transition  place  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	6 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 branch_block_stmt_307/if_stmt_312_if_link/$exit
      -- CP-element group 3: 	 branch_block_stmt_307/branch_block_stmt_316/$entry
      -- CP-element group 3: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317__entry__
      -- CP-element group 3: 	 branch_block_stmt_307/branch_block_stmt_316/branch_block_stmt_316__entry__
      -- CP-element group 3: 	 branch_block_stmt_307/branch_block_stmt_316__entry__
      -- CP-element group 3: 	 branch_block_stmt_307/if_stmt_312_if_link/if_choice_transition
      -- 
    if_choice_transition_621_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_312_branch_ack_1, ack => processor_CP_545_elements(3)); -- 
    -- CP-element group 4:  merge  transition  place  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	2 
    -- CP-element group 4: successors 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 branch_block_stmt_307/branch_block_stmt_307__exit__
      -- CP-element group 4: 	 branch_block_stmt_307/$exit
      -- CP-element group 4: 	 $exit
      -- CP-element group 4: 	 branch_block_stmt_307/if_stmt_312__exit__
      -- CP-element group 4: 	 branch_block_stmt_307/if_stmt_312_else_link/else_choice_transition
      -- CP-element group 4: 	 branch_block_stmt_307/if_stmt_312_else_link/$exit
      -- 
    else_choice_transition_625_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_312_branch_ack_0, ack => processor_CP_545_elements(4)); -- 
    -- CP-element group 5:  transition  place  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	212 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	213 
    -- CP-element group 5:  members (7) 
      -- CP-element group 5: 	 branch_block_stmt_307/check_for_start_PhiReq/$entry
      -- CP-element group 5: 	 branch_block_stmt_307/check_for_start_PhiReq/$exit
      -- CP-element group 5: 	 branch_block_stmt_307/check_for_start
      -- CP-element group 5: 	 branch_block_stmt_307/branch_block_stmt_316__exit__
      -- CP-element group 5: 	 branch_block_stmt_307/branch_block_stmt_316/$exit
      -- CP-element group 5: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317__exit__
      -- CP-element group 5: 	 branch_block_stmt_307/branch_block_stmt_316/branch_block_stmt_316__exit__
      -- 
    processor_CP_545_elements(5) <= processor_CP_545_elements(212);
    -- CP-element group 6:  transition  place  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	3 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	12 
    -- CP-element group 6:  members (2) 
      -- CP-element group 6: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317__entry__
      -- CP-element group 6: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/$entry
      -- 
    processor_CP_545_elements(6) <= processor_CP_545_elements(3);
    -- CP-element group 7:  merge  place  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	212 
    -- CP-element group 7:  members (1) 
      -- CP-element group 7: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317__exit__
      -- 
    -- Element group processor_CP_545_elements(7) is bound as output of CP function.
    -- CP-element group 8:  merge  place  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	11 
    -- CP-element group 8:  members (1) 
      -- CP-element group 8: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_back
      -- 
    -- Element group processor_CP_545_elements(8) is bound as output of CP function.
    -- CP-element group 9:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	14 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	210 
    -- CP-element group 9: 	211 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_exit/$entry
      -- CP-element group 9: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_taken/$entry
      -- CP-element group 9: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/condition_done
      -- 
    processor_CP_545_elements(9) <= processor_CP_545_elements(14);
    -- CP-element group 10:  branch  place  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	209 
    -- CP-element group 10: successors 
    -- CP-element group 10:  members (1) 
      -- CP-element group 10: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_body_done
      -- 
    processor_CP_545_elements(10) <= processor_CP_545_elements(209);
    -- CP-element group 11:  transition  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	8 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	20 
    -- CP-element group 11:  members (1) 
      -- CP-element group 11: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/back_edge_to_loop_body
      -- 
    processor_CP_545_elements(11) <= processor_CP_545_elements(8);
    -- CP-element group 12:  transition  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	6 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	22 
    -- CP-element group 12:  members (1) 
      -- CP-element group 12: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/first_time_through_loop_body
      -- 
    processor_CP_545_elements(12) <= processor_CP_545_elements(6);
    -- CP-element group 13:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	17 
    -- CP-element group 13: 	16 
    -- CP-element group 13: 	40 
    -- CP-element group 13: 	207 
    -- CP-element group 13:  members (2) 
      -- CP-element group 13: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/loop_body_start
      -- CP-element group 13: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/$entry
      -- 
    -- Element group processor_CP_545_elements(13) is bound as output of CP function.
    -- CP-element group 14:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	19 
    -- CP-element group 14: 	43 
    -- CP-element group 14: 	207 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	9 
    -- CP-element group 14:  members (1) 
      -- CP-element group 14: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/condition_evaluated
      -- 
    condition_evaluated_650_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_650_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(14), ack => do_while_stmt_317_branch_req_0); -- 
    processor_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 20,1 => 20,2 => 20);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(19) & processor_CP_545_elements(43) & processor_CP_545_elements(207);
      gj_processor_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	16 
    -- CP-element group 15: marked-predecessors 
    -- CP-element group 15: 	19 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (2) 
      -- CP-element group 15: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_sample_start__ps
      -- CP-element group 15: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/aggregated_phi_sample_req
      -- 
    processor_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(16) & processor_CP_545_elements(19);
      gj_processor_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  join  transition  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	13 
    -- CP-element group 16: marked-predecessors 
    -- CP-element group 16: 	59 
    -- CP-element group 16: 	18 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	15 
    -- CP-element group 16:  members (1) 
      -- CP-element group 16: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_sample_start_
      -- 
    processor_cp_element_group_16: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 20,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_16"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(13) & processor_CP_545_elements(59) & processor_CP_545_elements(18);
      gj_processor_cp_element_group_16 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(16), clk => clk, reset => reset); --
    end block;
    -- CP-element group 17:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	13 
    -- CP-element group 17: marked-predecessors 
    -- CP-element group 17: 	54 
    -- CP-element group 17: 	35 
    -- CP-element group 17: 	19 
    -- CP-element group 17: 	169 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_update_start__ps
      -- CP-element group 17: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_update_start_
      -- CP-element group 17: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/aggregated_phi_update_req
      -- 
    processor_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 20,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= processor_CP_545_elements(13) & processor_CP_545_elements(54) & processor_CP_545_elements(35) & processor_CP_545_elements(19) & processor_CP_545_elements(169);
      gj_processor_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	57 
    -- CP-element group 18: marked-successors 
    -- CP-element group 18: 	16 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_sample_completed__ps
      -- CP-element group 18: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_sample_completed_
      -- CP-element group 18: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/aggregated_phi_sample_ack
      -- 
    -- Element group processor_CP_545_elements(18) is bound as output of CP function.
    -- CP-element group 19:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	52 
    -- CP-element group 19: 	14 
    -- CP-element group 19: 	33 
    -- CP-element group 19: 	167 
    -- CP-element group 19: marked-successors 
    -- CP-element group 19: 	17 
    -- CP-element group 19: 	15 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_update_completed_
      -- CP-element group 19: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/aggregated_phi_update_ack
      -- CP-element group 19: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_update_completed__ps
      -- 
    -- Element group processor_CP_545_elements(19) is bound as output of CP function.
    -- CP-element group 20:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	11 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (1) 
      -- CP-element group 20: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_loopback_trigger
      -- 
    processor_CP_545_elements(20) <= processor_CP_545_elements(11);
    -- CP-element group 21:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (2) 
      -- CP-element group 21: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_loopback_sample_req_ps
      -- CP-element group 21: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_loopback_sample_req
      -- 
    phi_stmt_319_loopback_sample_req_665_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_319_loopback_sample_req_665_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(21), ack => phi_stmt_319_req_1); -- 
    -- Element group processor_CP_545_elements(21) is bound as output of CP function.
    -- CP-element group 22:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	12 
    -- CP-element group 22: successors 
    -- CP-element group 22:  members (1) 
      -- CP-element group 22: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_entry_trigger
      -- 
    processor_CP_545_elements(22) <= processor_CP_545_elements(12);
    -- CP-element group 23:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (2) 
      -- CP-element group 23: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_entry_sample_req
      -- CP-element group 23: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_entry_sample_req_ps
      -- 
    phi_stmt_319_entry_sample_req_668_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_319_entry_sample_req_668_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(23), ack => phi_stmt_319_req_0); -- 
    -- Element group processor_CP_545_elements(23) is bound as output of CP function.
    -- CP-element group 24:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (2) 
      -- CP-element group 24: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_phi_mux_ack_ps
      -- CP-element group 24: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/phi_stmt_319_phi_mux_ack
      -- 
    phi_stmt_319_phi_mux_ack_671_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_319_ack_0, ack => processor_CP_545_elements(24)); -- 
    -- CP-element group 25:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (4) 
      -- CP-element group 25: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_sample_completed__ps
      -- CP-element group 25: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_sample_start__ps
      -- CP-element group 25: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_sample_completed_
      -- CP-element group 25: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_sample_start_
      -- 
    -- Element group processor_CP_545_elements(25) is bound as output of CP function.
    -- CP-element group 26:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	28 
    -- CP-element group 26:  members (2) 
      -- CP-element group 26: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_update_start__ps
      -- CP-element group 26: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_update_start_
      -- 
    -- Element group processor_CP_545_elements(26) is bound as output of CP function.
    -- CP-element group 27:  join  transition  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	28 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (1) 
      -- CP-element group 27: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_update_completed__ps
      -- 
    processor_CP_545_elements(27) <= processor_CP_545_elements(28);
    -- CP-element group 28:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	26 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	27 
    -- CP-element group 28:  members (1) 
      -- CP-element group 28: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/konst_321_update_completed_
      -- 
    -- Element group processor_CP_545_elements(28) is a control-delay.
    cp_element_28_delay: control_delay_element  generic map(name => " 28_delay", delay_value => 1)  port map(req => processor_CP_545_elements(26), ack => processor_CP_545_elements(28), clk => clk, reset =>reset);
    -- CP-element group 29:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	31 
    -- CP-element group 29:  members (4) 
      -- CP-element group 29: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_sample_start__ps
      -- CP-element group 29: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_sample_start_
      -- CP-element group 29: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Sample/req
      -- CP-element group 29: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Sample/$entry
      -- 
    req_692_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_692_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(29), ack => n_program_cnt_378_322_buf_req_0); -- 
    -- Element group processor_CP_545_elements(29) is bound as output of CP function.
    -- CP-element group 30:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	32 
    -- CP-element group 30:  members (4) 
      -- CP-element group 30: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Update/req
      -- CP-element group 30: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_update_start_
      -- CP-element group 30: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_update_start__ps
      -- CP-element group 30: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Update/$entry
      -- 
    req_697_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_697_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(30), ack => n_program_cnt_378_322_buf_req_1); -- 
    -- Element group processor_CP_545_elements(30) is bound as output of CP function.
    -- CP-element group 31:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	29 
    -- CP-element group 31: successors 
    -- CP-element group 31:  members (4) 
      -- CP-element group 31: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_sample_completed__ps
      -- CP-element group 31: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Sample/ack
      -- CP-element group 31: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_sample_completed_
      -- 
    ack_693_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => n_program_cnt_378_322_buf_ack_0, ack => processor_CP_545_elements(31)); -- 
    -- CP-element group 32:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	30 
    -- CP-element group 32: successors 
    -- CP-element group 32:  members (4) 
      -- CP-element group 32: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Update/ack
      -- CP-element group 32: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_update_completed__ps
      -- CP-element group 32: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/R_n_program_cnt_322_update_completed_
      -- 
    ack_698_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => n_program_cnt_378_322_buf_ack_1, ack => processor_CP_545_elements(32)); -- 
    -- CP-element group 33:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	19 
    -- CP-element group 33: marked-predecessors 
    -- CP-element group 33: 	35 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	35 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Sample/$entry
      -- CP-element group 33: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Sample/rr
      -- CP-element group 33: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_sample_start_
      -- 
    rr_707_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_707_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(33), ack => CONCAT_u9_u64_331_inst_req_0); -- 
    processor_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(19) & processor_CP_545_elements(35);
      gj_processor_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: marked-predecessors 
    -- CP-element group 34: 	36 
    -- CP-element group 34: 	38 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	36 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Update/cr
      -- CP-element group 34: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Update/$entry
      -- CP-element group 34: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_update_start_
      -- 
    cr_712_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_712_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(34), ack => CONCAT_u9_u64_331_inst_req_1); -- 
    processor_cp_element_group_34: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_34"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(36) & processor_CP_545_elements(38);
      gj_processor_cp_element_group_34 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(34), clk => clk, reset => reset); --
    end block;
    -- CP-element group 35:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	33 
    -- CP-element group 35: successors 
    -- CP-element group 35: marked-successors 
    -- CP-element group 35: 	17 
    -- CP-element group 35: 	33 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Sample/$exit
      -- CP-element group 35: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Sample/ra
      -- CP-element group 35: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_sample_completed_
      -- 
    ra_708_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u9_u64_331_inst_ack_0, ack => processor_CP_545_elements(35)); -- 
    -- CP-element group 36:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	34 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	37 
    -- CP-element group 36: marked-successors 
    -- CP-element group 36: 	34 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Update/ca
      -- CP-element group 36: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_Update/$exit
      -- CP-element group 36: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_331_update_completed_
      -- 
    ca_713_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u9_u64_331_inst_ack_1, ack => processor_CP_545_elements(36)); -- 
    -- CP-element group 37:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	36 
    -- CP-element group 37: marked-predecessors 
    -- CP-element group 37: 	39 
    -- CP-element group 37: 	138 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	38 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_sample_start_
      -- CP-element group 37: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Sample/req
      -- CP-element group 37: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Sample/$entry
      -- 
    req_721_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_721_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(37), ack => WPIPE_mem_in_324_inst_req_0); -- 
    processor_cp_element_group_37: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_37"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(36) & processor_CP_545_elements(39) & processor_CP_545_elements(138);
      gj_processor_cp_element_group_37 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(37), clk => clk, reset => reset); --
    end block;
    -- CP-element group 38:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	37 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38: marked-successors 
    -- CP-element group 38: 	34 
    -- CP-element group 38:  members (6) 
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_update_start_
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Sample/ack
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Sample/$exit
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Update/req
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Update/$entry
      -- CP-element group 38: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_sample_completed_
      -- 
    ack_722_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_mem_in_324_inst_ack_0, ack => processor_CP_545_elements(38)); -- 
    req_726_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_726_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(38), ack => WPIPE_mem_in_324_inst_req_1); -- 
    -- CP-element group 39:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	136 
    -- CP-element group 39: marked-successors 
    -- CP-element group 39: 	37 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_update_completed_
      -- CP-element group 39: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Update/$exit
      -- CP-element group 39: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_324_Update/ack
      -- 
    ack_727_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_mem_in_324_inst_ack_1, ack => processor_CP_545_elements(39)); -- 
    -- CP-element group 40:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	13 
    -- CP-element group 40: marked-predecessors 
    -- CP-element group 40: 	43 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	42 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_sample_start_
      -- CP-element group 40: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Sample/rr
      -- CP-element group 40: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Sample/$entry
      -- 
    rr_735_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_735_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(40), ack => RPIPE_mem_out_334_inst_req_0); -- 
    processor_cp_element_group_40: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_40"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(13) & processor_CP_545_elements(43);
      gj_processor_cp_element_group_40 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(40), clk => clk, reset => reset); --
    end block;
    -- CP-element group 41:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	42 
    -- CP-element group 41: marked-predecessors 
    -- CP-element group 41: 	46 
    -- CP-element group 41: 	50 
    -- CP-element group 41: 	62 
    -- CP-element group 41: 	66 
    -- CP-element group 41: 	70 
    -- CP-element group 41: 	74 
    -- CP-element group 41: 	78 
    -- CP-element group 41: 	82 
    -- CP-element group 41: 	86 
    -- CP-element group 41: 	90 
    -- CP-element group 41: 	94 
    -- CP-element group 41: 	98 
    -- CP-element group 41: 	102 
    -- CP-element group 41: 	106 
    -- CP-element group 41: 	114 
    -- CP-element group 41: 	118 
    -- CP-element group 41: 	126 
    -- CP-element group 41: 	142 
    -- CP-element group 41: 	149 
    -- CP-element group 41: 	153 
    -- CP-element group 41: 	157 
    -- CP-element group 41: 	165 
    -- CP-element group 41: 	173 
    -- CP-element group 41: 	181 
    -- CP-element group 41: 	185 
    -- CP-element group 41: 	189 
    -- CP-element group 41: 	193 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	43 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Update/$entry
      -- CP-element group 41: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_update_start_
      -- CP-element group 41: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Update/cr
      -- 
    cr_740_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_740_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(41), ack => RPIPE_mem_out_334_inst_req_1); -- 
    processor_cp_element_group_41: block -- 
      constant place_capacities: IntegerArray(0 to 27) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1,14 => 1,15 => 1,16 => 1,17 => 1,18 => 1,19 => 1,20 => 1,21 => 1,22 => 1,23 => 1,24 => 1,25 => 1,26 => 1,27 => 1);
      constant place_markings: IntegerArray(0 to 27)  := (0 => 0,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1,14 => 1,15 => 1,16 => 1,17 => 1,18 => 1,19 => 1,20 => 1,21 => 1,22 => 1,23 => 1,24 => 1,25 => 1,26 => 1,27 => 1);
      constant place_delays: IntegerArray(0 to 27) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 0,14 => 0,15 => 0,16 => 0,17 => 0,18 => 0,19 => 0,20 => 0,21 => 0,22 => 0,23 => 0,24 => 0,25 => 0,26 => 0,27 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_41"; 
      signal preds: BooleanArray(1 to 28); -- 
    begin -- 
      preds <= processor_CP_545_elements(42) & processor_CP_545_elements(46) & processor_CP_545_elements(50) & processor_CP_545_elements(62) & processor_CP_545_elements(66) & processor_CP_545_elements(70) & processor_CP_545_elements(74) & processor_CP_545_elements(78) & processor_CP_545_elements(82) & processor_CP_545_elements(86) & processor_CP_545_elements(90) & processor_CP_545_elements(94) & processor_CP_545_elements(98) & processor_CP_545_elements(102) & processor_CP_545_elements(106) & processor_CP_545_elements(114) & processor_CP_545_elements(118) & processor_CP_545_elements(126) & processor_CP_545_elements(142) & processor_CP_545_elements(149) & processor_CP_545_elements(153) & processor_CP_545_elements(157) & processor_CP_545_elements(165) & processor_CP_545_elements(173) & processor_CP_545_elements(181) & processor_CP_545_elements(185) & processor_CP_545_elements(189) & processor_CP_545_elements(193);
      gj_processor_cp_element_group_41 : generic_join generic map(name => joinName, number_of_predecessors => 28, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(41), clk => clk, reset => reset); --
    end block;
    -- CP-element group 42:  transition  input  bypass  pipeline-parent 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	40 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	41 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_sample_completed_
      -- CP-element group 42: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Sample/ra
      -- CP-element group 42: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Sample/$exit
      -- 
    ra_736_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_mem_out_334_inst_ack_0, ack => processor_CP_545_elements(42)); -- 
    -- CP-element group 43:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	41 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	44 
    -- CP-element group 43: 	48 
    -- CP-element group 43: 	60 
    -- CP-element group 43: 	64 
    -- CP-element group 43: 	68 
    -- CP-element group 43: 	72 
    -- CP-element group 43: 	76 
    -- CP-element group 43: 	80 
    -- CP-element group 43: 	84 
    -- CP-element group 43: 	88 
    -- CP-element group 43: 	92 
    -- CP-element group 43: 	14 
    -- CP-element group 43: 	96 
    -- CP-element group 43: 	100 
    -- CP-element group 43: 	104 
    -- CP-element group 43: 	112 
    -- CP-element group 43: 	116 
    -- CP-element group 43: 	124 
    -- CP-element group 43: 	139 
    -- CP-element group 43: 	147 
    -- CP-element group 43: 	151 
    -- CP-element group 43: 	155 
    -- CP-element group 43: 	163 
    -- CP-element group 43: 	171 
    -- CP-element group 43: 	179 
    -- CP-element group 43: 	183 
    -- CP-element group 43: 	187 
    -- CP-element group 43: 	191 
    -- CP-element group 43: marked-successors 
    -- CP-element group 43: 	40 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Update/$exit
      -- CP-element group 43: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_update_completed_
      -- CP-element group 43: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_334_Update/ca
      -- 
    ca_741_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_mem_out_334_inst_ack_1, ack => processor_CP_545_elements(43)); -- 
    -- CP-element group 44:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	43 
    -- CP-element group 44: marked-predecessors 
    -- CP-element group 44: 	46 
    -- CP-element group 44: 	198 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	46 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Sample/crr
      -- 
    crr_749_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_749_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(44), ack => call_stmt_361_call_req_0); -- 
    processor_cp_element_group_44: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_44"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(46) & processor_CP_545_elements(198);
      gj_processor_cp_element_group_44 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(44), clk => clk, reset => reset); --
    end block;
    -- CP-element group 45:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: marked-predecessors 
    -- CP-element group 45: 	47 
    -- CP-element group 45: 	58 
    -- CP-element group 45: 	110 
    -- CP-element group 45: 	134 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	47 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Update/$entry
      -- CP-element group 45: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Update/ccr
      -- CP-element group 45: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_update_start_
      -- 
    ccr_754_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_754_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(45), ack => call_stmt_361_call_req_1); -- 
    processor_cp_element_group_45: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_45"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= processor_CP_545_elements(47) & processor_CP_545_elements(58) & processor_CP_545_elements(110) & processor_CP_545_elements(134);
      gj_processor_cp_element_group_45 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(45), clk => clk, reset => reset); --
    end block;
    -- CP-element group 46:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	44 
    -- CP-element group 46: successors 
    -- CP-element group 46: marked-successors 
    -- CP-element group 46: 	44 
    -- CP-element group 46: 	41 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Sample/cra
      -- CP-element group 46: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Sample/$exit
      -- CP-element group 46: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_sample_completed_
      -- 
    cra_750_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_361_call_ack_0, ack => processor_CP_545_elements(46)); -- 
    -- CP-element group 47:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	45 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	56 
    -- CP-element group 47: 	108 
    -- CP-element group 47: 	132 
    -- CP-element group 47: 	208 
    -- CP-element group 47: marked-successors 
    -- CP-element group 47: 	45 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Update/$exit
      -- CP-element group 47: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_update_completed_
      -- CP-element group 47: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_Update/cca
      -- 
    cca_755_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_361_call_ack_1, ack => processor_CP_545_elements(47)); -- 
    -- CP-element group 48:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	43 
    -- CP-element group 48: marked-predecessors 
    -- CP-element group 48: 	50 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	50 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_sample_start_
      -- CP-element group 48: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Sample/$entry
      -- CP-element group 48: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Sample/req
      -- 
    req_763_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_763_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(48), ack => W_opcode_385_delayed_7_0_366_inst_req_0); -- 
    processor_cp_element_group_48: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_48"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(50);
      gj_processor_cp_element_group_48 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(48), clk => clk, reset => reset); --
    end block;
    -- CP-element group 49:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: marked-predecessors 
    -- CP-element group 49: 	51 
    -- CP-element group 49: 	58 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	51 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_update_start_
      -- CP-element group 49: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Update/$entry
      -- CP-element group 49: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Update/req
      -- 
    req_768_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_768_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(49), ack => W_opcode_385_delayed_7_0_366_inst_req_1); -- 
    processor_cp_element_group_49: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_49"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(51) & processor_CP_545_elements(58);
      gj_processor_cp_element_group_49 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(49), clk => clk, reset => reset); --
    end block;
    -- CP-element group 50:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	48 
    -- CP-element group 50: successors 
    -- CP-element group 50: marked-successors 
    -- CP-element group 50: 	48 
    -- CP-element group 50: 	41 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Sample/ack
      -- CP-element group 50: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_sample_completed_
      -- CP-element group 50: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Sample/$exit
      -- 
    ack_764_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_opcode_385_delayed_7_0_366_inst_ack_0, ack => processor_CP_545_elements(50)); -- 
    -- CP-element group 51:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	49 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	56 
    -- CP-element group 51: marked-successors 
    -- CP-element group 51: 	49 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_update_completed_
      -- CP-element group 51: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Update/$exit
      -- CP-element group 51: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_368_Update/ack
      -- 
    ack_769_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_opcode_385_delayed_7_0_366_inst_ack_1, ack => processor_CP_545_elements(51)); -- 
    -- CP-element group 52:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	19 
    -- CP-element group 52: marked-predecessors 
    -- CP-element group 52: 	54 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	54 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Sample/$entry
      -- CP-element group 52: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_sample_start_
      -- CP-element group 52: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Sample/req
      -- 
    req_777_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_777_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(52), ack => W_program_cnt_388_delayed_7_0_369_inst_req_0); -- 
    processor_cp_element_group_52: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_52"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(19) & processor_CP_545_elements(54);
      gj_processor_cp_element_group_52 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(52), clk => clk, reset => reset); --
    end block;
    -- CP-element group 53:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: marked-predecessors 
    -- CP-element group 53: 	55 
    -- CP-element group 53: 	58 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	55 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_update_start_
      -- CP-element group 53: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Update/$entry
      -- CP-element group 53: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Update/req
      -- 
    req_782_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_782_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(53), ack => W_program_cnt_388_delayed_7_0_369_inst_req_1); -- 
    processor_cp_element_group_53: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_53"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(55) & processor_CP_545_elements(58);
      gj_processor_cp_element_group_53 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(53), clk => clk, reset => reset); --
    end block;
    -- CP-element group 54:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	52 
    -- CP-element group 54: successors 
    -- CP-element group 54: marked-successors 
    -- CP-element group 54: 	52 
    -- CP-element group 54: 	17 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Sample/$exit
      -- CP-element group 54: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_sample_completed_
      -- CP-element group 54: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Sample/ack
      -- 
    ack_778_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_program_cnt_388_delayed_7_0_369_inst_ack_0, ack => processor_CP_545_elements(54)); -- 
    -- CP-element group 55:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	53 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	56 
    -- CP-element group 55: marked-successors 
    -- CP-element group 55: 	53 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_update_completed_
      -- CP-element group 55: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Update/$exit
      -- CP-element group 55: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_371_Update/ack
      -- 
    ack_783_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_program_cnt_388_delayed_7_0_369_inst_ack_1, ack => processor_CP_545_elements(55)); -- 
    -- CP-element group 56:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	47 
    -- CP-element group 56: 	51 
    -- CP-element group 56: 	55 
    -- CP-element group 56: marked-predecessors 
    -- CP-element group 56: 	58 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	58 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_sample_start_
      -- CP-element group 56: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Sample/$entry
      -- CP-element group 56: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Sample/crr
      -- 
    crr_791_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_791_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(56), ack => call_stmt_378_call_req_0); -- 
    processor_cp_element_group_56: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_56"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= processor_CP_545_elements(47) & processor_CP_545_elements(51) & processor_CP_545_elements(55) & processor_CP_545_elements(58);
      gj_processor_cp_element_group_56 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(56), clk => clk, reset => reset); --
    end block;
    -- CP-element group 57:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	18 
    -- CP-element group 57: marked-predecessors 
    -- CP-element group 57: 	59 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	59 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_update_start_
      -- CP-element group 57: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Update/$entry
      -- CP-element group 57: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Update/ccr
      -- 
    ccr_796_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_796_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(57), ack => call_stmt_378_call_req_1); -- 
    processor_cp_element_group_57: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_57"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(18) & processor_CP_545_elements(59);
      gj_processor_cp_element_group_57 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(57), clk => clk, reset => reset); --
    end block;
    -- CP-element group 58:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	56 
    -- CP-element group 58: successors 
    -- CP-element group 58: marked-successors 
    -- CP-element group 58: 	45 
    -- CP-element group 58: 	49 
    -- CP-element group 58: 	53 
    -- CP-element group 58: 	56 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_sample_completed_
      -- CP-element group 58: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Sample/$exit
      -- CP-element group 58: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Sample/cra
      -- 
    cra_792_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_378_call_ack_0, ack => processor_CP_545_elements(58)); -- 
    -- CP-element group 59:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	57 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	209 
    -- CP-element group 59: marked-successors 
    -- CP-element group 59: 	57 
    -- CP-element group 59: 	16 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_update_completed_
      -- CP-element group 59: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Update/$exit
      -- CP-element group 59: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_378_Update/cca
      -- 
    cca_797_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_378_call_ack_1, ack => processor_CP_545_elements(59)); -- 
    -- CP-element group 60:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	43 
    -- CP-element group 60: marked-predecessors 
    -- CP-element group 60: 	62 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	62 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_sample_start_
      -- CP-element group 60: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Sample/$entry
      -- CP-element group 60: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Sample/rr
      -- 
    rr_805_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_805_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(60), ack => EQ_u8_u1_387_inst_req_0); -- 
    processor_cp_element_group_60: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_60"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(62);
      gj_processor_cp_element_group_60 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(60), clk => clk, reset => reset); --
    end block;
    -- CP-element group 61:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: marked-predecessors 
    -- CP-element group 61: 	63 
    -- CP-element group 61: 	110 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	63 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_update_start_
      -- CP-element group 61: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Update/$entry
      -- CP-element group 61: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Update/cr
      -- 
    cr_810_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_810_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(61), ack => EQ_u8_u1_387_inst_req_1); -- 
    processor_cp_element_group_61: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_61"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(63) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_61 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(61), clk => clk, reset => reset); --
    end block;
    -- CP-element group 62:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	60 
    -- CP-element group 62: successors 
    -- CP-element group 62: marked-successors 
    -- CP-element group 62: 	60 
    -- CP-element group 62: 	41 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_sample_completed_
      -- CP-element group 62: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Sample/$exit
      -- CP-element group 62: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Sample/ra
      -- 
    ra_806_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_387_inst_ack_0, ack => processor_CP_545_elements(62)); -- 
    -- CP-element group 63:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	61 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	108 
    -- CP-element group 63: marked-successors 
    -- CP-element group 63: 	61 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_update_completed_
      -- CP-element group 63: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Update/$exit
      -- CP-element group 63: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_387_Update/ca
      -- 
    ca_811_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_387_inst_ack_1, ack => processor_CP_545_elements(63)); -- 
    -- CP-element group 64:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	43 
    -- CP-element group 64: marked-predecessors 
    -- CP-element group 64: 	66 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	66 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_start/$entry
      -- CP-element group 64: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_start/req
      -- 
    req_819_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_819_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(64), ack => MUX_397_inst_req_0); -- 
    processor_cp_element_group_64: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_64"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(66);
      gj_processor_cp_element_group_64 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(64), clk => clk, reset => reset); --
    end block;
    -- CP-element group 65:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: marked-predecessors 
    -- CP-element group 65: 	67 
    -- CP-element group 65: 	110 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	67 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_update_start_
      -- CP-element group 65: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_complete/$entry
      -- CP-element group 65: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_complete/req
      -- 
    req_824_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_824_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(65), ack => MUX_397_inst_req_1); -- 
    processor_cp_element_group_65: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_65"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(67) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_65 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(65), clk => clk, reset => reset); --
    end block;
    -- CP-element group 66:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	64 
    -- CP-element group 66: successors 
    -- CP-element group 66: marked-successors 
    -- CP-element group 66: 	64 
    -- CP-element group 66: 	41 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_sample_completed_
      -- CP-element group 66: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_start/$exit
      -- CP-element group 66: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_start/ack
      -- 
    ack_820_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_397_inst_ack_0, ack => processor_CP_545_elements(66)); -- 
    -- CP-element group 67:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	65 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	108 
    -- CP-element group 67: marked-successors 
    -- CP-element group 67: 	65 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_update_completed_
      -- CP-element group 67: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_complete/$exit
      -- CP-element group 67: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_397_complete/ack
      -- 
    ack_825_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_397_inst_ack_1, ack => processor_CP_545_elements(67)); -- 
    -- CP-element group 68:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	43 
    -- CP-element group 68: marked-predecessors 
    -- CP-element group 68: 	70 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	70 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_sample_start_
      -- CP-element group 68: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Sample/$entry
      -- CP-element group 68: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Sample/rr
      -- 
    rr_833_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_833_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(68), ack => EQ_u8_u1_402_inst_req_0); -- 
    processor_cp_element_group_68: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_68"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(70);
      gj_processor_cp_element_group_68 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(68), clk => clk, reset => reset); --
    end block;
    -- CP-element group 69:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: marked-predecessors 
    -- CP-element group 69: 	71 
    -- CP-element group 69: 	110 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	71 
    -- CP-element group 69:  members (3) 
      -- CP-element group 69: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_update_start_
      -- CP-element group 69: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Update/$entry
      -- CP-element group 69: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Update/cr
      -- 
    cr_838_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_838_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(69), ack => EQ_u8_u1_402_inst_req_1); -- 
    processor_cp_element_group_69: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_69"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(71) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_69 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(69), clk => clk, reset => reset); --
    end block;
    -- CP-element group 70:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	68 
    -- CP-element group 70: successors 
    -- CP-element group 70: marked-successors 
    -- CP-element group 70: 	68 
    -- CP-element group 70: 	41 
    -- CP-element group 70:  members (3) 
      -- CP-element group 70: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_sample_completed_
      -- CP-element group 70: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Sample/$exit
      -- CP-element group 70: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Sample/ra
      -- 
    ra_834_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_402_inst_ack_0, ack => processor_CP_545_elements(70)); -- 
    -- CP-element group 71:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	69 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	108 
    -- CP-element group 71: marked-successors 
    -- CP-element group 71: 	69 
    -- CP-element group 71:  members (3) 
      -- CP-element group 71: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_update_completed_
      -- CP-element group 71: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Update/$exit
      -- CP-element group 71: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_402_Update/ca
      -- 
    ca_839_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_402_inst_ack_1, ack => processor_CP_545_elements(71)); -- 
    -- CP-element group 72:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	43 
    -- CP-element group 72: marked-predecessors 
    -- CP-element group 72: 	74 
    -- CP-element group 72: successors 
    -- CP-element group 72: 	74 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_sample_start_
      -- CP-element group 72: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Sample/$entry
      -- CP-element group 72: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Sample/rr
      -- 
    rr_847_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_847_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(72), ack => EQ_u8_u1_407_inst_req_0); -- 
    processor_cp_element_group_72: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_72"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(74);
      gj_processor_cp_element_group_72 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(72), clk => clk, reset => reset); --
    end block;
    -- CP-element group 73:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: marked-predecessors 
    -- CP-element group 73: 	75 
    -- CP-element group 73: 	110 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	75 
    -- CP-element group 73:  members (3) 
      -- CP-element group 73: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_update_start_
      -- CP-element group 73: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Update/$entry
      -- CP-element group 73: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Update/cr
      -- 
    cr_852_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_852_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(73), ack => EQ_u8_u1_407_inst_req_1); -- 
    processor_cp_element_group_73: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_73"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(75) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_73 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(73), clk => clk, reset => reset); --
    end block;
    -- CP-element group 74:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	72 
    -- CP-element group 74: successors 
    -- CP-element group 74: marked-successors 
    -- CP-element group 74: 	72 
    -- CP-element group 74: 	41 
    -- CP-element group 74:  members (3) 
      -- CP-element group 74: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_sample_completed_
      -- CP-element group 74: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Sample/$exit
      -- CP-element group 74: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Sample/ra
      -- 
    ra_848_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 74_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_407_inst_ack_0, ack => processor_CP_545_elements(74)); -- 
    -- CP-element group 75:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	73 
    -- CP-element group 75: successors 
    -- CP-element group 75: 	108 
    -- CP-element group 75: marked-successors 
    -- CP-element group 75: 	73 
    -- CP-element group 75:  members (3) 
      -- CP-element group 75: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_update_completed_
      -- CP-element group 75: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Update/$exit
      -- CP-element group 75: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_407_Update/ca
      -- 
    ca_853_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_407_inst_ack_1, ack => processor_CP_545_elements(75)); -- 
    -- CP-element group 76:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	43 
    -- CP-element group 76: marked-predecessors 
    -- CP-element group 76: 	78 
    -- CP-element group 76: successors 
    -- CP-element group 76: 	78 
    -- CP-element group 76:  members (3) 
      -- CP-element group 76: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_sample_start_
      -- CP-element group 76: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Sample/$entry
      -- CP-element group 76: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Sample/rr
      -- 
    rr_861_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_861_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(76), ack => EQ_u8_u1_412_inst_req_0); -- 
    processor_cp_element_group_76: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_76"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(78);
      gj_processor_cp_element_group_76 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(76), clk => clk, reset => reset); --
    end block;
    -- CP-element group 77:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: marked-predecessors 
    -- CP-element group 77: 	79 
    -- CP-element group 77: 	110 
    -- CP-element group 77: successors 
    -- CP-element group 77: 	79 
    -- CP-element group 77:  members (3) 
      -- CP-element group 77: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_update_start_
      -- CP-element group 77: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Update/$entry
      -- CP-element group 77: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Update/cr
      -- 
    cr_866_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_866_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(77), ack => EQ_u8_u1_412_inst_req_1); -- 
    processor_cp_element_group_77: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_77"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(79) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_77 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(77), clk => clk, reset => reset); --
    end block;
    -- CP-element group 78:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	76 
    -- CP-element group 78: successors 
    -- CP-element group 78: marked-successors 
    -- CP-element group 78: 	76 
    -- CP-element group 78: 	41 
    -- CP-element group 78:  members (3) 
      -- CP-element group 78: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_sample_completed_
      -- CP-element group 78: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Sample/$exit
      -- CP-element group 78: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Sample/ra
      -- 
    ra_862_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_412_inst_ack_0, ack => processor_CP_545_elements(78)); -- 
    -- CP-element group 79:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	77 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	108 
    -- CP-element group 79: marked-successors 
    -- CP-element group 79: 	77 
    -- CP-element group 79:  members (3) 
      -- CP-element group 79: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_update_completed_
      -- CP-element group 79: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Update/$exit
      -- CP-element group 79: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_412_Update/ca
      -- 
    ca_867_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_412_inst_ack_1, ack => processor_CP_545_elements(79)); -- 
    -- CP-element group 80:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	43 
    -- CP-element group 80: marked-predecessors 
    -- CP-element group 80: 	82 
    -- CP-element group 80: successors 
    -- CP-element group 80: 	82 
    -- CP-element group 80:  members (3) 
      -- CP-element group 80: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_sample_start_
      -- CP-element group 80: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Sample/$entry
      -- CP-element group 80: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Sample/rr
      -- 
    rr_875_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_875_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(80), ack => EQ_u8_u1_417_inst_req_0); -- 
    processor_cp_element_group_80: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_80"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(82);
      gj_processor_cp_element_group_80 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(80), clk => clk, reset => reset); --
    end block;
    -- CP-element group 81:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: marked-predecessors 
    -- CP-element group 81: 	83 
    -- CP-element group 81: 	110 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	83 
    -- CP-element group 81:  members (3) 
      -- CP-element group 81: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_update_start_
      -- CP-element group 81: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Update/$entry
      -- CP-element group 81: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Update/cr
      -- 
    cr_880_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_880_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(81), ack => EQ_u8_u1_417_inst_req_1); -- 
    processor_cp_element_group_81: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_81"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(83) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_81 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(81), clk => clk, reset => reset); --
    end block;
    -- CP-element group 82:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	80 
    -- CP-element group 82: successors 
    -- CP-element group 82: marked-successors 
    -- CP-element group 82: 	80 
    -- CP-element group 82: 	41 
    -- CP-element group 82:  members (3) 
      -- CP-element group 82: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_sample_completed_
      -- CP-element group 82: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Sample/$exit
      -- CP-element group 82: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Sample/ra
      -- 
    ra_876_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 82_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_417_inst_ack_0, ack => processor_CP_545_elements(82)); -- 
    -- CP-element group 83:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	81 
    -- CP-element group 83: successors 
    -- CP-element group 83: 	108 
    -- CP-element group 83: marked-successors 
    -- CP-element group 83: 	81 
    -- CP-element group 83:  members (3) 
      -- CP-element group 83: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_update_completed_
      -- CP-element group 83: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Update/$exit
      -- CP-element group 83: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_417_Update/ca
      -- 
    ca_881_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 83_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_417_inst_ack_1, ack => processor_CP_545_elements(83)); -- 
    -- CP-element group 84:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	43 
    -- CP-element group 84: marked-predecessors 
    -- CP-element group 84: 	86 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	86 
    -- CP-element group 84:  members (3) 
      -- CP-element group 84: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_sample_start_
      -- CP-element group 84: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Sample/$entry
      -- CP-element group 84: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Sample/rr
      -- 
    rr_889_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_889_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(84), ack => EQ_u8_u1_422_inst_req_0); -- 
    processor_cp_element_group_84: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_84"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(86);
      gj_processor_cp_element_group_84 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(84), clk => clk, reset => reset); --
    end block;
    -- CP-element group 85:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: marked-predecessors 
    -- CP-element group 85: 	87 
    -- CP-element group 85: 	110 
    -- CP-element group 85: successors 
    -- CP-element group 85: 	87 
    -- CP-element group 85:  members (3) 
      -- CP-element group 85: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_update_start_
      -- CP-element group 85: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Update/$entry
      -- CP-element group 85: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Update/cr
      -- 
    cr_894_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_894_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(85), ack => EQ_u8_u1_422_inst_req_1); -- 
    processor_cp_element_group_85: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_85"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(87) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_85 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(85), clk => clk, reset => reset); --
    end block;
    -- CP-element group 86:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	84 
    -- CP-element group 86: successors 
    -- CP-element group 86: marked-successors 
    -- CP-element group 86: 	84 
    -- CP-element group 86: 	41 
    -- CP-element group 86:  members (3) 
      -- CP-element group 86: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_sample_completed_
      -- CP-element group 86: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Sample/$exit
      -- CP-element group 86: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Sample/ra
      -- 
    ra_890_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 86_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_422_inst_ack_0, ack => processor_CP_545_elements(86)); -- 
    -- CP-element group 87:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	85 
    -- CP-element group 87: successors 
    -- CP-element group 87: 	108 
    -- CP-element group 87: marked-successors 
    -- CP-element group 87: 	85 
    -- CP-element group 87:  members (3) 
      -- CP-element group 87: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_update_completed_
      -- CP-element group 87: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Update/$exit
      -- CP-element group 87: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_422_Update/ca
      -- 
    ca_895_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_422_inst_ack_1, ack => processor_CP_545_elements(87)); -- 
    -- CP-element group 88:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	43 
    -- CP-element group 88: marked-predecessors 
    -- CP-element group 88: 	90 
    -- CP-element group 88: successors 
    -- CP-element group 88: 	90 
    -- CP-element group 88:  members (3) 
      -- CP-element group 88: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_sample_start_
      -- CP-element group 88: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Sample/$entry
      -- CP-element group 88: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Sample/rr
      -- 
    rr_903_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_903_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(88), ack => EQ_u8_u1_427_inst_req_0); -- 
    processor_cp_element_group_88: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_88"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(90);
      gj_processor_cp_element_group_88 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(88), clk => clk, reset => reset); --
    end block;
    -- CP-element group 89:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: marked-predecessors 
    -- CP-element group 89: 	91 
    -- CP-element group 89: 	110 
    -- CP-element group 89: successors 
    -- CP-element group 89: 	91 
    -- CP-element group 89:  members (3) 
      -- CP-element group 89: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_update_start_
      -- CP-element group 89: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Update/$entry
      -- CP-element group 89: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Update/cr
      -- 
    cr_908_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_908_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(89), ack => EQ_u8_u1_427_inst_req_1); -- 
    processor_cp_element_group_89: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_89"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(91) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_89 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(89), clk => clk, reset => reset); --
    end block;
    -- CP-element group 90:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: 	88 
    -- CP-element group 90: successors 
    -- CP-element group 90: marked-successors 
    -- CP-element group 90: 	88 
    -- CP-element group 90: 	41 
    -- CP-element group 90:  members (3) 
      -- CP-element group 90: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_sample_completed_
      -- CP-element group 90: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Sample/$exit
      -- CP-element group 90: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Sample/ra
      -- 
    ra_904_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 90_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_427_inst_ack_0, ack => processor_CP_545_elements(90)); -- 
    -- CP-element group 91:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	89 
    -- CP-element group 91: successors 
    -- CP-element group 91: 	108 
    -- CP-element group 91: marked-successors 
    -- CP-element group 91: 	89 
    -- CP-element group 91:  members (3) 
      -- CP-element group 91: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_update_completed_
      -- CP-element group 91: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Update/$exit
      -- CP-element group 91: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_427_Update/ca
      -- 
    ca_909_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_427_inst_ack_1, ack => processor_CP_545_elements(91)); -- 
    -- CP-element group 92:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	43 
    -- CP-element group 92: marked-predecessors 
    -- CP-element group 92: 	94 
    -- CP-element group 92: successors 
    -- CP-element group 92: 	94 
    -- CP-element group 92:  members (3) 
      -- CP-element group 92: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_sample_start_
      -- CP-element group 92: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Sample/$entry
      -- CP-element group 92: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Sample/rr
      -- 
    rr_917_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_917_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(92), ack => EQ_u8_u1_432_inst_req_0); -- 
    processor_cp_element_group_92: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_92"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(94);
      gj_processor_cp_element_group_92 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(92), clk => clk, reset => reset); --
    end block;
    -- CP-element group 93:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: marked-predecessors 
    -- CP-element group 93: 	95 
    -- CP-element group 93: 	110 
    -- CP-element group 93: successors 
    -- CP-element group 93: 	95 
    -- CP-element group 93:  members (3) 
      -- CP-element group 93: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_update_start_
      -- CP-element group 93: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Update/$entry
      -- CP-element group 93: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Update/cr
      -- 
    cr_922_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_922_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(93), ack => EQ_u8_u1_432_inst_req_1); -- 
    processor_cp_element_group_93: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_93"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(95) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_93 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(93), clk => clk, reset => reset); --
    end block;
    -- CP-element group 94:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	92 
    -- CP-element group 94: successors 
    -- CP-element group 94: marked-successors 
    -- CP-element group 94: 	92 
    -- CP-element group 94: 	41 
    -- CP-element group 94:  members (3) 
      -- CP-element group 94: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_sample_completed_
      -- CP-element group 94: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Sample/$exit
      -- CP-element group 94: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Sample/ra
      -- 
    ra_918_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 94_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_432_inst_ack_0, ack => processor_CP_545_elements(94)); -- 
    -- CP-element group 95:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	93 
    -- CP-element group 95: successors 
    -- CP-element group 95: 	108 
    -- CP-element group 95: marked-successors 
    -- CP-element group 95: 	93 
    -- CP-element group 95:  members (3) 
      -- CP-element group 95: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_update_completed_
      -- CP-element group 95: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Update/$exit
      -- CP-element group 95: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_432_Update/ca
      -- 
    ca_923_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_432_inst_ack_1, ack => processor_CP_545_elements(95)); -- 
    -- CP-element group 96:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	43 
    -- CP-element group 96: marked-predecessors 
    -- CP-element group 96: 	98 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	98 
    -- CP-element group 96:  members (3) 
      -- CP-element group 96: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_sample_start_
      -- CP-element group 96: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Sample/$entry
      -- CP-element group 96: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Sample/rr
      -- 
    rr_931_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_931_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(96), ack => EQ_u8_u1_437_inst_req_0); -- 
    processor_cp_element_group_96: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 29) := "processor_cp_element_group_96"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(98);
      gj_processor_cp_element_group_96 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(96), clk => clk, reset => reset); --
    end block;
    -- CP-element group 97:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: marked-predecessors 
    -- CP-element group 97: 	99 
    -- CP-element group 97: 	110 
    -- CP-element group 97: successors 
    -- CP-element group 97: 	99 
    -- CP-element group 97:  members (3) 
      -- CP-element group 97: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_update_start_
      -- CP-element group 97: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Update/$entry
      -- CP-element group 97: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Update/cr
      -- 
    cr_936_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_936_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(97), ack => EQ_u8_u1_437_inst_req_1); -- 
    processor_cp_element_group_97: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "processor_cp_element_group_97"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(99) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_97 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(97), clk => clk, reset => reset); --
    end block;
    -- CP-element group 98:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	96 
    -- CP-element group 98: successors 
    -- CP-element group 98: marked-successors 
    -- CP-element group 98: 	41 
    -- CP-element group 98: 	96 
    -- CP-element group 98:  members (3) 
      -- CP-element group 98: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_sample_completed_
      -- CP-element group 98: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Sample/$exit
      -- CP-element group 98: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Sample/ra
      -- 
    ra_932_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 98_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_437_inst_ack_0, ack => processor_CP_545_elements(98)); -- 
    -- CP-element group 99:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	97 
    -- CP-element group 99: successors 
    -- CP-element group 99: 	108 
    -- CP-element group 99: marked-successors 
    -- CP-element group 99: 	97 
    -- CP-element group 99:  members (3) 
      -- CP-element group 99: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_update_completed_
      -- CP-element group 99: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Update/$exit
      -- CP-element group 99: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_437_Update/ca
      -- 
    ca_937_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_437_inst_ack_1, ack => processor_CP_545_elements(99)); -- 
    -- CP-element group 100:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	43 
    -- CP-element group 100: marked-predecessors 
    -- CP-element group 100: 	102 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	102 
    -- CP-element group 100:  members (3) 
      -- CP-element group 100: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_sample_start_
      -- CP-element group 100: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Sample/$entry
      -- CP-element group 100: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Sample/rr
      -- 
    rr_945_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_945_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(100), ack => EQ_u8_u1_442_inst_req_0); -- 
    processor_cp_element_group_100: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_100"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(102);
      gj_processor_cp_element_group_100 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(100), clk => clk, reset => reset); --
    end block;
    -- CP-element group 101:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: marked-predecessors 
    -- CP-element group 101: 	103 
    -- CP-element group 101: 	110 
    -- CP-element group 101: successors 
    -- CP-element group 101: 	103 
    -- CP-element group 101:  members (3) 
      -- CP-element group 101: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_update_start_
      -- CP-element group 101: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Update/$entry
      -- CP-element group 101: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Update/cr
      -- 
    cr_950_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_950_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(101), ack => EQ_u8_u1_442_inst_req_1); -- 
    processor_cp_element_group_101: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_101"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(103) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_101 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(101), clk => clk, reset => reset); --
    end block;
    -- CP-element group 102:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	100 
    -- CP-element group 102: successors 
    -- CP-element group 102: marked-successors 
    -- CP-element group 102: 	41 
    -- CP-element group 102: 	100 
    -- CP-element group 102:  members (3) 
      -- CP-element group 102: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_sample_completed_
      -- CP-element group 102: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Sample/$exit
      -- CP-element group 102: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Sample/ra
      -- 
    ra_946_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 102_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_442_inst_ack_0, ack => processor_CP_545_elements(102)); -- 
    -- CP-element group 103:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: 	101 
    -- CP-element group 103: successors 
    -- CP-element group 103: 	108 
    -- CP-element group 103: marked-successors 
    -- CP-element group 103: 	101 
    -- CP-element group 103:  members (3) 
      -- CP-element group 103: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_update_completed_
      -- CP-element group 103: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Update/$exit
      -- CP-element group 103: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_442_Update/ca
      -- 
    ca_951_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 103_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_442_inst_ack_1, ack => processor_CP_545_elements(103)); -- 
    -- CP-element group 104:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: 	43 
    -- CP-element group 104: marked-predecessors 
    -- CP-element group 104: 	106 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	106 
    -- CP-element group 104:  members (3) 
      -- CP-element group 104: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_sample_start_
      -- CP-element group 104: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Sample/$entry
      -- CP-element group 104: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Sample/rr
      -- 
    rr_959_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_959_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(104), ack => EQ_u8_u1_447_inst_req_0); -- 
    processor_cp_element_group_104: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_104"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(106);
      gj_processor_cp_element_group_104 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(104), clk => clk, reset => reset); --
    end block;
    -- CP-element group 105:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: marked-predecessors 
    -- CP-element group 105: 	107 
    -- CP-element group 105: 	110 
    -- CP-element group 105: successors 
    -- CP-element group 105: 	107 
    -- CP-element group 105:  members (3) 
      -- CP-element group 105: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_update_start_
      -- CP-element group 105: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Update/$entry
      -- CP-element group 105: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Update/cr
      -- 
    cr_964_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_964_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(105), ack => EQ_u8_u1_447_inst_req_1); -- 
    processor_cp_element_group_105: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_105"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(107) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_105 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(105), clk => clk, reset => reset); --
    end block;
    -- CP-element group 106:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	104 
    -- CP-element group 106: successors 
    -- CP-element group 106: marked-successors 
    -- CP-element group 106: 	41 
    -- CP-element group 106: 	104 
    -- CP-element group 106:  members (3) 
      -- CP-element group 106: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_sample_completed_
      -- CP-element group 106: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Sample/$exit
      -- CP-element group 106: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Sample/ra
      -- 
    ra_960_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 106_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_447_inst_ack_0, ack => processor_CP_545_elements(106)); -- 
    -- CP-element group 107:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 107: predecessors 
    -- CP-element group 107: 	105 
    -- CP-element group 107: successors 
    -- CP-element group 107: 	108 
    -- CP-element group 107: marked-successors 
    -- CP-element group 107: 	105 
    -- CP-element group 107:  members (3) 
      -- CP-element group 107: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_update_completed_
      -- CP-element group 107: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Update/$exit
      -- CP-element group 107: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_447_Update/ca
      -- 
    ca_965_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 107_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_447_inst_ack_1, ack => processor_CP_545_elements(107)); -- 
    -- CP-element group 108:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 108: predecessors 
    -- CP-element group 108: 	47 
    -- CP-element group 108: 	63 
    -- CP-element group 108: 	67 
    -- CP-element group 108: 	71 
    -- CP-element group 108: 	75 
    -- CP-element group 108: 	79 
    -- CP-element group 108: 	83 
    -- CP-element group 108: 	87 
    -- CP-element group 108: 	91 
    -- CP-element group 108: 	95 
    -- CP-element group 108: 	99 
    -- CP-element group 108: 	103 
    -- CP-element group 108: 	107 
    -- CP-element group 108: marked-predecessors 
    -- CP-element group 108: 	110 
    -- CP-element group 108: successors 
    -- CP-element group 108: 	110 
    -- CP-element group 108:  members (3) 
      -- CP-element group 108: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_sample_start_
      -- CP-element group 108: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Sample/$entry
      -- CP-element group 108: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Sample/rr
      -- 
    rr_973_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_973_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(108), ack => OR_u32_u32_547_inst_req_0); -- 
    processor_cp_element_group_108: block -- 
      constant place_capacities: IntegerArray(0 to 13) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1);
      constant place_markings: IntegerArray(0 to 13)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 1);
      constant place_delays: IntegerArray(0 to 13) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_108"; 
      signal preds: BooleanArray(1 to 14); -- 
    begin -- 
      preds <= processor_CP_545_elements(47) & processor_CP_545_elements(63) & processor_CP_545_elements(67) & processor_CP_545_elements(71) & processor_CP_545_elements(75) & processor_CP_545_elements(79) & processor_CP_545_elements(83) & processor_CP_545_elements(87) & processor_CP_545_elements(91) & processor_CP_545_elements(95) & processor_CP_545_elements(99) & processor_CP_545_elements(103) & processor_CP_545_elements(107) & processor_CP_545_elements(110);
      gj_processor_cp_element_group_108 : generic_join generic map(name => joinName, number_of_predecessors => 14, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(108), clk => clk, reset => reset); --
    end block;
    -- CP-element group 109:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 109: predecessors 
    -- CP-element group 109: marked-predecessors 
    -- CP-element group 109: 	111 
    -- CP-element group 109: 	177 
    -- CP-element group 109: successors 
    -- CP-element group 109: 	111 
    -- CP-element group 109:  members (3) 
      -- CP-element group 109: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_update_start_
      -- CP-element group 109: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Update/$entry
      -- CP-element group 109: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Update/cr
      -- 
    cr_978_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_978_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(109), ack => OR_u32_u32_547_inst_req_1); -- 
    processor_cp_element_group_109: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_109"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(111) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_109 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(109), clk => clk, reset => reset); --
    end block;
    -- CP-element group 110:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 110: predecessors 
    -- CP-element group 110: 	108 
    -- CP-element group 110: successors 
    -- CP-element group 110: marked-successors 
    -- CP-element group 110: 	45 
    -- CP-element group 110: 	61 
    -- CP-element group 110: 	65 
    -- CP-element group 110: 	69 
    -- CP-element group 110: 	73 
    -- CP-element group 110: 	77 
    -- CP-element group 110: 	81 
    -- CP-element group 110: 	85 
    -- CP-element group 110: 	89 
    -- CP-element group 110: 	93 
    -- CP-element group 110: 	97 
    -- CP-element group 110: 	101 
    -- CP-element group 110: 	105 
    -- CP-element group 110: 	108 
    -- CP-element group 110:  members (3) 
      -- CP-element group 110: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_sample_completed_
      -- CP-element group 110: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Sample/$exit
      -- CP-element group 110: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Sample/ra
      -- 
    ra_974_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 110_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_547_inst_ack_0, ack => processor_CP_545_elements(110)); -- 
    -- CP-element group 111:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 111: predecessors 
    -- CP-element group 111: 	109 
    -- CP-element group 111: successors 
    -- CP-element group 111: 	175 
    -- CP-element group 111: marked-successors 
    -- CP-element group 111: 	109 
    -- CP-element group 111:  members (3) 
      -- CP-element group 111: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_update_completed_
      -- CP-element group 111: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Update/$exit
      -- CP-element group 111: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/OR_u32_u32_547_Update/ca
      -- 
    ca_979_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 111_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_547_inst_ack_1, ack => processor_CP_545_elements(111)); -- 
    -- CP-element group 112:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 112: predecessors 
    -- CP-element group 112: 	43 
    -- CP-element group 112: marked-predecessors 
    -- CP-element group 112: 	114 
    -- CP-element group 112: successors 
    -- CP-element group 112: 	114 
    -- CP-element group 112:  members (3) 
      -- CP-element group 112: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_sample_start_
      -- CP-element group 112: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Sample/$entry
      -- CP-element group 112: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Sample/req
      -- 
    req_987_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_987_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(112), ack => W_addr_in_to_mem_606_inst_req_0); -- 
    processor_cp_element_group_112: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_112"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(114);
      gj_processor_cp_element_group_112 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(112), clk => clk, reset => reset); --
    end block;
    -- CP-element group 113:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 113: predecessors 
    -- CP-element group 113: marked-predecessors 
    -- CP-element group 113: 	115 
    -- CP-element group 113: 	130 
    -- CP-element group 113: successors 
    -- CP-element group 113: 	115 
    -- CP-element group 113:  members (3) 
      -- CP-element group 113: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_update_start_
      -- CP-element group 113: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Update/$entry
      -- CP-element group 113: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Update/req
      -- 
    req_992_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_992_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(113), ack => W_addr_in_to_mem_606_inst_req_1); -- 
    processor_cp_element_group_113: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_113"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(115) & processor_CP_545_elements(130);
      gj_processor_cp_element_group_113 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(113), clk => clk, reset => reset); --
    end block;
    -- CP-element group 114:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 114: predecessors 
    -- CP-element group 114: 	112 
    -- CP-element group 114: successors 
    -- CP-element group 114: marked-successors 
    -- CP-element group 114: 	41 
    -- CP-element group 114: 	112 
    -- CP-element group 114:  members (3) 
      -- CP-element group 114: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_sample_completed_
      -- CP-element group 114: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Sample/$exit
      -- CP-element group 114: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Sample/ack
      -- 
    ack_988_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 114_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_addr_in_to_mem_606_inst_ack_0, ack => processor_CP_545_elements(114)); -- 
    -- CP-element group 115:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 115: predecessors 
    -- CP-element group 115: 	113 
    -- CP-element group 115: successors 
    -- CP-element group 115: 	128 
    -- CP-element group 115: marked-successors 
    -- CP-element group 115: 	113 
    -- CP-element group 115:  members (3) 
      -- CP-element group 115: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_update_completed_
      -- CP-element group 115: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Update/$exit
      -- CP-element group 115: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_608_Update/ack
      -- 
    ack_993_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 115_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_addr_in_to_mem_606_inst_ack_1, ack => processor_CP_545_elements(115)); -- 
    -- CP-element group 116:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 116: predecessors 
    -- CP-element group 116: 	43 
    -- CP-element group 116: marked-predecessors 
    -- CP-element group 116: 	118 
    -- CP-element group 116: successors 
    -- CP-element group 116: 	118 
    -- CP-element group 116:  members (3) 
      -- CP-element group 116: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_sample_start_
      -- CP-element group 116: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Sample/$entry
      -- CP-element group 116: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Sample/req
      -- 
    req_1001_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1001_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(116), ack => W_memAddr_609_inst_req_0); -- 
    processor_cp_element_group_116: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_116"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(118);
      gj_processor_cp_element_group_116 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(116), clk => clk, reset => reset); --
    end block;
    -- CP-element group 117:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 117: predecessors 
    -- CP-element group 117: marked-predecessors 
    -- CP-element group 117: 	119 
    -- CP-element group 117: 	122 
    -- CP-element group 117: 	140 
    -- CP-element group 117: 	145 
    -- CP-element group 117: 	201 
    -- CP-element group 117: successors 
    -- CP-element group 117: 	119 
    -- CP-element group 117:  members (3) 
      -- CP-element group 117: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_update_start_
      -- CP-element group 117: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Update/$entry
      -- CP-element group 117: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Update/req
      -- 
    req_1006_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1006_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(117), ack => W_memAddr_609_inst_req_1); -- 
    processor_cp_element_group_117: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_117"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= processor_CP_545_elements(119) & processor_CP_545_elements(122) & processor_CP_545_elements(140) & processor_CP_545_elements(145) & processor_CP_545_elements(201);
      gj_processor_cp_element_group_117 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(117), clk => clk, reset => reset); --
    end block;
    -- CP-element group 118:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 118: predecessors 
    -- CP-element group 118: 	116 
    -- CP-element group 118: successors 
    -- CP-element group 118: marked-successors 
    -- CP-element group 118: 	41 
    -- CP-element group 118: 	116 
    -- CP-element group 118:  members (3) 
      -- CP-element group 118: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_sample_completed_
      -- CP-element group 118: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Sample/$exit
      -- CP-element group 118: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Sample/ack
      -- 
    ack_1002_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 118_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memAddr_609_inst_ack_0, ack => processor_CP_545_elements(118)); -- 
    -- CP-element group 119:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 119: predecessors 
    -- CP-element group 119: 	117 
    -- CP-element group 119: successors 
    -- CP-element group 119: 	120 
    -- CP-element group 119: 	140 
    -- CP-element group 119: 	143 
    -- CP-element group 119: 	199 
    -- CP-element group 119: marked-successors 
    -- CP-element group 119: 	117 
    -- CP-element group 119:  members (3) 
      -- CP-element group 119: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_update_completed_
      -- CP-element group 119: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Update/$exit
      -- CP-element group 119: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_611_Update/ack
      -- 
    ack_1007_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 119_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memAddr_609_inst_ack_1, ack => processor_CP_545_elements(119)); -- 
    -- CP-element group 120:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 120: predecessors 
    -- CP-element group 120: 	119 
    -- CP-element group 120: marked-predecessors 
    -- CP-element group 120: 	122 
    -- CP-element group 120: successors 
    -- CP-element group 120: 	122 
    -- CP-element group 120:  members (3) 
      -- CP-element group 120: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_sample_start_
      -- CP-element group 120: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Sample/$entry
      -- CP-element group 120: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Sample/req
      -- 
    req_1015_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1015_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(120), ack => W_is_uart_addr_600_delayed_6_0_620_inst_req_0); -- 
    processor_cp_element_group_120: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_120"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(119) & processor_CP_545_elements(122);
      gj_processor_cp_element_group_120 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(120), clk => clk, reset => reset); --
    end block;
    -- CP-element group 121:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 121: predecessors 
    -- CP-element group 121: marked-predecessors 
    -- CP-element group 121: 	123 
    -- CP-element group 121: 	134 
    -- CP-element group 121: 	137 
    -- CP-element group 121: successors 
    -- CP-element group 121: 	123 
    -- CP-element group 121:  members (3) 
      -- CP-element group 121: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_update_start_
      -- CP-element group 121: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Update/$entry
      -- CP-element group 121: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Update/req
      -- 
    req_1020_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1020_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(121), ack => W_is_uart_addr_600_delayed_6_0_620_inst_req_1); -- 
    processor_cp_element_group_121: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 1,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_121"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(123) & processor_CP_545_elements(134) & processor_CP_545_elements(137);
      gj_processor_cp_element_group_121 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(121), clk => clk, reset => reset); --
    end block;
    -- CP-element group 122:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 122: predecessors 
    -- CP-element group 122: 	120 
    -- CP-element group 122: successors 
    -- CP-element group 122: marked-successors 
    -- CP-element group 122: 	117 
    -- CP-element group 122: 	120 
    -- CP-element group 122:  members (3) 
      -- CP-element group 122: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_sample_completed_
      -- CP-element group 122: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Sample/$exit
      -- CP-element group 122: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Sample/ack
      -- 
    ack_1016_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 122_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_is_uart_addr_600_delayed_6_0_620_inst_ack_0, ack => processor_CP_545_elements(122)); -- 
    -- CP-element group 123:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 123: predecessors 
    -- CP-element group 123: 	121 
    -- CP-element group 123: successors 
    -- CP-element group 123: 	132 
    -- CP-element group 123: 	136 
    -- CP-element group 123: marked-successors 
    -- CP-element group 123: 	121 
    -- CP-element group 123:  members (3) 
      -- CP-element group 123: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_update_completed_
      -- CP-element group 123: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Update/$exit
      -- CP-element group 123: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_622_Update/ack
      -- 
    ack_1021_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 123_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_is_uart_addr_600_delayed_6_0_620_inst_ack_1, ack => processor_CP_545_elements(123)); -- 
    -- CP-element group 124:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 124: predecessors 
    -- CP-element group 124: 	43 
    -- CP-element group 124: marked-predecessors 
    -- CP-element group 124: 	126 
    -- CP-element group 124: successors 
    -- CP-element group 124: 	126 
    -- CP-element group 124:  members (3) 
      -- CP-element group 124: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_sample_start_
      -- CP-element group 124: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Sample/$entry
      -- CP-element group 124: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Sample/req
      -- 
    req_1029_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1029_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(124), ack => W_memWrite_602_delayed_1_0_623_inst_req_0); -- 
    processor_cp_element_group_124: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_124"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(126);
      gj_processor_cp_element_group_124 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(124), clk => clk, reset => reset); --
    end block;
    -- CP-element group 125:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 125: predecessors 
    -- CP-element group 125: marked-predecessors 
    -- CP-element group 125: 	127 
    -- CP-element group 125: 	130 
    -- CP-element group 125: successors 
    -- CP-element group 125: 	127 
    -- CP-element group 125:  members (3) 
      -- CP-element group 125: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_update_start_
      -- CP-element group 125: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Update/$entry
      -- CP-element group 125: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Update/req
      -- 
    req_1034_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1034_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(125), ack => W_memWrite_602_delayed_1_0_623_inst_req_1); -- 
    processor_cp_element_group_125: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_125"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(127) & processor_CP_545_elements(130);
      gj_processor_cp_element_group_125 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(125), clk => clk, reset => reset); --
    end block;
    -- CP-element group 126:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 126: predecessors 
    -- CP-element group 126: 	124 
    -- CP-element group 126: successors 
    -- CP-element group 126: marked-successors 
    -- CP-element group 126: 	41 
    -- CP-element group 126: 	124 
    -- CP-element group 126:  members (3) 
      -- CP-element group 126: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_sample_completed_
      -- CP-element group 126: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Sample/$exit
      -- CP-element group 126: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Sample/ack
      -- 
    ack_1030_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 126_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memWrite_602_delayed_1_0_623_inst_ack_0, ack => processor_CP_545_elements(126)); -- 
    -- CP-element group 127:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 127: predecessors 
    -- CP-element group 127: 	125 
    -- CP-element group 127: successors 
    -- CP-element group 127: 	128 
    -- CP-element group 127: marked-successors 
    -- CP-element group 127: 	125 
    -- CP-element group 127:  members (3) 
      -- CP-element group 127: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_update_completed_
      -- CP-element group 127: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Update/$exit
      -- CP-element group 127: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_625_Update/ack
      -- 
    ack_1035_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 127_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memWrite_602_delayed_1_0_623_inst_ack_1, ack => processor_CP_545_elements(127)); -- 
    -- CP-element group 128:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 128: predecessors 
    -- CP-element group 128: 	115 
    -- CP-element group 128: 	127 
    -- CP-element group 128: marked-predecessors 
    -- CP-element group 128: 	130 
    -- CP-element group 128: successors 
    -- CP-element group 128: 	130 
    -- CP-element group 128:  members (3) 
      -- CP-element group 128: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_sample_start_
      -- CP-element group 128: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Sample/$entry
      -- CP-element group 128: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Sample/rr
      -- 
    rr_1043_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1043_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(128), ack => CONCAT_u1_u9_629_inst_req_0); -- 
    processor_cp_element_group_128: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_128"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(115) & processor_CP_545_elements(127) & processor_CP_545_elements(130);
      gj_processor_cp_element_group_128 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(128), clk => clk, reset => reset); --
    end block;
    -- CP-element group 129:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 129: predecessors 
    -- CP-element group 129: marked-predecessors 
    -- CP-element group 129: 	131 
    -- CP-element group 129: 	134 
    -- CP-element group 129: successors 
    -- CP-element group 129: 	131 
    -- CP-element group 129:  members (3) 
      -- CP-element group 129: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_update_start_
      -- CP-element group 129: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Update/$entry
      -- CP-element group 129: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Update/cr
      -- 
    cr_1048_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1048_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(129), ack => CONCAT_u1_u9_629_inst_req_1); -- 
    processor_cp_element_group_129: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_129"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(131) & processor_CP_545_elements(134);
      gj_processor_cp_element_group_129 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(129), clk => clk, reset => reset); --
    end block;
    -- CP-element group 130:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 130: predecessors 
    -- CP-element group 130: 	128 
    -- CP-element group 130: successors 
    -- CP-element group 130: marked-successors 
    -- CP-element group 130: 	113 
    -- CP-element group 130: 	125 
    -- CP-element group 130: 	128 
    -- CP-element group 130:  members (3) 
      -- CP-element group 130: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_sample_completed_
      -- CP-element group 130: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Sample/$exit
      -- CP-element group 130: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Sample/ra
      -- 
    ra_1044_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 130_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u9_629_inst_ack_0, ack => processor_CP_545_elements(130)); -- 
    -- CP-element group 131:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 131: predecessors 
    -- CP-element group 131: 	129 
    -- CP-element group 131: successors 
    -- CP-element group 131: 	132 
    -- CP-element group 131: marked-successors 
    -- CP-element group 131: 	129 
    -- CP-element group 131:  members (3) 
      -- CP-element group 131: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_update_completed_
      -- CP-element group 131: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Update/$exit
      -- CP-element group 131: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u1_u9_629_Update/ca
      -- 
    ca_1049_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 131_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u9_629_inst_ack_1, ack => processor_CP_545_elements(131)); -- 
    -- CP-element group 132:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 132: predecessors 
    -- CP-element group 132: 	47 
    -- CP-element group 132: 	123 
    -- CP-element group 132: 	131 
    -- CP-element group 132: marked-predecessors 
    -- CP-element group 132: 	134 
    -- CP-element group 132: successors 
    -- CP-element group 132: 	134 
    -- CP-element group 132:  members (3) 
      -- CP-element group 132: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_sample_start_
      -- CP-element group 132: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Sample/$entry
      -- CP-element group 132: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Sample/rr
      -- 
    rr_1057_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1057_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(132), ack => CONCAT_u9_u64_637_inst_req_0); -- 
    processor_cp_element_group_132: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_132"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= processor_CP_545_elements(47) & processor_CP_545_elements(123) & processor_CP_545_elements(131) & processor_CP_545_elements(134);
      gj_processor_cp_element_group_132 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(132), clk => clk, reset => reset); --
    end block;
    -- CP-element group 133:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 133: predecessors 
    -- CP-element group 133: marked-predecessors 
    -- CP-element group 133: 	135 
    -- CP-element group 133: 	137 
    -- CP-element group 133: successors 
    -- CP-element group 133: 	135 
    -- CP-element group 133:  members (3) 
      -- CP-element group 133: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_update_start_
      -- CP-element group 133: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Update/$entry
      -- CP-element group 133: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Update/cr
      -- 
    cr_1062_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1062_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(133), ack => CONCAT_u9_u64_637_inst_req_1); -- 
    processor_cp_element_group_133: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_133"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(135) & processor_CP_545_elements(137);
      gj_processor_cp_element_group_133 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(133), clk => clk, reset => reset); --
    end block;
    -- CP-element group 134:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 134: predecessors 
    -- CP-element group 134: 	132 
    -- CP-element group 134: successors 
    -- CP-element group 134: marked-successors 
    -- CP-element group 134: 	45 
    -- CP-element group 134: 	121 
    -- CP-element group 134: 	129 
    -- CP-element group 134: 	132 
    -- CP-element group 134:  members (3) 
      -- CP-element group 134: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_sample_completed_
      -- CP-element group 134: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Sample/$exit
      -- CP-element group 134: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Sample/ra
      -- 
    ra_1058_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 134_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u9_u64_637_inst_ack_0, ack => processor_CP_545_elements(134)); -- 
    -- CP-element group 135:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 135: predecessors 
    -- CP-element group 135: 	133 
    -- CP-element group 135: successors 
    -- CP-element group 135: 	136 
    -- CP-element group 135: marked-successors 
    -- CP-element group 135: 	133 
    -- CP-element group 135:  members (3) 
      -- CP-element group 135: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_update_completed_
      -- CP-element group 135: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Update/$exit
      -- CP-element group 135: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/CONCAT_u9_u64_637_Update/ca
      -- 
    ca_1063_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 135_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u9_u64_637_inst_ack_1, ack => processor_CP_545_elements(135)); -- 
    -- CP-element group 136:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 136: predecessors 
    -- CP-element group 136: 	39 
    -- CP-element group 136: 	123 
    -- CP-element group 136: 	135 
    -- CP-element group 136: marked-predecessors 
    -- CP-element group 136: 	138 
    -- CP-element group 136: successors 
    -- CP-element group 136: 	137 
    -- CP-element group 136:  members (3) 
      -- CP-element group 136: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_sample_start_
      -- CP-element group 136: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Sample/$entry
      -- CP-element group 136: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Sample/req
      -- 
    req_1071_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1071_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(136), ack => WPIPE_mem_in_632_inst_req_0); -- 
    processor_cp_element_group_136: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_136"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= processor_CP_545_elements(39) & processor_CP_545_elements(123) & processor_CP_545_elements(135) & processor_CP_545_elements(138);
      gj_processor_cp_element_group_136 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(136), clk => clk, reset => reset); --
    end block;
    -- CP-element group 137:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 137: predecessors 
    -- CP-element group 137: 	136 
    -- CP-element group 137: successors 
    -- CP-element group 137: 	138 
    -- CP-element group 137: marked-successors 
    -- CP-element group 137: 	121 
    -- CP-element group 137: 	133 
    -- CP-element group 137:  members (6) 
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_sample_completed_
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_update_start_
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Sample/$exit
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Sample/ack
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Update/$entry
      -- CP-element group 137: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Update/req
      -- 
    ack_1072_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 137_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_mem_in_632_inst_ack_0, ack => processor_CP_545_elements(137)); -- 
    req_1076_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1076_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(137), ack => WPIPE_mem_in_632_inst_req_1); -- 
    -- CP-element group 138:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 138: predecessors 
    -- CP-element group 138: 	137 
    -- CP-element group 138: successors 
    -- CP-element group 138: 	209 
    -- CP-element group 138: marked-successors 
    -- CP-element group 138: 	37 
    -- CP-element group 138: 	136 
    -- CP-element group 138:  members (3) 
      -- CP-element group 138: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_update_completed_
      -- CP-element group 138: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Update/$exit
      -- CP-element group 138: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/WPIPE_mem_in_632_Update/ack
      -- 
    ack_1077_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 138_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_mem_in_632_inst_ack_1, ack => processor_CP_545_elements(138)); -- 
    -- CP-element group 139:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 139: predecessors 
    -- CP-element group 139: 	43 
    -- CP-element group 139: marked-predecessors 
    -- CP-element group 139: 	142 
    -- CP-element group 139: successors 
    -- CP-element group 139: 	141 
    -- CP-element group 139:  members (3) 
      -- CP-element group 139: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_sample_start_
      -- CP-element group 139: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Sample/$entry
      -- CP-element group 139: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Sample/rr
      -- 
    rr_1085_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1085_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(139), ack => RPIPE_mem_out_641_inst_req_0); -- 
    processor_cp_element_group_139: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_139"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(142);
      gj_processor_cp_element_group_139 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(139), clk => clk, reset => reset); --
    end block;
    -- CP-element group 140:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 140: predecessors 
    -- CP-element group 140: 	119 
    -- CP-element group 140: 	141 
    -- CP-element group 140: marked-predecessors 
    -- CP-element group 140: 	161 
    -- CP-element group 140: successors 
    -- CP-element group 140: 	142 
    -- CP-element group 140: marked-successors 
    -- CP-element group 140: 	117 
    -- CP-element group 140:  members (3) 
      -- CP-element group 140: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_update_start_
      -- CP-element group 140: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Update/$entry
      -- CP-element group 140: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Update/cr
      -- 
    cr_1090_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1090_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(140), ack => RPIPE_mem_out_641_inst_req_1); -- 
    processor_cp_element_group_140: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_140"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(119) & processor_CP_545_elements(141) & processor_CP_545_elements(161);
      gj_processor_cp_element_group_140 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(140), clk => clk, reset => reset); --
    end block;
    -- CP-element group 141:  transition  input  bypass  pipeline-parent 
    -- CP-element group 141: predecessors 
    -- CP-element group 141: 	139 
    -- CP-element group 141: successors 
    -- CP-element group 141: 	140 
    -- CP-element group 141:  members (3) 
      -- CP-element group 141: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_sample_completed_
      -- CP-element group 141: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Sample/$exit
      -- CP-element group 141: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Sample/ra
      -- 
    ra_1086_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 141_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_mem_out_641_inst_ack_0, ack => processor_CP_545_elements(141)); -- 
    -- CP-element group 142:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 142: predecessors 
    -- CP-element group 142: 	140 
    -- CP-element group 142: successors 
    -- CP-element group 142: 	159 
    -- CP-element group 142: marked-successors 
    -- CP-element group 142: 	41 
    -- CP-element group 142: 	139 
    -- CP-element group 142:  members (3) 
      -- CP-element group 142: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_update_completed_
      -- CP-element group 142: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Update/$exit
      -- CP-element group 142: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/RPIPE_mem_out_641_Update/ca
      -- 
    ca_1091_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 142_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_mem_out_641_inst_ack_1, ack => processor_CP_545_elements(142)); -- 
    -- CP-element group 143:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 143: predecessors 
    -- CP-element group 143: 	119 
    -- CP-element group 143: marked-predecessors 
    -- CP-element group 143: 	145 
    -- CP-element group 143: successors 
    -- CP-element group 143: 	145 
    -- CP-element group 143:  members (3) 
      -- CP-element group 143: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_sample_start_
      -- CP-element group 143: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Sample/$entry
      -- CP-element group 143: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Sample/crr
      -- 
    crr_1099_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1099_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(143), ack => call_stmt_645_call_req_0); -- 
    processor_cp_element_group_143: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_143"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(119) & processor_CP_545_elements(145);
      gj_processor_cp_element_group_143 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(143), clk => clk, reset => reset); --
    end block;
    -- CP-element group 144:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 144: predecessors 
    -- CP-element group 144: marked-predecessors 
    -- CP-element group 144: 	146 
    -- CP-element group 144: successors 
    -- CP-element group 144: 	146 
    -- CP-element group 144:  members (3) 
      -- CP-element group 144: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_update_start_
      -- CP-element group 144: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Update/$entry
      -- CP-element group 144: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Update/ccr
      -- 
    ccr_1104_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1104_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(144), ack => call_stmt_645_call_req_1); -- 
    processor_cp_element_group_144: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_144"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= processor_CP_545_elements(146);
      gj_processor_cp_element_group_144 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(144), clk => clk, reset => reset); --
    end block;
    -- CP-element group 145:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 145: predecessors 
    -- CP-element group 145: 	143 
    -- CP-element group 145: successors 
    -- CP-element group 145: marked-successors 
    -- CP-element group 145: 	117 
    -- CP-element group 145: 	143 
    -- CP-element group 145:  members (3) 
      -- CP-element group 145: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_sample_completed_
      -- CP-element group 145: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Sample/$exit
      -- CP-element group 145: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Sample/cra
      -- 
    cra_1100_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 145_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_645_call_ack_0, ack => processor_CP_545_elements(145)); -- 
    -- CP-element group 146:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 146: predecessors 
    -- CP-element group 146: 	144 
    -- CP-element group 146: successors 
    -- CP-element group 146: 	209 
    -- CP-element group 146: marked-successors 
    -- CP-element group 146: 	144 
    -- CP-element group 146:  members (3) 
      -- CP-element group 146: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_update_completed_
      -- CP-element group 146: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Update/$exit
      -- CP-element group 146: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_645_Update/cca
      -- 
    cca_1105_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 146_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_645_call_ack_1, ack => processor_CP_545_elements(146)); -- 
    -- CP-element group 147:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 147: predecessors 
    -- CP-element group 147: 	43 
    -- CP-element group 147: marked-predecessors 
    -- CP-element group 147: 	149 
    -- CP-element group 147: successors 
    -- CP-element group 147: 	149 
    -- CP-element group 147:  members (3) 
      -- CP-element group 147: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_sample_start_
      -- CP-element group 147: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Sample/$entry
      -- CP-element group 147: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Sample/req
      -- 
    req_1113_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1113_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(147), ack => W_regWrite_621_delayed_1_0_648_inst_req_0); -- 
    processor_cp_element_group_147: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_147"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(149);
      gj_processor_cp_element_group_147 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(147), clk => clk, reset => reset); --
    end block;
    -- CP-element group 148:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 148: predecessors 
    -- CP-element group 148: marked-predecessors 
    -- CP-element group 148: 	150 
    -- CP-element group 148: 	201 
    -- CP-element group 148: successors 
    -- CP-element group 148: 	150 
    -- CP-element group 148:  members (3) 
      -- CP-element group 148: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_update_start_
      -- CP-element group 148: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Update/$entry
      -- CP-element group 148: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Update/req
      -- 
    req_1118_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1118_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(148), ack => W_regWrite_621_delayed_1_0_648_inst_req_1); -- 
    processor_cp_element_group_148: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_148"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(150) & processor_CP_545_elements(201);
      gj_processor_cp_element_group_148 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(148), clk => clk, reset => reset); --
    end block;
    -- CP-element group 149:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 149: predecessors 
    -- CP-element group 149: 	147 
    -- CP-element group 149: successors 
    -- CP-element group 149: marked-successors 
    -- CP-element group 149: 	41 
    -- CP-element group 149: 	147 
    -- CP-element group 149:  members (3) 
      -- CP-element group 149: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_sample_completed_
      -- CP-element group 149: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Sample/$exit
      -- CP-element group 149: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Sample/ack
      -- 
    ack_1114_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 149_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_regWrite_621_delayed_1_0_648_inst_ack_0, ack => processor_CP_545_elements(149)); -- 
    -- CP-element group 150:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 150: predecessors 
    -- CP-element group 150: 	148 
    -- CP-element group 150: successors 
    -- CP-element group 150: 	199 
    -- CP-element group 150: marked-successors 
    -- CP-element group 150: 	148 
    -- CP-element group 150:  members (3) 
      -- CP-element group 150: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_update_completed_
      -- CP-element group 150: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Update/$exit
      -- CP-element group 150: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_650_Update/ack
      -- 
    ack_1119_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 150_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_regWrite_621_delayed_1_0_648_inst_ack_1, ack => processor_CP_545_elements(150)); -- 
    -- CP-element group 151:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 151: predecessors 
    -- CP-element group 151: 	43 
    -- CP-element group 151: marked-predecessors 
    -- CP-element group 151: 	153 
    -- CP-element group 151: successors 
    -- CP-element group 151: 	153 
    -- CP-element group 151:  members (3) 
      -- CP-element group 151: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_sample_start_
      -- CP-element group 151: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Sample/$entry
      -- CP-element group 151: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Sample/req
      -- 
    req_1127_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1127_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(151), ack => W_memWrite_623_delayed_1_0_651_inst_req_0); -- 
    processor_cp_element_group_151: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_151"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(153);
      gj_processor_cp_element_group_151 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(151), clk => clk, reset => reset); --
    end block;
    -- CP-element group 152:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 152: predecessors 
    -- CP-element group 152: marked-predecessors 
    -- CP-element group 152: 	154 
    -- CP-element group 152: 	201 
    -- CP-element group 152: successors 
    -- CP-element group 152: 	154 
    -- CP-element group 152:  members (3) 
      -- CP-element group 152: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_update_start_
      -- CP-element group 152: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Update/$entry
      -- CP-element group 152: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Update/req
      -- 
    req_1132_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1132_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(152), ack => W_memWrite_623_delayed_1_0_651_inst_req_1); -- 
    processor_cp_element_group_152: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_152"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(154) & processor_CP_545_elements(201);
      gj_processor_cp_element_group_152 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(152), clk => clk, reset => reset); --
    end block;
    -- CP-element group 153:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 153: predecessors 
    -- CP-element group 153: 	151 
    -- CP-element group 153: successors 
    -- CP-element group 153: marked-successors 
    -- CP-element group 153: 	41 
    -- CP-element group 153: 	151 
    -- CP-element group 153:  members (3) 
      -- CP-element group 153: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_sample_completed_
      -- CP-element group 153: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Sample/$exit
      -- CP-element group 153: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Sample/ack
      -- 
    ack_1128_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 153_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memWrite_623_delayed_1_0_651_inst_ack_0, ack => processor_CP_545_elements(153)); -- 
    -- CP-element group 154:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 154: predecessors 
    -- CP-element group 154: 	152 
    -- CP-element group 154: successors 
    -- CP-element group 154: 	199 
    -- CP-element group 154: marked-successors 
    -- CP-element group 154: 	152 
    -- CP-element group 154:  members (3) 
      -- CP-element group 154: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_update_completed_
      -- CP-element group 154: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Update/$exit
      -- CP-element group 154: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_653_Update/ack
      -- 
    ack_1133_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 154_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memWrite_623_delayed_1_0_651_inst_ack_1, ack => processor_CP_545_elements(154)); -- 
    -- CP-element group 155:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 155: predecessors 
    -- CP-element group 155: 	43 
    -- CP-element group 155: marked-predecessors 
    -- CP-element group 155: 	157 
    -- CP-element group 155: successors 
    -- CP-element group 155: 	157 
    -- CP-element group 155:  members (3) 
      -- CP-element group 155: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_sample_start_
      -- CP-element group 155: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Sample/$entry
      -- CP-element group 155: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Sample/rr
      -- 
    rr_1141_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1141_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(155), ack => EQ_u8_u1_669_inst_req_0); -- 
    processor_cp_element_group_155: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_155"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(157);
      gj_processor_cp_element_group_155 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(155), clk => clk, reset => reset); --
    end block;
    -- CP-element group 156:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 156: predecessors 
    -- CP-element group 156: marked-predecessors 
    -- CP-element group 156: 	158 
    -- CP-element group 156: 	177 
    -- CP-element group 156: successors 
    -- CP-element group 156: 	158 
    -- CP-element group 156:  members (3) 
      -- CP-element group 156: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_update_start_
      -- CP-element group 156: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Update/$entry
      -- CP-element group 156: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Update/cr
      -- 
    cr_1146_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1146_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(156), ack => EQ_u8_u1_669_inst_req_1); -- 
    processor_cp_element_group_156: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_156"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(158) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_156 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(156), clk => clk, reset => reset); --
    end block;
    -- CP-element group 157:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 157: predecessors 
    -- CP-element group 157: 	155 
    -- CP-element group 157: successors 
    -- CP-element group 157: marked-successors 
    -- CP-element group 157: 	41 
    -- CP-element group 157: 	155 
    -- CP-element group 157:  members (3) 
      -- CP-element group 157: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_sample_completed_
      -- CP-element group 157: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Sample/$exit
      -- CP-element group 157: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Sample/ra
      -- 
    ra_1142_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 157_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_669_inst_ack_0, ack => processor_CP_545_elements(157)); -- 
    -- CP-element group 158:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 158: predecessors 
    -- CP-element group 158: 	156 
    -- CP-element group 158: successors 
    -- CP-element group 158: 	175 
    -- CP-element group 158: marked-successors 
    -- CP-element group 158: 	156 
    -- CP-element group 158:  members (3) 
      -- CP-element group 158: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_update_completed_
      -- CP-element group 158: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Update/$exit
      -- CP-element group 158: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_669_Update/ca
      -- 
    ca_1147_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 158_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_669_inst_ack_1, ack => processor_CP_545_elements(158)); -- 
    -- CP-element group 159:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 159: predecessors 
    -- CP-element group 159: 	142 
    -- CP-element group 159: marked-predecessors 
    -- CP-element group 159: 	161 
    -- CP-element group 159: successors 
    -- CP-element group 159: 	161 
    -- CP-element group 159:  members (3) 
      -- CP-element group 159: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_sample_start_
      -- CP-element group 159: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Sample/$entry
      -- CP-element group 159: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Sample/req
      -- 
    req_1155_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1155_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(159), ack => W_memReadData_635_delayed_6_0_671_inst_req_0); -- 
    processor_cp_element_group_159: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_159"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(142) & processor_CP_545_elements(161);
      gj_processor_cp_element_group_159 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(159), clk => clk, reset => reset); --
    end block;
    -- CP-element group 160:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 160: predecessors 
    -- CP-element group 160: marked-predecessors 
    -- CP-element group 160: 	162 
    -- CP-element group 160: 	177 
    -- CP-element group 160: successors 
    -- CP-element group 160: 	162 
    -- CP-element group 160:  members (3) 
      -- CP-element group 160: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_update_start_
      -- CP-element group 160: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Update/$entry
      -- CP-element group 160: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Update/req
      -- 
    req_1160_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1160_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(160), ack => W_memReadData_635_delayed_6_0_671_inst_req_1); -- 
    processor_cp_element_group_160: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_160"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(162) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_160 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(160), clk => clk, reset => reset); --
    end block;
    -- CP-element group 161:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 161: predecessors 
    -- CP-element group 161: 	159 
    -- CP-element group 161: successors 
    -- CP-element group 161: marked-successors 
    -- CP-element group 161: 	140 
    -- CP-element group 161: 	159 
    -- CP-element group 161:  members (3) 
      -- CP-element group 161: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_sample_completed_
      -- CP-element group 161: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Sample/$exit
      -- CP-element group 161: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Sample/ack
      -- 
    ack_1156_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 161_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memReadData_635_delayed_6_0_671_inst_ack_0, ack => processor_CP_545_elements(161)); -- 
    -- CP-element group 162:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 162: predecessors 
    -- CP-element group 162: 	160 
    -- CP-element group 162: successors 
    -- CP-element group 162: 	175 
    -- CP-element group 162: marked-successors 
    -- CP-element group 162: 	160 
    -- CP-element group 162:  members (3) 
      -- CP-element group 162: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_update_completed_
      -- CP-element group 162: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Update/$exit
      -- CP-element group 162: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_673_Update/ack
      -- 
    ack_1161_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 162_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_memReadData_635_delayed_6_0_671_inst_ack_1, ack => processor_CP_545_elements(162)); -- 
    -- CP-element group 163:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 163: predecessors 
    -- CP-element group 163: 	43 
    -- CP-element group 163: marked-predecessors 
    -- CP-element group 163: 	165 
    -- CP-element group 163: successors 
    -- CP-element group 163: 	165 
    -- CP-element group 163:  members (3) 
      -- CP-element group 163: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_sample_start_
      -- CP-element group 163: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Sample/$entry
      -- CP-element group 163: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Sample/rr
      -- 
    rr_1169_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1169_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(163), ack => EQ_u8_u1_677_inst_req_0); -- 
    processor_cp_element_group_163: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_163"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(165);
      gj_processor_cp_element_group_163 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(163), clk => clk, reset => reset); --
    end block;
    -- CP-element group 164:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 164: predecessors 
    -- CP-element group 164: marked-predecessors 
    -- CP-element group 164: 	166 
    -- CP-element group 164: 	177 
    -- CP-element group 164: successors 
    -- CP-element group 164: 	166 
    -- CP-element group 164:  members (3) 
      -- CP-element group 164: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_update_start_
      -- CP-element group 164: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Update/$entry
      -- CP-element group 164: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Update/cr
      -- 
    cr_1174_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1174_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(164), ack => EQ_u8_u1_677_inst_req_1); -- 
    processor_cp_element_group_164: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_164"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(166) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_164 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(164), clk => clk, reset => reset); --
    end block;
    -- CP-element group 165:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 165: predecessors 
    -- CP-element group 165: 	163 
    -- CP-element group 165: successors 
    -- CP-element group 165: marked-successors 
    -- CP-element group 165: 	41 
    -- CP-element group 165: 	163 
    -- CP-element group 165:  members (3) 
      -- CP-element group 165: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_sample_completed_
      -- CP-element group 165: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Sample/$exit
      -- CP-element group 165: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Sample/ra
      -- 
    ra_1170_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 165_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_677_inst_ack_0, ack => processor_CP_545_elements(165)); -- 
    -- CP-element group 166:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 166: predecessors 
    -- CP-element group 166: 	164 
    -- CP-element group 166: successors 
    -- CP-element group 166: 	175 
    -- CP-element group 166: marked-successors 
    -- CP-element group 166: 	164 
    -- CP-element group 166:  members (3) 
      -- CP-element group 166: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_update_completed_
      -- CP-element group 166: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Update/$exit
      -- CP-element group 166: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u8_u1_677_Update/ca
      -- 
    ca_1175_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 166_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_677_inst_ack_1, ack => processor_CP_545_elements(166)); -- 
    -- CP-element group 167:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 167: predecessors 
    -- CP-element group 167: 	19 
    -- CP-element group 167: marked-predecessors 
    -- CP-element group 167: 	169 
    -- CP-element group 167: successors 
    -- CP-element group 167: 	169 
    -- CP-element group 167:  members (3) 
      -- CP-element group 167: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_sample_start_
      -- CP-element group 167: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Sample/$entry
      -- CP-element group 167: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Sample/rr
      -- 
    rr_1183_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1183_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(167), ack => type_cast_681_inst_req_0); -- 
    processor_cp_element_group_167: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 20,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_167"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(19) & processor_CP_545_elements(169);
      gj_processor_cp_element_group_167 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(167), clk => clk, reset => reset); --
    end block;
    -- CP-element group 168:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 168: predecessors 
    -- CP-element group 168: marked-predecessors 
    -- CP-element group 168: 	170 
    -- CP-element group 168: 	177 
    -- CP-element group 168: successors 
    -- CP-element group 168: 	170 
    -- CP-element group 168:  members (3) 
      -- CP-element group 168: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_update_start_
      -- CP-element group 168: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Update/$entry
      -- CP-element group 168: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Update/cr
      -- 
    cr_1188_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1188_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(168), ack => type_cast_681_inst_req_1); -- 
    processor_cp_element_group_168: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_168"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(170) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_168 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(168), clk => clk, reset => reset); --
    end block;
    -- CP-element group 169:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 169: predecessors 
    -- CP-element group 169: 	167 
    -- CP-element group 169: successors 
    -- CP-element group 169: marked-successors 
    -- CP-element group 169: 	17 
    -- CP-element group 169: 	167 
    -- CP-element group 169:  members (3) 
      -- CP-element group 169: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_sample_completed_
      -- CP-element group 169: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Sample/$exit
      -- CP-element group 169: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Sample/ra
      -- 
    ra_1184_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 169_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => type_cast_681_inst_ack_0, ack => processor_CP_545_elements(169)); -- 
    -- CP-element group 170:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 170: predecessors 
    -- CP-element group 170: 	168 
    -- CP-element group 170: successors 
    -- CP-element group 170: 	175 
    -- CP-element group 170: marked-successors 
    -- CP-element group 170: 	168 
    -- CP-element group 170:  members (3) 
      -- CP-element group 170: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_update_completed_
      -- CP-element group 170: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Update/$exit
      -- CP-element group 170: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/type_cast_681_Update/ca
      -- 
    ca_1189_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 170_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => type_cast_681_inst_ack_1, ack => processor_CP_545_elements(170)); -- 
    -- CP-element group 171:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 171: predecessors 
    -- CP-element group 171: 	43 
    -- CP-element group 171: marked-predecessors 
    -- CP-element group 171: 	173 
    -- CP-element group 171: successors 
    -- CP-element group 171: 	173 
    -- CP-element group 171:  members (3) 
      -- CP-element group 171: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Sample/rr
      -- CP-element group 171: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Sample/$entry
      -- CP-element group 171: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_sample_start_
      -- 
    rr_1197_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1197_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(171), ack => EQ_u1_u1_686_inst_req_0); -- 
    processor_cp_element_group_171: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_171"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(173);
      gj_processor_cp_element_group_171 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(171), clk => clk, reset => reset); --
    end block;
    -- CP-element group 172:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 172: predecessors 
    -- CP-element group 172: marked-predecessors 
    -- CP-element group 172: 	174 
    -- CP-element group 172: 	177 
    -- CP-element group 172: successors 
    -- CP-element group 172: 	174 
    -- CP-element group 172:  members (3) 
      -- CP-element group 172: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Update/cr
      -- CP-element group 172: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Update/$entry
      -- CP-element group 172: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_update_start_
      -- 
    cr_1202_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1202_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(172), ack => EQ_u1_u1_686_inst_req_1); -- 
    processor_cp_element_group_172: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_172"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(174) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_172 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(172), clk => clk, reset => reset); --
    end block;
    -- CP-element group 173:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 173: predecessors 
    -- CP-element group 173: 	171 
    -- CP-element group 173: successors 
    -- CP-element group 173: marked-successors 
    -- CP-element group 173: 	41 
    -- CP-element group 173: 	171 
    -- CP-element group 173:  members (3) 
      -- CP-element group 173: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Sample/ra
      -- CP-element group 173: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Sample/$exit
      -- CP-element group 173: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_sample_completed_
      -- 
    ra_1198_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 173_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u1_u1_686_inst_ack_0, ack => processor_CP_545_elements(173)); -- 
    -- CP-element group 174:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 174: predecessors 
    -- CP-element group 174: 	172 
    -- CP-element group 174: successors 
    -- CP-element group 174: 	175 
    -- CP-element group 174: marked-successors 
    -- CP-element group 174: 	172 
    -- CP-element group 174:  members (3) 
      -- CP-element group 174: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Update/ca
      -- CP-element group 174: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_Update/$exit
      -- CP-element group 174: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/EQ_u1_u1_686_update_completed_
      -- 
    ca_1203_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 174_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u1_u1_686_inst_ack_1, ack => processor_CP_545_elements(174)); -- 
    -- CP-element group 175:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 175: predecessors 
    -- CP-element group 175: 	111 
    -- CP-element group 175: 	158 
    -- CP-element group 175: 	162 
    -- CP-element group 175: 	166 
    -- CP-element group 175: 	170 
    -- CP-element group 175: 	174 
    -- CP-element group 175: marked-predecessors 
    -- CP-element group 175: 	177 
    -- CP-element group 175: successors 
    -- CP-element group 175: 	177 
    -- CP-element group 175:  members (3) 
      -- CP-element group 175: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_start/req
      -- CP-element group 175: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_sample_start_
      -- CP-element group 175: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_start/$entry
      -- 
    req_1211_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1211_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(175), ack => MUX_699_inst_req_0); -- 
    processor_cp_element_group_175: block -- 
      constant place_capacities: IntegerArray(0 to 6) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1);
      constant place_markings: IntegerArray(0 to 6)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 1);
      constant place_delays: IntegerArray(0 to 6) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_175"; 
      signal preds: BooleanArray(1 to 7); -- 
    begin -- 
      preds <= processor_CP_545_elements(111) & processor_CP_545_elements(158) & processor_CP_545_elements(162) & processor_CP_545_elements(166) & processor_CP_545_elements(170) & processor_CP_545_elements(174) & processor_CP_545_elements(177);
      gj_processor_cp_element_group_175 : generic_join generic map(name => joinName, number_of_predecessors => 7, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(175), clk => clk, reset => reset); --
    end block;
    -- CP-element group 176:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 176: predecessors 
    -- CP-element group 176: marked-predecessors 
    -- CP-element group 176: 	178 
    -- CP-element group 176: 	197 
    -- CP-element group 176: 	205 
    -- CP-element group 176: successors 
    -- CP-element group 176: 	178 
    -- CP-element group 176:  members (3) 
      -- CP-element group 176: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_complete/$entry
      -- CP-element group 176: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_complete/req
      -- CP-element group 176: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_update_start_
      -- 
    req_1216_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1216_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(176), ack => MUX_699_inst_req_1); -- 
    processor_cp_element_group_176: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 1,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_176"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(178) & processor_CP_545_elements(197) & processor_CP_545_elements(205);
      gj_processor_cp_element_group_176 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(176), clk => clk, reset => reset); --
    end block;
    -- CP-element group 177:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 177: predecessors 
    -- CP-element group 177: 	175 
    -- CP-element group 177: successors 
    -- CP-element group 177: marked-successors 
    -- CP-element group 177: 	109 
    -- CP-element group 177: 	156 
    -- CP-element group 177: 	160 
    -- CP-element group 177: 	164 
    -- CP-element group 177: 	168 
    -- CP-element group 177: 	172 
    -- CP-element group 177: 	175 
    -- CP-element group 177:  members (3) 
      -- CP-element group 177: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_sample_completed_
      -- CP-element group 177: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_start/ack
      -- CP-element group 177: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_start/$exit
      -- 
    ack_1212_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 177_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_699_inst_ack_0, ack => processor_CP_545_elements(177)); -- 
    -- CP-element group 178:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 178: predecessors 
    -- CP-element group 178: 	176 
    -- CP-element group 178: successors 
    -- CP-element group 178: 	195 
    -- CP-element group 178: 	203 
    -- CP-element group 178: marked-successors 
    -- CP-element group 178: 	176 
    -- CP-element group 178:  members (3) 
      -- CP-element group 178: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_complete/$exit
      -- CP-element group 178: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_update_completed_
      -- CP-element group 178: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/MUX_699_complete/ack
      -- 
    ack_1217_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 178_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_699_inst_ack_1, ack => processor_CP_545_elements(178)); -- 
    -- CP-element group 179:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 179: predecessors 
    -- CP-element group 179: 	43 
    -- CP-element group 179: marked-predecessors 
    -- CP-element group 179: 	181 
    -- CP-element group 179: successors 
    -- CP-element group 179: 	181 
    -- CP-element group 179:  members (3) 
      -- CP-element group 179: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_sample_start_
      -- CP-element group 179: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Sample/req
      -- CP-element group 179: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Sample/$entry
      -- 
    req_1225_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1225_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(179), ack => W_rs1_imm_652_delayed_9_0_701_inst_req_0); -- 
    processor_cp_element_group_179: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_179"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(181);
      gj_processor_cp_element_group_179 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(179), clk => clk, reset => reset); --
    end block;
    -- CP-element group 180:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 180: predecessors 
    -- CP-element group 180: marked-predecessors 
    -- CP-element group 180: 	182 
    -- CP-element group 180: 	197 
    -- CP-element group 180: successors 
    -- CP-element group 180: 	182 
    -- CP-element group 180:  members (3) 
      -- CP-element group 180: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_update_start_
      -- CP-element group 180: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Update/$entry
      -- CP-element group 180: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Update/req
      -- 
    req_1230_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1230_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(180), ack => W_rs1_imm_652_delayed_9_0_701_inst_req_1); -- 
    processor_cp_element_group_180: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_180"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(182) & processor_CP_545_elements(197);
      gj_processor_cp_element_group_180 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(180), clk => clk, reset => reset); --
    end block;
    -- CP-element group 181:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 181: predecessors 
    -- CP-element group 181: 	179 
    -- CP-element group 181: successors 
    -- CP-element group 181: marked-successors 
    -- CP-element group 181: 	41 
    -- CP-element group 181: 	179 
    -- CP-element group 181:  members (3) 
      -- CP-element group 181: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_sample_completed_
      -- CP-element group 181: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Sample/ack
      -- CP-element group 181: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Sample/$exit
      -- 
    ack_1226_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 181_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rs1_imm_652_delayed_9_0_701_inst_ack_0, ack => processor_CP_545_elements(181)); -- 
    -- CP-element group 182:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 182: predecessors 
    -- CP-element group 182: 	180 
    -- CP-element group 182: successors 
    -- CP-element group 182: 	195 
    -- CP-element group 182: marked-successors 
    -- CP-element group 182: 	180 
    -- CP-element group 182:  members (3) 
      -- CP-element group 182: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Update/$exit
      -- CP-element group 182: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_update_completed_
      -- CP-element group 182: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_703_Update/ack
      -- 
    ack_1231_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 182_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rs1_imm_652_delayed_9_0_701_inst_ack_1, ack => processor_CP_545_elements(182)); -- 
    -- CP-element group 183:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 183: predecessors 
    -- CP-element group 183: 	43 
    -- CP-element group 183: marked-predecessors 
    -- CP-element group 183: 	185 
    -- CP-element group 183: successors 
    -- CP-element group 183: 	185 
    -- CP-element group 183:  members (3) 
      -- CP-element group 183: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Sample/req
      -- CP-element group 183: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Sample/$entry
      -- CP-element group 183: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_sample_start_
      -- 
    req_1239_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1239_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(183), ack => W_rs2_654_delayed_9_0_704_inst_req_0); -- 
    processor_cp_element_group_183: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_183"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(185);
      gj_processor_cp_element_group_183 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(183), clk => clk, reset => reset); --
    end block;
    -- CP-element group 184:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 184: predecessors 
    -- CP-element group 184: marked-predecessors 
    -- CP-element group 184: 	186 
    -- CP-element group 184: 	197 
    -- CP-element group 184: successors 
    -- CP-element group 184: 	186 
    -- CP-element group 184:  members (3) 
      -- CP-element group 184: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_update_start_
      -- CP-element group 184: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Update/$entry
      -- CP-element group 184: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Update/req
      -- 
    req_1244_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1244_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(184), ack => W_rs2_654_delayed_9_0_704_inst_req_1); -- 
    processor_cp_element_group_184: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_184"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(186) & processor_CP_545_elements(197);
      gj_processor_cp_element_group_184 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(184), clk => clk, reset => reset); --
    end block;
    -- CP-element group 185:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 185: predecessors 
    -- CP-element group 185: 	183 
    -- CP-element group 185: successors 
    -- CP-element group 185: marked-successors 
    -- CP-element group 185: 	41 
    -- CP-element group 185: 	183 
    -- CP-element group 185:  members (3) 
      -- CP-element group 185: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Sample/$exit
      -- CP-element group 185: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Sample/ack
      -- CP-element group 185: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_sample_completed_
      -- 
    ack_1240_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 185_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rs2_654_delayed_9_0_704_inst_ack_0, ack => processor_CP_545_elements(185)); -- 
    -- CP-element group 186:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 186: predecessors 
    -- CP-element group 186: 	184 
    -- CP-element group 186: successors 
    -- CP-element group 186: 	195 
    -- CP-element group 186: marked-successors 
    -- CP-element group 186: 	184 
    -- CP-element group 186:  members (3) 
      -- CP-element group 186: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_update_completed_
      -- CP-element group 186: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Update/ack
      -- CP-element group 186: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_706_Update/$exit
      -- 
    ack_1245_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 186_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rs2_654_delayed_9_0_704_inst_ack_1, ack => processor_CP_545_elements(186)); -- 
    -- CP-element group 187:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 187: predecessors 
    -- CP-element group 187: 	43 
    -- CP-element group 187: marked-predecessors 
    -- CP-element group 187: 	189 
    -- CP-element group 187: successors 
    -- CP-element group 187: 	189 
    -- CP-element group 187:  members (3) 
      -- CP-element group 187: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Sample/$entry
      -- CP-element group 187: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Sample/req
      -- CP-element group 187: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_sample_start_
      -- 
    req_1253_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1253_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(187), ack => W_regWrite_655_delayed_9_0_707_inst_req_0); -- 
    processor_cp_element_group_187: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_187"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(189);
      gj_processor_cp_element_group_187 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(187), clk => clk, reset => reset); --
    end block;
    -- CP-element group 188:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 188: predecessors 
    -- CP-element group 188: marked-predecessors 
    -- CP-element group 188: 	190 
    -- CP-element group 188: 	197 
    -- CP-element group 188: successors 
    -- CP-element group 188: 	190 
    -- CP-element group 188:  members (3) 
      -- CP-element group 188: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_update_start_
      -- CP-element group 188: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Update/req
      -- CP-element group 188: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Update/$entry
      -- 
    req_1258_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1258_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(188), ack => W_regWrite_655_delayed_9_0_707_inst_req_1); -- 
    processor_cp_element_group_188: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_188"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(190) & processor_CP_545_elements(197);
      gj_processor_cp_element_group_188 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(188), clk => clk, reset => reset); --
    end block;
    -- CP-element group 189:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 189: predecessors 
    -- CP-element group 189: 	187 
    -- CP-element group 189: successors 
    -- CP-element group 189: marked-successors 
    -- CP-element group 189: 	41 
    -- CP-element group 189: 	187 
    -- CP-element group 189:  members (3) 
      -- CP-element group 189: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_sample_completed_
      -- CP-element group 189: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Sample/ack
      -- CP-element group 189: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Sample/$exit
      -- 
    ack_1254_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 189_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_regWrite_655_delayed_9_0_707_inst_ack_0, ack => processor_CP_545_elements(189)); -- 
    -- CP-element group 190:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 190: predecessors 
    -- CP-element group 190: 	188 
    -- CP-element group 190: successors 
    -- CP-element group 190: 	195 
    -- CP-element group 190: marked-successors 
    -- CP-element group 190: 	188 
    -- CP-element group 190:  members (3) 
      -- CP-element group 190: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Update/ack
      -- CP-element group 190: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_update_completed_
      -- CP-element group 190: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_709_Update/$exit
      -- 
    ack_1259_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 190_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_regWrite_655_delayed_9_0_707_inst_ack_1, ack => processor_CP_545_elements(190)); -- 
    -- CP-element group 191:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 191: predecessors 
    -- CP-element group 191: 	43 
    -- CP-element group 191: marked-predecessors 
    -- CP-element group 191: 	193 
    -- CP-element group 191: successors 
    -- CP-element group 191: 	193 
    -- CP-element group 191:  members (3) 
      -- CP-element group 191: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_sample_start_
      -- CP-element group 191: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Sample/req
      -- CP-element group 191: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Sample/$entry
      -- 
    req_1267_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1267_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(191), ack => W_rd_656_delayed_9_0_710_inst_req_0); -- 
    processor_cp_element_group_191: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_191"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(43) & processor_CP_545_elements(193);
      gj_processor_cp_element_group_191 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(191), clk => clk, reset => reset); --
    end block;
    -- CP-element group 192:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 192: predecessors 
    -- CP-element group 192: marked-predecessors 
    -- CP-element group 192: 	194 
    -- CP-element group 192: 	197 
    -- CP-element group 192: successors 
    -- CP-element group 192: 	194 
    -- CP-element group 192:  members (3) 
      -- CP-element group 192: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_update_start_
      -- CP-element group 192: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Update/req
      -- CP-element group 192: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Update/$entry
      -- 
    req_1272_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1272_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(192), ack => W_rd_656_delayed_9_0_710_inst_req_1); -- 
    processor_cp_element_group_192: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_192"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(194) & processor_CP_545_elements(197);
      gj_processor_cp_element_group_192 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(192), clk => clk, reset => reset); --
    end block;
    -- CP-element group 193:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 193: predecessors 
    -- CP-element group 193: 	191 
    -- CP-element group 193: successors 
    -- CP-element group 193: marked-successors 
    -- CP-element group 193: 	41 
    -- CP-element group 193: 	191 
    -- CP-element group 193:  members (3) 
      -- CP-element group 193: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Sample/$exit
      -- CP-element group 193: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_sample_completed_
      -- CP-element group 193: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Sample/ack
      -- 
    ack_1268_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 193_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rd_656_delayed_9_0_710_inst_ack_0, ack => processor_CP_545_elements(193)); -- 
    -- CP-element group 194:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 194: predecessors 
    -- CP-element group 194: 	192 
    -- CP-element group 194: successors 
    -- CP-element group 194: 	195 
    -- CP-element group 194: marked-successors 
    -- CP-element group 194: 	192 
    -- CP-element group 194:  members (3) 
      -- CP-element group 194: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_update_completed_
      -- CP-element group 194: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Update/ack
      -- CP-element group 194: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_712_Update/$exit
      -- 
    ack_1273_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 194_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rd_656_delayed_9_0_710_inst_ack_1, ack => processor_CP_545_elements(194)); -- 
    -- CP-element group 195:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 195: predecessors 
    -- CP-element group 195: 	178 
    -- CP-element group 195: 	182 
    -- CP-element group 195: 	186 
    -- CP-element group 195: 	190 
    -- CP-element group 195: 	194 
    -- CP-element group 195: 	208 
    -- CP-element group 195: marked-predecessors 
    -- CP-element group 195: 	197 
    -- CP-element group 195: successors 
    -- CP-element group 195: 	197 
    -- CP-element group 195:  members (3) 
      -- CP-element group 195: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Sample/crr
      -- CP-element group 195: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Sample/$entry
      -- CP-element group 195: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_sample_start_
      -- 
    crr_1281_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1281_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(195), ack => call_stmt_722_call_req_0); -- 
    processor_cp_element_group_195: block -- 
      constant place_capacities: IntegerArray(0 to 6) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 20,6 => 1);
      constant place_markings: IntegerArray(0 to 6)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 1);
      constant place_delays: IntegerArray(0 to 6) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_195"; 
      signal preds: BooleanArray(1 to 7); -- 
    begin -- 
      preds <= processor_CP_545_elements(178) & processor_CP_545_elements(182) & processor_CP_545_elements(186) & processor_CP_545_elements(190) & processor_CP_545_elements(194) & processor_CP_545_elements(208) & processor_CP_545_elements(197);
      gj_processor_cp_element_group_195 : generic_join generic map(name => joinName, number_of_predecessors => 7, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(195), clk => clk, reset => reset); --
    end block;
    -- CP-element group 196:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 196: predecessors 
    -- CP-element group 196: marked-predecessors 
    -- CP-element group 196: 	198 
    -- CP-element group 196: successors 
    -- CP-element group 196: 	198 
    -- CP-element group 196:  members (3) 
      -- CP-element group 196: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Update/ccr
      -- CP-element group 196: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Update/$entry
      -- CP-element group 196: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_update_start_
      -- 
    ccr_1286_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1286_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(196), ack => call_stmt_722_call_req_1); -- 
    processor_cp_element_group_196: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_196"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= processor_CP_545_elements(198);
      gj_processor_cp_element_group_196 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(196), clk => clk, reset => reset); --
    end block;
    -- CP-element group 197:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 197: predecessors 
    -- CP-element group 197: 	195 
    -- CP-element group 197: successors 
    -- CP-element group 197: marked-successors 
    -- CP-element group 197: 	176 
    -- CP-element group 197: 	180 
    -- CP-element group 197: 	184 
    -- CP-element group 197: 	188 
    -- CP-element group 197: 	192 
    -- CP-element group 197: 	195 
    -- CP-element group 197:  members (3) 
      -- CP-element group 197: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Sample/cra
      -- CP-element group 197: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Sample/$exit
      -- CP-element group 197: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_sample_completed_
      -- 
    cra_1282_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 197_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_722_call_ack_0, ack => processor_CP_545_elements(197)); -- 
    -- CP-element group 198:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 198: predecessors 
    -- CP-element group 198: 	196 
    -- CP-element group 198: successors 
    -- CP-element group 198: 	209 
    -- CP-element group 198: marked-successors 
    -- CP-element group 198: 	44 
    -- CP-element group 198: 	196 
    -- CP-element group 198:  members (4) 
      -- CP-element group 198: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/ring_reenable_memory_space_0
      -- CP-element group 198: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Update/cca
      -- CP-element group 198: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_Update/$exit
      -- CP-element group 198: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_722_update_completed_
      -- 
    cca_1287_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 198_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_722_call_ack_1, ack => processor_CP_545_elements(198)); -- 
    -- CP-element group 199:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 199: predecessors 
    -- CP-element group 199: 	119 
    -- CP-element group 199: 	150 
    -- CP-element group 199: 	154 
    -- CP-element group 199: marked-predecessors 
    -- CP-element group 199: 	201 
    -- CP-element group 199: successors 
    -- CP-element group 199: 	201 
    -- CP-element group 199:  members (3) 
      -- CP-element group 199: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Sample/$entry
      -- CP-element group 199: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Sample/req
      -- CP-element group 199: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_sample_start_
      -- 
    req_1295_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1295_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(199), ack => W_write_to_uart_661_delayed_8_0_723_inst_req_0); -- 
    processor_cp_element_group_199: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_199"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= processor_CP_545_elements(119) & processor_CP_545_elements(150) & processor_CP_545_elements(154) & processor_CP_545_elements(201);
      gj_processor_cp_element_group_199 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(199), clk => clk, reset => reset); --
    end block;
    -- CP-element group 200:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 200: predecessors 
    -- CP-element group 200: marked-predecessors 
    -- CP-element group 200: 	202 
    -- CP-element group 200: 	205 
    -- CP-element group 200: successors 
    -- CP-element group 200: 	202 
    -- CP-element group 200:  members (3) 
      -- CP-element group 200: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Update/$entry
      -- CP-element group 200: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Update/req
      -- CP-element group 200: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_update_start_
      -- 
    req_1300_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1300_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(200), ack => W_write_to_uart_661_delayed_8_0_723_inst_req_1); -- 
    processor_cp_element_group_200: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_200"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= processor_CP_545_elements(202) & processor_CP_545_elements(205);
      gj_processor_cp_element_group_200 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(200), clk => clk, reset => reset); --
    end block;
    -- CP-element group 201:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 201: predecessors 
    -- CP-element group 201: 	199 
    -- CP-element group 201: successors 
    -- CP-element group 201: marked-successors 
    -- CP-element group 201: 	117 
    -- CP-element group 201: 	148 
    -- CP-element group 201: 	152 
    -- CP-element group 201: 	199 
    -- CP-element group 201:  members (3) 
      -- CP-element group 201: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Sample/ack
      -- CP-element group 201: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Sample/$exit
      -- CP-element group 201: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_sample_completed_
      -- 
    ack_1296_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 201_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_write_to_uart_661_delayed_8_0_723_inst_ack_0, ack => processor_CP_545_elements(201)); -- 
    -- CP-element group 202:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 202: predecessors 
    -- CP-element group 202: 	200 
    -- CP-element group 202: successors 
    -- CP-element group 202: 	203 
    -- CP-element group 202: marked-successors 
    -- CP-element group 202: 	200 
    -- CP-element group 202:  members (3) 
      -- CP-element group 202: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Update/ack
      -- CP-element group 202: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_Update/$exit
      -- CP-element group 202: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/assign_stmt_725_update_completed_
      -- 
    ack_1301_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 202_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_write_to_uart_661_delayed_8_0_723_inst_ack_1, ack => processor_CP_545_elements(202)); -- 
    -- CP-element group 203:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 203: predecessors 
    -- CP-element group 203: 	178 
    -- CP-element group 203: 	202 
    -- CP-element group 203: marked-predecessors 
    -- CP-element group 203: 	205 
    -- CP-element group 203: successors 
    -- CP-element group 203: 	205 
    -- CP-element group 203:  members (3) 
      -- CP-element group 203: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_sample_start_
      -- CP-element group 203: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Sample/crr
      -- CP-element group 203: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Sample/$entry
      -- 
    crr_1309_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1309_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(203), ack => call_stmt_728_call_req_0); -- 
    processor_cp_element_group_203: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 30) := "processor_cp_element_group_203"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= processor_CP_545_elements(178) & processor_CP_545_elements(202) & processor_CP_545_elements(205);
      gj_processor_cp_element_group_203 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(203), clk => clk, reset => reset); --
    end block;
    -- CP-element group 204:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 204: predecessors 
    -- CP-element group 204: marked-predecessors 
    -- CP-element group 204: 	206 
    -- CP-element group 204: successors 
    -- CP-element group 204: 	206 
    -- CP-element group 204:  members (3) 
      -- CP-element group 204: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Update/$entry
      -- CP-element group 204: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_update_start_
      -- CP-element group 204: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Update/ccr
      -- 
    ccr_1314_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1314_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(204), ack => call_stmt_728_call_req_1); -- 
    processor_cp_element_group_204: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_204"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= processor_CP_545_elements(206);
      gj_processor_cp_element_group_204 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(204), clk => clk, reset => reset); --
    end block;
    -- CP-element group 205:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 205: predecessors 
    -- CP-element group 205: 	203 
    -- CP-element group 205: successors 
    -- CP-element group 205: marked-successors 
    -- CP-element group 205: 	176 
    -- CP-element group 205: 	200 
    -- CP-element group 205: 	203 
    -- CP-element group 205:  members (3) 
      -- CP-element group 205: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Sample/cra
      -- CP-element group 205: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Sample/$exit
      -- CP-element group 205: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_sample_completed_
      -- 
    cra_1310_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 205_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_728_call_ack_0, ack => processor_CP_545_elements(205)); -- 
    -- CP-element group 206:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 206: predecessors 
    -- CP-element group 206: 	204 
    -- CP-element group 206: successors 
    -- CP-element group 206: 	209 
    -- CP-element group 206: marked-successors 
    -- CP-element group 206: 	204 
    -- CP-element group 206:  members (3) 
      -- CP-element group 206: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Update/$exit
      -- CP-element group 206: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_Update/cca
      -- CP-element group 206: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_728_update_completed_
      -- 
    cca_1315_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 206_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_728_call_ack_1, ack => processor_CP_545_elements(206)); -- 
    -- CP-element group 207:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 207: predecessors 
    -- CP-element group 207: 	13 
    -- CP-element group 207: successors 
    -- CP-element group 207: 	14 
    -- CP-element group 207:  members (1) 
      -- CP-element group 207: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group processor_CP_545_elements(207) is a control-delay.
    cp_element_207_delay: control_delay_element  generic map(name => " 207_delay", delay_value => 1)  port map(req => processor_CP_545_elements(13), ack => processor_CP_545_elements(207), clk => clk, reset =>reset);
    -- CP-element group 208:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 208: predecessors 
    -- CP-element group 208: 	47 
    -- CP-element group 208: successors 
    -- CP-element group 208: 	195 
    -- CP-element group 208:  members (1) 
      -- CP-element group 208: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/call_stmt_361_call_stmt_722_delay
      -- 
    -- Element group processor_CP_545_elements(208) is a control-delay.
    cp_element_208_delay: control_delay_element  generic map(name => " 208_delay", delay_value => 1)  port map(req => processor_CP_545_elements(47), ack => processor_CP_545_elements(208), clk => clk, reset =>reset);
    -- CP-element group 209:  join  transition  bypass  pipeline-parent 
    -- CP-element group 209: predecessors 
    -- CP-element group 209: 	59 
    -- CP-element group 209: 	138 
    -- CP-element group 209: 	146 
    -- CP-element group 209: 	198 
    -- CP-element group 209: 	206 
    -- CP-element group 209: successors 
    -- CP-element group 209: 	10 
    -- CP-element group 209:  members (1) 
      -- CP-element group 209: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/do_while_stmt_317_loop_body/$exit
      -- 
    processor_cp_element_group_209: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 20,1 => 20,2 => 20,3 => 20,4 => 20);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 30) := "processor_cp_element_group_209"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= processor_CP_545_elements(59) & processor_CP_545_elements(138) & processor_CP_545_elements(146) & processor_CP_545_elements(198) & processor_CP_545_elements(206);
      gj_processor_cp_element_group_209 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => processor_CP_545_elements(209), clk => clk, reset => reset); --
    end block;
    -- CP-element group 210:  transition  input  bypass  pipeline-parent 
    -- CP-element group 210: predecessors 
    -- CP-element group 210: 	9 
    -- CP-element group 210: successors 
    -- CP-element group 210:  members (2) 
      -- CP-element group 210: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_exit/$exit
      -- CP-element group 210: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_exit/ack
      -- 
    ack_1322_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 210_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_317_branch_ack_0, ack => processor_CP_545_elements(210)); -- 
    -- CP-element group 211:  transition  input  bypass  pipeline-parent 
    -- CP-element group 211: predecessors 
    -- CP-element group 211: 	9 
    -- CP-element group 211: successors 
    -- CP-element group 211:  members (2) 
      -- CP-element group 211: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_taken/$exit
      -- CP-element group 211: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/loop_taken/ack
      -- 
    ack_1326_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 211_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_317_branch_ack_1, ack => processor_CP_545_elements(211)); -- 
    -- CP-element group 212:  transition  bypass  pipeline-parent 
    -- CP-element group 212: predecessors 
    -- CP-element group 212: 	7 
    -- CP-element group 212: successors 
    -- CP-element group 212: 	5 
    -- CP-element group 212:  members (1) 
      -- CP-element group 212: 	 branch_block_stmt_307/branch_block_stmt_316/do_while_stmt_317/$exit
      -- 
    processor_CP_545_elements(212) <= processor_CP_545_elements(7);
    -- CP-element group 213:  merge  fork  transition  place  output  bypass 
    -- CP-element group 213: predecessors 
    -- CP-element group 213: 	0 
    -- CP-element group 213: 	5 
    -- CP-element group 213: successors 
    -- CP-element group 213: 	2 
    -- CP-element group 213: 	1 
    -- CP-element group 213:  members (25) 
      -- CP-element group 213: 	 branch_block_stmt_307/merge_stmt_308__exit__
      -- CP-element group 213: 	 branch_block_stmt_307/merge_stmt_308_PhiAck/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Update/req
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Update/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/merge_stmt_308_PhiAck/dummy
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Sample/ra
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Sample/rr
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Sample/$exit
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Sample/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_update_completed_
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_update_start_
      -- CP-element group 213: 	 branch_block_stmt_307/merge_stmt_308_PhiAck/$exit
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_sample_completed_
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_sample_start_
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Update/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Sample/req
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_update_start_
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_sample_start_
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Update/ca
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Update/cr
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/RPIPE_start_processor_310_Update/$exit
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311/assign_stmt_311_Sample/$entry
      -- CP-element group 213: 	 branch_block_stmt_307/assign_stmt_311__entry__
      -- CP-element group 213: 	 branch_block_stmt_307/merge_stmt_308_PhiReqMerge
      -- 
    req_588_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_588_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(213), ack => W_cmd_309_inst_req_1); -- 
    req_583_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_583_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => processor_CP_545_elements(213), ack => W_cmd_309_inst_req_0); -- 
    processor_CP_545_elements(213) <= OrReduce(processor_CP_545_elements(0) & processor_CP_545_elements(5));
    processor_do_while_stmt_317_terminator_1327: loop_terminator -- 
      generic map (name => " processor_do_while_stmt_317_terminator_1327", max_iterations_in_flight =>20) 
      port map(loop_body_exit => processor_CP_545_elements(10),loop_continue => processor_CP_545_elements(211),loop_terminate => processor_CP_545_elements(210),loop_back => processor_CP_545_elements(8),loop_exit => processor_CP_545_elements(7),clk => clk, reset => reset); -- 
    phi_stmt_319_phi_seq_699_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= processor_CP_545_elements(22);
      processor_CP_545_elements(25)<= src_sample_reqs(0);
      src_sample_acks(0)  <= processor_CP_545_elements(25);
      processor_CP_545_elements(26)<= src_update_reqs(0);
      src_update_acks(0)  <= processor_CP_545_elements(27);
      processor_CP_545_elements(23) <= phi_mux_reqs(0);
      triggers(1)  <= processor_CP_545_elements(20);
      processor_CP_545_elements(29)<= src_sample_reqs(1);
      src_sample_acks(1)  <= processor_CP_545_elements(31);
      processor_CP_545_elements(30)<= src_update_reqs(1);
      src_update_acks(1)  <= processor_CP_545_elements(32);
      processor_CP_545_elements(21) <= phi_mux_reqs(1);
      phi_stmt_319_phi_seq_699 : phi_sequencer_v2-- 
        generic map (place_capacity => 20, ntriggers => 2, name => "phi_stmt_319_phi_seq_699") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => processor_CP_545_elements(15), 
          phi_sample_ack => processor_CP_545_elements(18), 
          phi_update_req => processor_CP_545_elements(17), 
          phi_update_ack => processor_CP_545_elements(19), 
          phi_mux_ack => processor_CP_545_elements(24), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_651_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= processor_CP_545_elements(11);
        preds(1)  <= processor_CP_545_elements(12);
        entry_tmerge_651 : transition_merge -- 
          generic map(name => " entry_tmerge_651")
          port map (preds => preds, symbol_out => processor_CP_545_elements(13));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal ADD_u32_u32_453_wire : std_logic_vector(31 downto 0);
    signal ADD_u32_u32_489_wire : std_logic_vector(31 downto 0);
    signal AND_u32_u32_461_wire : std_logic_vector(31 downto 0);
    signal CONCAT_u1_u9_327_wire : std_logic_vector(8 downto 0);
    signal CONCAT_u1_u9_604_604_delayed_6_0_630 : std_logic_vector(8 downto 0);
    signal CONCAT_u23_u55_330_wire_constant : std_logic_vector(54 downto 0);
    signal CONCAT_u23_u55_636_wire : std_logic_vector(54 downto 0);
    signal CONCAT_u24_u32_395_wire : std_logic_vector(31 downto 0);
    signal CONCAT_u9_u64_331_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u9_u64_637_wire : std_logic_vector(63 downto 0);
    signal EQ_u1_u1_643_643_delayed_8_0_687 : std_logic_vector(0 downto 0);
    signal EQ_u32_u1_525_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_315_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_392_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_403_403_delayed_7_0_388 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_420_420_delayed_7_0_403 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_429_429_delayed_7_0_408 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_437_437_delayed_7_0_413 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_446_446_delayed_7_0_418 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_456_456_delayed_7_0_423 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_464_464_delayed_7_0_428 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_473_473_delayed_7_0_433 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_483_483_delayed_7_0_438 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_492_492_delayed_7_0_443 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_502_502_delayed_7_0_448 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_552_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_560_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_563_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_567_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_571_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_574_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_578_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_583_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_586_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_590_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_594_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_597_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_601_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_615_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_634_634_delayed_8_0_670 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_638_638_delayed_8_0_678 : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_732_wire : std_logic_vector(0 downto 0);
    signal LSHR_u32_u32_510_wire : std_logic_vector(31 downto 0);
    signal LSHR_u32_u32_517_wire : std_logic_vector(31 downto 0);
    signal MUX_416_416_delayed_7_0_398 : std_logic_vector(31 downto 0);
    signal MUX_455_wire : std_logic_vector(31 downto 0);
    signal MUX_463_wire : std_logic_vector(31 downto 0);
    signal MUX_470_wire : std_logic_vector(31 downto 0);
    signal MUX_476_wire : std_logic_vector(31 downto 0);
    signal MUX_483_wire : std_logic_vector(31 downto 0);
    signal MUX_491_wire : std_logic_vector(31 downto 0);
    signal MUX_497_wire : std_logic_vector(31 downto 0);
    signal MUX_505_wire : std_logic_vector(31 downto 0);
    signal MUX_513_wire : std_logic_vector(31 downto 0);
    signal MUX_520_wire : std_logic_vector(31 downto 0);
    signal MUX_528_wire : std_logic_vector(31 downto 0);
    signal MUX_534_wire : std_logic_vector(31 downto 0);
    signal MUX_541_wire : std_logic_vector(31 downto 0);
    signal MUX_544_wire : std_logic_vector(31 downto 0);
    signal MUX_697_wire : std_logic_vector(31 downto 0);
    signal MUX_698_wire : std_logic_vector(31 downto 0);
    signal NOT_u1_u1_733_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_564_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_568_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_575_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_579_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_580_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_587_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_591_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_598_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_602_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_603_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_657_wire : std_logic_vector(0 downto 0);
    signal OR_u32_u32_457_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_464_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_468_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_477_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_484_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_485_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_498_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_506_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_521_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_535_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_542_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_545_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_546_wire : std_logic_vector(31 downto 0);
    signal RPIPE_start_processor_310_wire : std_logic_vector(7 downto 0);
    signal R_ADD_386_wire_constant : std_logic_vector(7 downto 0);
    signal R_ADD_421_wire_constant : std_logic_vector(7 downto 0);
    signal R_ADD_577_wire_constant : std_logic_vector(7 downto 0);
    signal R_CALL_596_wire_constant : std_logic_vector(7 downto 0);
    signal R_CALL_676_wire_constant : std_logic_vector(7 downto 0);
    signal R_CMP_446_wire_constant : std_logic_vector(7 downto 0);
    signal R_CMP_600_wire_constant : std_logic_vector(7 downto 0);
    signal R_HALT_731_wire_constant : std_logic_vector(7 downto 0);
    signal R_LOAD_562_wire_constant : std_logic_vector(7 downto 0);
    signal R_LOAD_668_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_AND_401_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_AND_566_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_OR_406_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_OR_570_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SLL_431_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SLL_585_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SRA_441_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SRA_593_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SRL_436_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_SRL_589_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_XNOR_411_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_XNOR_573_wire_constant : std_logic_vector(7 downto 0);
    signal R_L_XOR_416_wire_constant : std_logic_vector(7 downto 0);
    signal R_SBIR_391_wire_constant : std_logic_vector(7 downto 0);
    signal R_SBIR_559_wire_constant : std_logic_vector(7 downto 0);
    signal R_STORE_551_wire_constant : std_logic_vector(7 downto 0);
    signal R_SUB_426_wire_constant : std_logic_vector(7 downto 0);
    signal R_SUB_582_wire_constant : std_logic_vector(7 downto 0);
    signal R_minus_1_532_wire_constant : std_logic_vector(31 downto 0);
    signal R_one_1_352_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_1_354_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_1_554_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_1_616_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_1_685_wire_constant : std_logic_vector(0 downto 0);
    signal R_one_32_539_wire_constant : std_logic_vector(31 downto 0);
    signal R_one_8_314_wire_constant : std_logic_vector(7 downto 0);
    signal R_read_signal_325_wire_constant : std_logic_vector(0 downto 0);
    signal R_uart_addr_614_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1_356_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_1_553_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_1_617_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_1_713_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_1_715_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_23_634_wire_constant : std_logic_vector(22 downto 0);
    signal R_zero_24_393_wire_constant : std_logic_vector(23 downto 0);
    signal R_zero_32_358_wire_constant : std_logic_vector(31 downto 0);
    signal R_zero_32_526_wire_constant : std_logic_vector(31 downto 0);
    signal SHL_u32_u32_502_wire : std_logic_vector(31 downto 0);
    signal SUB_u32_u32_495_wire : std_logic_vector(31 downto 0);
    signal UGT_u32_u1_538_wire : std_logic_vector(0 downto 0);
    signal ULT_u32_u1_531_wire : std_logic_vector(0 downto 0);
    signal XOR_u32_u32_474_wire : std_logic_vector(31 downto 0);
    signal XOR_u32_u32_481_wire : std_logic_vector(31 downto 0);
    signal addr_in_to_mem_608 : std_logic_vector(7 downto 0);
    signal cmd_311 : std_logic_vector(7 downto 0);
    signal data_from_uart_645 : std_logic_vector(31 downto 0);
    signal exec_result_548 : std_logic_vector(31 downto 0);
    signal instruction_335 : std_logic_vector(31 downto 0);
    signal is_rs1_neg_365 : std_logic_vector(0 downto 0);
    signal is_uart_addr_600_delayed_6_0_622 : std_logic_vector(0 downto 0);
    signal is_uart_addr_619 : std_logic_vector(0 downto 0);
    signal konst_321_wire_constant : std_logic_vector(7 downto 0);
    signal konst_396_wire_constant : std_logic_vector(31 downto 0);
    signal konst_454_wire_constant : std_logic_vector(31 downto 0);
    signal konst_462_wire_constant : std_logic_vector(31 downto 0);
    signal konst_469_wire_constant : std_logic_vector(31 downto 0);
    signal konst_475_wire_constant : std_logic_vector(31 downto 0);
    signal konst_482_wire_constant : std_logic_vector(31 downto 0);
    signal konst_490_wire_constant : std_logic_vector(31 downto 0);
    signal konst_496_wire_constant : std_logic_vector(31 downto 0);
    signal konst_504_wire_constant : std_logic_vector(31 downto 0);
    signal konst_512_wire_constant : std_logic_vector(31 downto 0);
    signal konst_519_wire_constant : std_logic_vector(31 downto 0);
    signal konst_527_wire_constant : std_logic_vector(31 downto 0);
    signal konst_533_wire_constant : std_logic_vector(31 downto 0);
    signal konst_540_wire_constant : std_logic_vector(31 downto 0);
    signal konst_543_wire_constant : std_logic_vector(31 downto 0);
    signal konst_663_wire_constant : std_logic_vector(7 downto 0);
    signal memAddr_611 : std_logic_vector(7 downto 0);
    signal memReadData_635_delayed_6_0_673 : std_logic_vector(31 downto 0);
    signal memReadData_642 : std_logic_vector(31 downto 0);
    signal memWrite_556 : std_logic_vector(0 downto 0);
    signal memWrite_602_delayed_1_0_625 : std_logic_vector(0 downto 0);
    signal memWrite_623_delayed_1_0_653 : std_logic_vector(0 downto 0);
    signal n_program_cnt_378 : std_logic_vector(7 downto 0);
    signal n_program_cnt_378_322_buffered : std_logic_vector(7 downto 0);
    signal opcode_339 : std_logic_vector(7 downto 0);
    signal opcode_385_delayed_7_0_368 : std_logic_vector(7 downto 0);
    signal program_cnt_1_665 : std_logic_vector(7 downto 0);
    signal program_cnt_319 : std_logic_vector(7 downto 0);
    signal program_cnt_388_delayed_7_0_371 : std_logic_vector(7 downto 0);
    signal rd1_361 : std_logic_vector(31 downto 0);
    signal rd2_361 : std_logic_vector(31 downto 0);
    signal rd_351 : std_logic_vector(7 downto 0);
    signal rd_656_delayed_9_0_712 : std_logic_vector(7 downto 0);
    signal read_while_write1_722 : std_logic_vector(31 downto 0);
    signal read_while_write2_722 : std_logic_vector(31 downto 0);
    signal regWriteData_700 : std_logic_vector(31 downto 0);
    signal regWrite_605 : std_logic_vector(0 downto 0);
    signal regWrite_621_delayed_1_0_650 : std_logic_vector(0 downto 0);
    signal regWrite_655_delayed_9_0_709 : std_logic_vector(0 downto 0);
    signal rs1_imm_343 : std_logic_vector(7 downto 0);
    signal rs1_imm_652_delayed_9_0_703 : std_logic_vector(7 downto 0);
    signal rs2_347 : std_logic_vector(7 downto 0);
    signal rs2_654_delayed_9_0_706 : std_logic_vector(7 downto 0);
    signal type_cast_503_wire : std_logic_vector(31 downto 0);
    signal type_cast_511_wire : std_logic_vector(31 downto 0);
    signal type_cast_518_wire : std_logic_vector(31 downto 0);
    signal type_cast_640_640_delayed_8_0_682 : std_logic_vector(31 downto 0);
    signal type_cast_696_wire_constant : std_logic_vector(31 downto 0);
    signal write_to_uart_660 : std_logic_vector(0 downto 0);
    signal write_to_uart_661_delayed_8_0_725 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    CONCAT_u23_u55_330_wire_constant <= "0000000000000000000000000000000000000000000000000000000";
    R_ADD_386_wire_constant <= "00001001";
    R_ADD_421_wire_constant <= "00001001";
    R_ADD_577_wire_constant <= "00001001";
    R_CALL_596_wire_constant <= "00010000";
    R_CALL_676_wire_constant <= "00010000";
    R_CMP_446_wire_constant <= "00010010";
    R_CMP_600_wire_constant <= "00010010";
    R_HALT_731_wire_constant <= "00000001";
    R_LOAD_562_wire_constant <= "00000011";
    R_LOAD_668_wire_constant <= "00000011";
    R_L_AND_401_wire_constant <= "00000101";
    R_L_AND_566_wire_constant <= "00000101";
    R_L_OR_406_wire_constant <= "00000110";
    R_L_OR_570_wire_constant <= "00000110";
    R_L_SLL_431_wire_constant <= "00001011";
    R_L_SLL_585_wire_constant <= "00001011";
    R_L_SRA_441_wire_constant <= "00001101";
    R_L_SRA_593_wire_constant <= "00001101";
    R_L_SRL_436_wire_constant <= "00001100";
    R_L_SRL_589_wire_constant <= "00001100";
    R_L_XNOR_411_wire_constant <= "00000111";
    R_L_XNOR_573_wire_constant <= "00000111";
    R_L_XOR_416_wire_constant <= "00001000";
    R_SBIR_391_wire_constant <= "00000010";
    R_SBIR_559_wire_constant <= "00000010";
    R_STORE_551_wire_constant <= "00000100";
    R_SUB_426_wire_constant <= "00001010";
    R_SUB_582_wire_constant <= "00001010";
    R_minus_1_532_wire_constant <= "11111111111111111111111111111111";
    R_one_1_352_wire_constant <= "1";
    R_one_1_354_wire_constant <= "1";
    R_one_1_554_wire_constant <= "1";
    R_one_1_616_wire_constant <= "1";
    R_one_1_685_wire_constant <= "1";
    R_one_32_539_wire_constant <= "00000000000000000000000000000001";
    R_one_8_314_wire_constant <= "00000001";
    R_read_signal_325_wire_constant <= "1";
    R_uart_addr_614_wire_constant <= "11111110";
    R_zero_1_356_wire_constant <= "0";
    R_zero_1_553_wire_constant <= "0";
    R_zero_1_617_wire_constant <= "0";
    R_zero_1_713_wire_constant <= "0";
    R_zero_1_715_wire_constant <= "0";
    R_zero_23_634_wire_constant <= "00000000000000000000000";
    R_zero_24_393_wire_constant <= "000000000000000000000000";
    R_zero_32_358_wire_constant <= "00000000000000000000000000000000";
    R_zero_32_526_wire_constant <= "00000000000000000000000000000000";
    konst_321_wire_constant <= "00000000";
    konst_396_wire_constant <= "00000000000000000000000000000000";
    konst_454_wire_constant <= "00000000000000000000000000000000";
    konst_462_wire_constant <= "00000000000000000000000000000000";
    konst_469_wire_constant <= "00000000000000000000000000000000";
    konst_475_wire_constant <= "00000000000000000000000000000000";
    konst_482_wire_constant <= "00000000000000000000000000000000";
    konst_490_wire_constant <= "00000000000000000000000000000000";
    konst_496_wire_constant <= "00000000000000000000000000000000";
    konst_504_wire_constant <= "00000000000000000000000000000000";
    konst_512_wire_constant <= "00000000000000000000000000000000";
    konst_519_wire_constant <= "00000000000000000000000000000000";
    konst_527_wire_constant <= "00000000000000000000000000000000";
    konst_533_wire_constant <= "00000000000000000000000000000000";
    konst_540_wire_constant <= "00000000000000000000000000000000";
    konst_543_wire_constant <= "00000000000000000000000000000000";
    konst_663_wire_constant <= "00000001";
    type_cast_696_wire_constant <= "00000000000000000000000000000000";
    phi_stmt_319: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_321_wire_constant & n_program_cnt_378_322_buffered;
      req <= phi_stmt_319_req_0 & phi_stmt_319_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_319",
          num_reqs => 2,
          bypass_flag => true,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_319_ack_0,
          idata => idata,
          odata => program_cnt_319,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_319
    MUX_397_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_397_inst_req_0;
      MUX_397_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_397_inst_req_1;
      MUX_397_inst_ack_1<= update_ack(0);
      MUX_397_inst: SelectSplitProtocol generic map(name => "MUX_397_inst", data_width => 32, buffering => 7, flow_through => false, full_rate => true) -- 
        port map( x => CONCAT_u24_u32_395_wire, y => konst_396_wire_constant, sel => EQ_u8_u1_392_wire, z => MUX_416_416_delayed_7_0_398, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    -- flow-through select operator MUX_455_inst
    MUX_455_wire <= ADD_u32_u32_453_wire when (EQ_u8_u1_403_403_delayed_7_0_388(0) /=  '0') else konst_454_wire_constant;
    -- flow-through select operator MUX_463_inst
    MUX_463_wire <= AND_u32_u32_461_wire when (EQ_u8_u1_420_420_delayed_7_0_403(0) /=  '0') else konst_462_wire_constant;
    -- flow-through select operator MUX_470_inst
    MUX_470_wire <= OR_u32_u32_468_wire when (EQ_u8_u1_429_429_delayed_7_0_408(0) /=  '0') else konst_469_wire_constant;
    -- flow-through select operator MUX_476_inst
    MUX_476_wire <= XOR_u32_u32_474_wire when (EQ_u8_u1_437_437_delayed_7_0_413(0) /=  '0') else konst_475_wire_constant;
    -- flow-through select operator MUX_483_inst
    MUX_483_wire <= XOR_u32_u32_481_wire when (EQ_u8_u1_446_446_delayed_7_0_418(0) /=  '0') else konst_482_wire_constant;
    -- flow-through select operator MUX_491_inst
    MUX_491_wire <= ADD_u32_u32_489_wire when (EQ_u8_u1_456_456_delayed_7_0_423(0) /=  '0') else konst_490_wire_constant;
    -- flow-through select operator MUX_497_inst
    MUX_497_wire <= SUB_u32_u32_495_wire when (EQ_u8_u1_464_464_delayed_7_0_428(0) /=  '0') else konst_496_wire_constant;
    -- flow-through select operator MUX_505_inst
    MUX_505_wire <= type_cast_503_wire when (EQ_u8_u1_473_473_delayed_7_0_433(0) /=  '0') else konst_504_wire_constant;
    -- flow-through select operator MUX_513_inst
    MUX_513_wire <= type_cast_511_wire when (EQ_u8_u1_483_483_delayed_7_0_438(0) /=  '0') else konst_512_wire_constant;
    -- flow-through select operator MUX_520_inst
    MUX_520_wire <= type_cast_518_wire when (EQ_u8_u1_492_492_delayed_7_0_443(0) /=  '0') else konst_519_wire_constant;
    -- flow-through select operator MUX_528_inst
    MUX_528_wire <= R_zero_32_526_wire_constant when (EQ_u32_u1_525_wire(0) /=  '0') else konst_527_wire_constant;
    -- flow-through select operator MUX_534_inst
    MUX_534_wire <= R_minus_1_532_wire_constant when (ULT_u32_u1_531_wire(0) /=  '0') else konst_533_wire_constant;
    -- flow-through select operator MUX_541_inst
    MUX_541_wire <= R_one_32_539_wire_constant when (UGT_u32_u1_538_wire(0) /=  '0') else konst_540_wire_constant;
    -- flow-through select operator MUX_544_inst
    MUX_544_wire <= OR_u32_u32_542_wire when (EQ_u8_u1_502_502_delayed_7_0_448(0) /=  '0') else konst_543_wire_constant;
    -- flow-through select operator MUX_555_inst
    memWrite_556 <= R_zero_1_553_wire_constant when (EQ_u8_u1_552_wire(0) /=  '0') else R_one_1_554_wire_constant;
    -- flow-through select operator MUX_618_inst
    is_uart_addr_619 <= R_one_1_616_wire_constant when (EQ_u8_u1_615_wire(0) /=  '0') else R_zero_1_617_wire_constant;
    -- flow-through select operator MUX_697_inst
    MUX_697_wire <= exec_result_548 when (EQ_u1_u1_643_643_delayed_8_0_687(0) /=  '0') else type_cast_696_wire_constant;
    -- flow-through select operator MUX_698_inst
    MUX_698_wire <= type_cast_640_640_delayed_8_0_682 when (EQ_u8_u1_638_638_delayed_8_0_678(0) /=  '0') else MUX_697_wire;
    MUX_699_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_699_inst_req_0;
      MUX_699_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_699_inst_req_1;
      MUX_699_inst_ack_1<= update_ack(0);
      MUX_699_inst: SelectSplitProtocol generic map(name => "MUX_699_inst", data_width => 32, buffering => 1, flow_through => false, full_rate => true) -- 
        port map( x => memReadData_635_delayed_6_0_673, y => MUX_698_wire, sel => EQ_u8_u1_634_634_delayed_8_0_670, z => regWriteData_700, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    -- flow-through slice operator slice_338_inst
    opcode_339 <= instruction_335(31 downto 24);
    -- flow-through slice operator slice_342_inst
    rs1_imm_343 <= instruction_335(23 downto 16);
    -- flow-through slice operator slice_346_inst
    rs2_347 <= instruction_335(15 downto 8);
    -- flow-through slice operator slice_350_inst
    rd_351 <= instruction_335(7 downto 0);
    -- flow-through slice operator slice_364_inst
    is_rs1_neg_365 <= rd1_361(31 downto 31);
    W_addr_in_to_mem_606_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_addr_in_to_mem_606_inst_req_0;
      W_addr_in_to_mem_606_inst_ack_0<= wack(0);
      rreq(0) <= W_addr_in_to_mem_606_inst_req_1;
      W_addr_in_to_mem_606_inst_ack_1<= rack(0);
      W_addr_in_to_mem_606_inst : InterlockBuffer generic map ( -- 
        name => "W_addr_in_to_mem_606_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => rs1_imm_343,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => addr_in_to_mem_608,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_cmd_309_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_cmd_309_inst_req_0;
      W_cmd_309_inst_ack_0<= wack(0);
      rreq(0) <= W_cmd_309_inst_req_1;
      W_cmd_309_inst_ack_1<= rack(0);
      W_cmd_309_inst : InterlockBuffer generic map ( -- 
        name => "W_cmd_309_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_start_processor_310_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => cmd_311,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_is_uart_addr_600_delayed_6_0_620_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_is_uart_addr_600_delayed_6_0_620_inst_req_0;
      W_is_uart_addr_600_delayed_6_0_620_inst_ack_0<= wack(0);
      rreq(0) <= W_is_uart_addr_600_delayed_6_0_620_inst_req_1;
      W_is_uart_addr_600_delayed_6_0_620_inst_ack_1<= rack(0);
      W_is_uart_addr_600_delayed_6_0_620_inst : InterlockBuffer generic map ( -- 
        name => "W_is_uart_addr_600_delayed_6_0_620_inst",
        buffer_size => 6,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => is_uart_addr_619,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => is_uart_addr_600_delayed_6_0_622,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_memAddr_609_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_memAddr_609_inst_req_0;
      W_memAddr_609_inst_ack_0<= wack(0);
      rreq(0) <= W_memAddr_609_inst_req_1;
      W_memAddr_609_inst_ack_1<= rack(0);
      W_memAddr_609_inst : InterlockBuffer generic map ( -- 
        name => "W_memAddr_609_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => rd_351,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => memAddr_611,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_memReadData_635_delayed_6_0_671_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_memReadData_635_delayed_6_0_671_inst_req_0;
      W_memReadData_635_delayed_6_0_671_inst_ack_0<= wack(0);
      rreq(0) <= W_memReadData_635_delayed_6_0_671_inst_req_1;
      W_memReadData_635_delayed_6_0_671_inst_ack_1<= rack(0);
      W_memReadData_635_delayed_6_0_671_inst : InterlockBuffer generic map ( -- 
        name => "W_memReadData_635_delayed_6_0_671_inst",
        buffer_size => 6,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => memReadData_642,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => memReadData_635_delayed_6_0_673,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_memWrite_602_delayed_1_0_623_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_memWrite_602_delayed_1_0_623_inst_req_0;
      W_memWrite_602_delayed_1_0_623_inst_ack_0<= wack(0);
      rreq(0) <= W_memWrite_602_delayed_1_0_623_inst_req_1;
      W_memWrite_602_delayed_1_0_623_inst_ack_1<= rack(0);
      W_memWrite_602_delayed_1_0_623_inst : InterlockBuffer generic map ( -- 
        name => "W_memWrite_602_delayed_1_0_623_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => memWrite_556,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => memWrite_602_delayed_1_0_625,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_memWrite_623_delayed_1_0_651_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_memWrite_623_delayed_1_0_651_inst_req_0;
      W_memWrite_623_delayed_1_0_651_inst_ack_0<= wack(0);
      rreq(0) <= W_memWrite_623_delayed_1_0_651_inst_req_1;
      W_memWrite_623_delayed_1_0_651_inst_ack_1<= rack(0);
      W_memWrite_623_delayed_1_0_651_inst : InterlockBuffer generic map ( -- 
        name => "W_memWrite_623_delayed_1_0_651_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => memWrite_556,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => memWrite_623_delayed_1_0_653,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_opcode_385_delayed_7_0_366_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_opcode_385_delayed_7_0_366_inst_req_0;
      W_opcode_385_delayed_7_0_366_inst_ack_0<= wack(0);
      rreq(0) <= W_opcode_385_delayed_7_0_366_inst_req_1;
      W_opcode_385_delayed_7_0_366_inst_ack_1<= rack(0);
      W_opcode_385_delayed_7_0_366_inst : InterlockBuffer generic map ( -- 
        name => "W_opcode_385_delayed_7_0_366_inst",
        buffer_size => 7,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => opcode_339,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => opcode_385_delayed_7_0_368,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_program_cnt_388_delayed_7_0_369_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_program_cnt_388_delayed_7_0_369_inst_req_0;
      W_program_cnt_388_delayed_7_0_369_inst_ack_0<= wack(0);
      rreq(0) <= W_program_cnt_388_delayed_7_0_369_inst_req_1;
      W_program_cnt_388_delayed_7_0_369_inst_ack_1<= rack(0);
      W_program_cnt_388_delayed_7_0_369_inst : InterlockBuffer generic map ( -- 
        name => "W_program_cnt_388_delayed_7_0_369_inst",
        buffer_size => 7,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => program_cnt_319,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => program_cnt_388_delayed_7_0_371,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rd_656_delayed_9_0_710_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rd_656_delayed_9_0_710_inst_req_0;
      W_rd_656_delayed_9_0_710_inst_ack_0<= wack(0);
      rreq(0) <= W_rd_656_delayed_9_0_710_inst_req_1;
      W_rd_656_delayed_9_0_710_inst_ack_1<= rack(0);
      W_rd_656_delayed_9_0_710_inst : InterlockBuffer generic map ( -- 
        name => "W_rd_656_delayed_9_0_710_inst",
        buffer_size => 9,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => rd_351,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rd_656_delayed_9_0_712,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_regWrite_621_delayed_1_0_648_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_regWrite_621_delayed_1_0_648_inst_req_0;
      W_regWrite_621_delayed_1_0_648_inst_ack_0<= wack(0);
      rreq(0) <= W_regWrite_621_delayed_1_0_648_inst_req_1;
      W_regWrite_621_delayed_1_0_648_inst_ack_1<= rack(0);
      W_regWrite_621_delayed_1_0_648_inst : InterlockBuffer generic map ( -- 
        name => "W_regWrite_621_delayed_1_0_648_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => regWrite_605,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => regWrite_621_delayed_1_0_650,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_regWrite_655_delayed_9_0_707_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_regWrite_655_delayed_9_0_707_inst_req_0;
      W_regWrite_655_delayed_9_0_707_inst_ack_0<= wack(0);
      rreq(0) <= W_regWrite_655_delayed_9_0_707_inst_req_1;
      W_regWrite_655_delayed_9_0_707_inst_ack_1<= rack(0);
      W_regWrite_655_delayed_9_0_707_inst : InterlockBuffer generic map ( -- 
        name => "W_regWrite_655_delayed_9_0_707_inst",
        buffer_size => 9,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => regWrite_605,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => regWrite_655_delayed_9_0_709,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rs1_imm_652_delayed_9_0_701_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rs1_imm_652_delayed_9_0_701_inst_req_0;
      W_rs1_imm_652_delayed_9_0_701_inst_ack_0<= wack(0);
      rreq(0) <= W_rs1_imm_652_delayed_9_0_701_inst_req_1;
      W_rs1_imm_652_delayed_9_0_701_inst_ack_1<= rack(0);
      W_rs1_imm_652_delayed_9_0_701_inst : InterlockBuffer generic map ( -- 
        name => "W_rs1_imm_652_delayed_9_0_701_inst",
        buffer_size => 9,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => rs1_imm_343,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rs1_imm_652_delayed_9_0_703,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rs2_654_delayed_9_0_704_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rs2_654_delayed_9_0_704_inst_req_0;
      W_rs2_654_delayed_9_0_704_inst_ack_0<= wack(0);
      rreq(0) <= W_rs2_654_delayed_9_0_704_inst_req_1;
      W_rs2_654_delayed_9_0_704_inst_ack_1<= rack(0);
      W_rs2_654_delayed_9_0_704_inst : InterlockBuffer generic map ( -- 
        name => "W_rs2_654_delayed_9_0_704_inst",
        buffer_size => 9,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => rs2_347,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rs2_654_delayed_9_0_706,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_write_to_uart_661_delayed_8_0_723_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_write_to_uart_661_delayed_8_0_723_inst_req_0;
      W_write_to_uart_661_delayed_8_0_723_inst_ack_0<= wack(0);
      rreq(0) <= W_write_to_uart_661_delayed_8_0_723_inst_req_1;
      W_write_to_uart_661_delayed_8_0_723_inst_ack_1<= rack(0);
      W_write_to_uart_661_delayed_8_0_723_inst : InterlockBuffer generic map ( -- 
        name => "W_write_to_uart_661_delayed_8_0_723_inst",
        buffer_size => 8,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => write_to_uart_660,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => write_to_uart_661_delayed_8_0_725,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    n_program_cnt_378_322_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= n_program_cnt_378_322_buf_req_0;
      n_program_cnt_378_322_buf_ack_0<= wack(0);
      rreq(0) <= n_program_cnt_378_322_buf_req_1;
      n_program_cnt_378_322_buf_ack_1<= rack(0);
      n_program_cnt_378_322_buf : InterlockBuffer generic map ( -- 
        name => "n_program_cnt_378_322_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => n_program_cnt_378,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => n_program_cnt_378_322_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- interlock type_cast_503_inst
    process(SHL_u32_u32_502_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := SHL_u32_u32_502_wire(31 downto 0);
      type_cast_503_wire <= tmp_var; -- 
    end process;
    -- interlock type_cast_511_inst
    process(LSHR_u32_u32_510_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := LSHR_u32_u32_510_wire(31 downto 0);
      type_cast_511_wire <= tmp_var; -- 
    end process;
    -- interlock type_cast_518_inst
    process(LSHR_u32_u32_517_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := LSHR_u32_u32_517_wire(31 downto 0);
      type_cast_518_wire <= tmp_var; -- 
    end process;
    type_cast_681_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= type_cast_681_inst_req_0;
      type_cast_681_inst_ack_0<= wack(0);
      rreq(0) <= type_cast_681_inst_req_1;
      type_cast_681_inst_ack_1<= rack(0);
      type_cast_681_inst : InterlockBuffer generic map ( -- 
        name => "type_cast_681_inst",
        buffer_size => 8,
        flow_through =>  false ,
        full_rate =>  true ,
        in_data_width => 8,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => program_cnt_1_665,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => type_cast_640_640_delayed_8_0_682,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    do_while_stmt_317_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= NOT_u1_u1_733_wire;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_317_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_317_branch_req_0,
          ack0 => do_while_stmt_317_branch_ack_0,
          ack1 => do_while_stmt_317_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_312_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= EQ_u8_u1_315_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_312_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_312_branch_req_0,
          ack0 => if_stmt_312_branch_ack_0,
          ack1 => if_stmt_312_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- binary operator ADD_u32_u32_453_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntAdd_proc(rd1_361, rd2_361, tmp_var);
      ADD_u32_u32_453_wire <= tmp_var; --
    end process;
    -- binary operator ADD_u32_u32_489_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntAdd_proc(rd1_361, rd2_361, tmp_var);
      ADD_u32_u32_489_wire <= tmp_var; --
    end process;
    -- binary operator ADD_u8_u8_664_inst
    process(program_cnt_319) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApIntAdd_proc(program_cnt_319, konst_663_wire_constant, tmp_var);
      program_cnt_1_665 <= tmp_var; --
    end process;
    -- binary operator AND_u32_u32_461_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntAnd_proc(rd1_361, rd2_361, tmp_var);
      AND_u32_u32_461_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u1_u9_327_inst
    process(R_read_signal_325_wire_constant, program_cnt_319) -- 
      variable tmp_var : std_logic_vector(8 downto 0); -- 
    begin -- 
      ApConcat_proc(R_read_signal_325_wire_constant, program_cnt_319, tmp_var);
      CONCAT_u1_u9_327_wire <= tmp_var; --
    end process;
    -- shared split operator group (5) : CONCAT_u1_u9_629_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(8 downto 0);
      signal data_out: std_logic_vector(8 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 6);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= memWrite_602_delayed_1_0_625 & addr_in_to_mem_608;
      CONCAT_u1_u9_604_604_delayed_6_0_630 <= data_out(8 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u9_629_inst_req_0;
      CONCAT_u1_u9_629_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u9_629_inst_req_1;
      CONCAT_u1_u9_629_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 9,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 6,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- binary operator CONCAT_u23_u55_636_inst
    process(R_zero_23_634_wire_constant, rd2_361) -- 
      variable tmp_var : std_logic_vector(54 downto 0); -- 
    begin -- 
      ApConcat_proc(R_zero_23_634_wire_constant, rd2_361, tmp_var);
      CONCAT_u23_u55_636_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u24_u32_395_inst
    process(R_zero_24_393_wire_constant, rs1_imm_343) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApConcat_proc(R_zero_24_393_wire_constant, rs1_imm_343, tmp_var);
      CONCAT_u24_u32_395_wire <= tmp_var; --
    end process;
    -- shared split operator group (8) : CONCAT_u9_u64_331_inst 
    ApConcat_group_8: Block -- 
      signal data_in: std_logic_vector(8 downto 0);
      signal data_out: std_logic_vector(63 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u1_u9_327_wire;
      CONCAT_u9_u64_331_wire <= data_out(63 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u9_u64_331_inst_req_0;
      CONCAT_u9_u64_331_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u9_u64_331_inst_req_1;
      CONCAT_u9_u64_331_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_8_gI: SplitGuardInterface generic map(name => "ApConcat_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 9,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 64,
          constant_operand => "0000000000000000000000000000000000000000000000000000000",
          constant_width => 55,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : CONCAT_u9_u64_637_inst 
    ApConcat_group_9: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(63 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u1_u9_604_604_delayed_6_0_630 & CONCAT_u23_u55_636_wire;
      CONCAT_u9_u64_637_wire <= data_out(63 downto 0);
      guard_vector(0)  <=  not is_uart_addr_600_delayed_6_0_622(0);
      reqL_unguarded(0) <= CONCAT_u9_u64_637_inst_req_0;
      CONCAT_u9_u64_637_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u9_u64_637_inst_req_1;
      CONCAT_u9_u64_637_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_9_gI: SplitGuardInterface generic map(name => "ApConcat_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 9,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 55, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 64,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : EQ_u1_u1_686_inst 
    ApIntEq_group_10: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 8);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= regWrite_605;
      EQ_u1_u1_643_643_delayed_8_0_687 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u1_u1_686_inst_req_0;
      EQ_u1_u1_686_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u1_u1_686_inst_req_1;
      EQ_u1_u1_686_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_10_gI: SplitGuardInterface generic map(name => "ApIntEq_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "1",
          constant_width => 1,
          buffering  => 8,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- binary operator EQ_u32_u1_525_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(rd1_361, rd2_361, tmp_var);
      EQ_u32_u1_525_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_315_inst
    process(cmd_311) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(cmd_311, R_one_8_314_wire_constant, tmp_var);
      EQ_u8_u1_315_wire <= tmp_var; --
    end process;
    -- shared split operator group (13) : EQ_u8_u1_387_inst 
    ApIntEq_group_13: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_403_403_delayed_7_0_388 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_387_inst_req_0;
      EQ_u8_u1_387_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_387_inst_req_1;
      EQ_u8_u1_387_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_13_gI: SplitGuardInterface generic map(name => "ApIntEq_group_13_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_13",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001001",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 13
    -- binary operator EQ_u8_u1_392_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_SBIR_391_wire_constant, tmp_var);
      EQ_u8_u1_392_wire <= tmp_var; --
    end process;
    -- shared split operator group (15) : EQ_u8_u1_402_inst 
    ApIntEq_group_15: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_420_420_delayed_7_0_403 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_402_inst_req_0;
      EQ_u8_u1_402_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_402_inst_req_1;
      EQ_u8_u1_402_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_15_gI: SplitGuardInterface generic map(name => "ApIntEq_group_15_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_15",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00000101",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 15
    -- shared split operator group (16) : EQ_u8_u1_407_inst 
    ApIntEq_group_16: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_429_429_delayed_7_0_408 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_407_inst_req_0;
      EQ_u8_u1_407_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_407_inst_req_1;
      EQ_u8_u1_407_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_16_gI: SplitGuardInterface generic map(name => "ApIntEq_group_16_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_16",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00000110",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 16
    -- shared split operator group (17) : EQ_u8_u1_412_inst 
    ApIntEq_group_17: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_437_437_delayed_7_0_413 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_412_inst_req_0;
      EQ_u8_u1_412_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_412_inst_req_1;
      EQ_u8_u1_412_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_17_gI: SplitGuardInterface generic map(name => "ApIntEq_group_17_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_17",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00000111",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 17
    -- shared split operator group (18) : EQ_u8_u1_417_inst 
    ApIntEq_group_18: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_446_446_delayed_7_0_418 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_417_inst_req_0;
      EQ_u8_u1_417_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_417_inst_req_1;
      EQ_u8_u1_417_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_18_gI: SplitGuardInterface generic map(name => "ApIntEq_group_18_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_18",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001000",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 18
    -- shared split operator group (19) : EQ_u8_u1_422_inst 
    ApIntEq_group_19: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_456_456_delayed_7_0_423 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_422_inst_req_0;
      EQ_u8_u1_422_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_422_inst_req_1;
      EQ_u8_u1_422_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_19_gI: SplitGuardInterface generic map(name => "ApIntEq_group_19_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_19",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001001",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 19
    -- shared split operator group (20) : EQ_u8_u1_427_inst 
    ApIntEq_group_20: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_464_464_delayed_7_0_428 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_427_inst_req_0;
      EQ_u8_u1_427_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_427_inst_req_1;
      EQ_u8_u1_427_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_20_gI: SplitGuardInterface generic map(name => "ApIntEq_group_20_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_20",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001010",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 20
    -- shared split operator group (21) : EQ_u8_u1_432_inst 
    ApIntEq_group_21: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_473_473_delayed_7_0_433 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_432_inst_req_0;
      EQ_u8_u1_432_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_432_inst_req_1;
      EQ_u8_u1_432_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_21_gI: SplitGuardInterface generic map(name => "ApIntEq_group_21_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_21",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001011",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 21
    -- shared split operator group (22) : EQ_u8_u1_437_inst 
    ApIntEq_group_22: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_483_483_delayed_7_0_438 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_437_inst_req_0;
      EQ_u8_u1_437_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_437_inst_req_1;
      EQ_u8_u1_437_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_22_gI: SplitGuardInterface generic map(name => "ApIntEq_group_22_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_22",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001100",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 22
    -- shared split operator group (23) : EQ_u8_u1_442_inst 
    ApIntEq_group_23: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_492_492_delayed_7_0_443 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_442_inst_req_0;
      EQ_u8_u1_442_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_442_inst_req_1;
      EQ_u8_u1_442_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_23_gI: SplitGuardInterface generic map(name => "ApIntEq_group_23_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_23",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00001101",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 23
    -- shared split operator group (24) : EQ_u8_u1_447_inst 
    ApIntEq_group_24: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_502_502_delayed_7_0_448 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_447_inst_req_0;
      EQ_u8_u1_447_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_447_inst_req_1;
      EQ_u8_u1_447_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_24_gI: SplitGuardInterface generic map(name => "ApIntEq_group_24_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_24",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00010010",
          constant_width => 8,
          buffering  => 7,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 24
    -- binary operator EQ_u8_u1_552_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_STORE_551_wire_constant, tmp_var);
      EQ_u8_u1_552_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_560_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_SBIR_559_wire_constant, tmp_var);
      EQ_u8_u1_560_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_563_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_LOAD_562_wire_constant, tmp_var);
      EQ_u8_u1_563_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_567_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_AND_566_wire_constant, tmp_var);
      EQ_u8_u1_567_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_571_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_OR_570_wire_constant, tmp_var);
      EQ_u8_u1_571_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_574_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_XNOR_573_wire_constant, tmp_var);
      EQ_u8_u1_574_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_578_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_ADD_577_wire_constant, tmp_var);
      EQ_u8_u1_578_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_583_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_SUB_582_wire_constant, tmp_var);
      EQ_u8_u1_583_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_586_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_SLL_585_wire_constant, tmp_var);
      EQ_u8_u1_586_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_590_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_SRL_589_wire_constant, tmp_var);
      EQ_u8_u1_590_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_594_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_L_SRA_593_wire_constant, tmp_var);
      EQ_u8_u1_594_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_597_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_CALL_596_wire_constant, tmp_var);
      EQ_u8_u1_597_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_601_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_CMP_600_wire_constant, tmp_var);
      EQ_u8_u1_601_wire <= tmp_var; --
    end process;
    -- binary operator EQ_u8_u1_615_inst
    process(memAddr_611) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(memAddr_611, R_uart_addr_614_wire_constant, tmp_var);
      EQ_u8_u1_615_wire <= tmp_var; --
    end process;
    -- shared split operator group (39) : EQ_u8_u1_669_inst 
    ApIntEq_group_39: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 8);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_634_634_delayed_8_0_670 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_669_inst_req_0;
      EQ_u8_u1_669_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_669_inst_req_1;
      EQ_u8_u1_669_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_39_gI: SplitGuardInterface generic map(name => "ApIntEq_group_39_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_39",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00000011",
          constant_width => 8,
          buffering  => 8,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 39
    -- shared split operator group (40) : EQ_u8_u1_677_inst 
    ApIntEq_group_40: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 8);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= opcode_339;
      EQ_u8_u1_638_638_delayed_8_0_678 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_677_inst_req_0;
      EQ_u8_u1_677_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_677_inst_req_1;
      EQ_u8_u1_677_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_40_gI: SplitGuardInterface generic map(name => "ApIntEq_group_40_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_40",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "00010000",
          constant_width => 8,
          buffering  => 8,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 40
    -- binary operator EQ_u8_u1_732_inst
    process(opcode_339) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_339, R_HALT_731_wire_constant, tmp_var);
      EQ_u8_u1_732_wire <= tmp_var; --
    end process;
    -- binary operator LSHR_u32_u32_510_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntLSHR_proc(rd1_361, rd2_361, tmp_var);
      LSHR_u32_u32_510_wire <= tmp_var; --
    end process;
    -- binary operator LSHR_u32_u32_517_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntLSHR_proc(rd1_361, rd2_361, tmp_var);
      LSHR_u32_u32_517_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_733_inst
    process(EQ_u8_u1_732_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", EQ_u8_u1_732_wire, tmp_var);
      NOT_u1_u1_733_wire <= tmp_var; -- 
    end process;
    -- binary operator OR_u1_u1_564_inst
    process(EQ_u8_u1_560_wire, EQ_u8_u1_563_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(EQ_u8_u1_560_wire, EQ_u8_u1_563_wire, tmp_var);
      OR_u1_u1_564_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_568_inst
    process(OR_u1_u1_564_wire, EQ_u8_u1_567_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_564_wire, EQ_u8_u1_567_wire, tmp_var);
      OR_u1_u1_568_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_575_inst
    process(EQ_u8_u1_571_wire, EQ_u8_u1_574_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(EQ_u8_u1_571_wire, EQ_u8_u1_574_wire, tmp_var);
      OR_u1_u1_575_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_579_inst
    process(OR_u1_u1_575_wire, EQ_u8_u1_578_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_575_wire, EQ_u8_u1_578_wire, tmp_var);
      OR_u1_u1_579_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_580_inst
    process(OR_u1_u1_568_wire, OR_u1_u1_579_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_568_wire, OR_u1_u1_579_wire, tmp_var);
      OR_u1_u1_580_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_587_inst
    process(EQ_u8_u1_583_wire, EQ_u8_u1_586_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(EQ_u8_u1_583_wire, EQ_u8_u1_586_wire, tmp_var);
      OR_u1_u1_587_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_591_inst
    process(OR_u1_u1_587_wire, EQ_u8_u1_590_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_587_wire, EQ_u8_u1_590_wire, tmp_var);
      OR_u1_u1_591_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_598_inst
    process(EQ_u8_u1_594_wire, EQ_u8_u1_597_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(EQ_u8_u1_594_wire, EQ_u8_u1_597_wire, tmp_var);
      OR_u1_u1_598_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_602_inst
    process(OR_u1_u1_598_wire, EQ_u8_u1_601_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_598_wire, EQ_u8_u1_601_wire, tmp_var);
      OR_u1_u1_602_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_603_inst
    process(OR_u1_u1_591_wire, OR_u1_u1_602_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_591_wire, OR_u1_u1_602_wire, tmp_var);
      OR_u1_u1_603_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_604_inst
    process(OR_u1_u1_580_wire, OR_u1_u1_603_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_580_wire, OR_u1_u1_603_wire, tmp_var);
      regWrite_605 <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_657_inst
    process(is_uart_addr_619, regWrite_621_delayed_1_0_650) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(is_uart_addr_619, regWrite_621_delayed_1_0_650, tmp_var);
      OR_u1_u1_657_wire <= tmp_var; --
    end process;
    -- binary operator OR_u1_u1_659_inst
    process(OR_u1_u1_657_wire, memWrite_623_delayed_1_0_653) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u1_u1_657_wire, memWrite_623_delayed_1_0_653, tmp_var);
      write_to_uart_660 <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_457_inst
    process(MUX_455_wire, MUX_416_416_delayed_7_0_398) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_455_wire, MUX_416_416_delayed_7_0_398, tmp_var);
      OR_u32_u32_457_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_464_inst
    process(OR_u32_u32_457_wire, MUX_463_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_457_wire, MUX_463_wire, tmp_var);
      OR_u32_u32_464_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_468_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(rd1_361, rd2_361, tmp_var);
      OR_u32_u32_468_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_477_inst
    process(MUX_470_wire, MUX_476_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_470_wire, MUX_476_wire, tmp_var);
      OR_u32_u32_477_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_484_inst
    process(OR_u32_u32_477_wire, MUX_483_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_477_wire, MUX_483_wire, tmp_var);
      OR_u32_u32_484_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_485_inst
    process(OR_u32_u32_464_wire, OR_u32_u32_484_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_464_wire, OR_u32_u32_484_wire, tmp_var);
      OR_u32_u32_485_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_498_inst
    process(MUX_491_wire, MUX_497_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_491_wire, MUX_497_wire, tmp_var);
      OR_u32_u32_498_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_506_inst
    process(OR_u32_u32_498_wire, MUX_505_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_498_wire, MUX_505_wire, tmp_var);
      OR_u32_u32_506_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_521_inst
    process(MUX_513_wire, MUX_520_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_513_wire, MUX_520_wire, tmp_var);
      OR_u32_u32_521_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_535_inst
    process(MUX_528_wire, MUX_534_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(MUX_528_wire, MUX_534_wire, tmp_var);
      OR_u32_u32_535_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_542_inst
    process(OR_u32_u32_535_wire, MUX_541_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_535_wire, MUX_541_wire, tmp_var);
      OR_u32_u32_542_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_545_inst
    process(OR_u32_u32_521_wire, MUX_544_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_521_wire, MUX_544_wire, tmp_var);
      OR_u32_u32_545_wire <= tmp_var; --
    end process;
    -- binary operator OR_u32_u32_546_inst
    process(OR_u32_u32_506_wire, OR_u32_u32_545_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntOr_proc(OR_u32_u32_506_wire, OR_u32_u32_545_wire, tmp_var);
      OR_u32_u32_546_wire <= tmp_var; --
    end process;
    -- shared split operator group (71) : OR_u32_u32_547_inst 
    ApIntOr_group_71: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= OR_u32_u32_485_wire & OR_u32_u32_546_wire;
      exec_result_548 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= OR_u32_u32_547_inst_req_0;
      OR_u32_u32_547_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= OR_u32_u32_547_inst_req_1;
      OR_u32_u32_547_inst_ack_1 <= ackR_unguarded(0);
      ApIntOr_group_71_gI: SplitGuardInterface generic map(name => "ApIntOr_group_71_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntOr",
          name => "ApIntOr_group_71",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 71
    -- binary operator SHL_u32_u32_502_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntSHL_proc(rd1_361, rd2_361, tmp_var);
      SHL_u32_u32_502_wire <= tmp_var; --
    end process;
    -- binary operator SUB_u32_u32_495_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntSub_proc(rd1_361, rd2_361, tmp_var);
      SUB_u32_u32_495_wire <= tmp_var; --
    end process;
    -- binary operator UGT_u32_u1_538_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(rd1_361, rd2_361, tmp_var);
      UGT_u32_u1_538_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u32_u1_531_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(rd1_361, rd2_361, tmp_var);
      ULT_u32_u1_531_wire <= tmp_var; --
    end process;
    -- binary operator XOR_u32_u32_474_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntXnor_proc(rd1_361, rd2_361, tmp_var);
      XOR_u32_u32_474_wire <= tmp_var; --
    end process;
    -- binary operator XOR_u32_u32_481_inst
    process(rd1_361, rd2_361) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntXor_proc(rd1_361, rd2_361, tmp_var);
      XOR_u32_u32_481_wire <= tmp_var; --
    end process;
    -- shared inport operator group (0) : RPIPE_mem_out_641_inst RPIPE_mem_out_334_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(63 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 1 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 2, 0 => 2);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => true);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      reqL_unguarded(1) <= RPIPE_mem_out_641_inst_req_0;
      reqL_unguarded(0) <= RPIPE_mem_out_334_inst_req_0;
      RPIPE_mem_out_641_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_mem_out_334_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= RPIPE_mem_out_641_inst_req_1;
      reqR_unguarded(0) <= RPIPE_mem_out_334_inst_req_1;
      RPIPE_mem_out_641_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_mem_out_334_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  not is_uart_addr_619(0);
      memReadData_642 <= data_out(63 downto 32);
      instruction_335 <= data_out(31 downto 0);
      mem_out_read_0_gI: SplitGuardInterface generic map(name => "mem_out_read_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      mem_out_read_0: InputPortRevised -- 
        generic map ( name => "mem_out_read_0", data_width => 32,  num_reqs => 2,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => mem_out_pipe_read_req(0),
          oack => mem_out_pipe_read_ack(0),
          odata => mem_out_pipe_read_data(31 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- read from input-signal start_processor
    RPIPE_start_processor_310_wire <= start_processor;
    -- shared outport operator group (0) : WPIPE_mem_in_632_inst WPIPE_mem_in_324_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal sample_req, sample_ack : BooleanArray( 1 downto 0);
      signal update_req, update_ack : BooleanArray( 1 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 1 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => true);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      sample_req_unguarded(1) <= WPIPE_mem_in_632_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_mem_in_324_inst_req_0;
      WPIPE_mem_in_632_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_mem_in_324_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(1) <= WPIPE_mem_in_632_inst_req_1;
      update_req_unguarded(0) <= WPIPE_mem_in_324_inst_req_1;
      WPIPE_mem_in_632_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_mem_in_324_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  not is_uart_addr_600_delayed_6_0_622(0);
      data_in <= CONCAT_u9_u64_637_wire & CONCAT_u9_u64_331_wire;
      mem_in_write_0_gI: SplitGuardInterface generic map(name => "mem_in_write_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      mem_in_write_0: OutputPortRevised -- 
        generic map ( name => "mem_in", data_width => 64, num_reqs => 2, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => mem_in_pipe_write_req(0),
          oack => mem_in_pipe_write_ack(0),
          odata => mem_in_pipe_write_data(63 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared call operator group (0) : call_stmt_361_call call_stmt_722_call 
    registerFileModule_call_group_0: Block -- 
      signal data_in: std_logic_vector(117 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 2, 0 => 2);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 7, 1 => 7);
      -- 
    begin -- 
      reqL_unguarded(1) <= call_stmt_361_call_req_0;
      reqL_unguarded(0) <= call_stmt_722_call_req_0;
      call_stmt_361_call_ack_0 <= ackL_unguarded(1);
      call_stmt_722_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= call_stmt_361_call_req_1;
      reqR_unguarded(0) <= call_stmt_722_call_req_1;
      call_stmt_361_call_ack_1 <= ackR_unguarded(1);
      call_stmt_722_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      registerFileModule_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "registerFileModule_call_group_0_accessRegulator_0", num_slots => 2) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      registerFileModule_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "registerFileModule_call_group_0_accessRegulator_1", num_slots => 2) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      registerFileModule_call_group_0_gI: SplitGuardInterface generic map(name => "registerFileModule_call_group_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= R_one_1_352_wire_constant & rs1_imm_343 & R_one_1_354_wire_constant & rs2_347 & R_zero_1_356_wire_constant & rd_351 & R_zero_32_358_wire_constant & R_zero_1_713_wire_constant & rs1_imm_652_delayed_9_0_703 & R_zero_1_715_wire_constant & rs2_654_delayed_9_0_706 & regWrite_655_delayed_9_0_709 & rd_656_delayed_9_0_712 & regWriteData_700;
      rd1_361 <= data_out(127 downto 96);
      rd2_361 <= data_out(95 downto 64);
      read_while_write1_722 <= data_out(63 downto 32);
      read_while_write2_722 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 118,
        owidth => 59,
        buffering => inBUFs,
        full_rate =>  true,
        twidth => 2,
        nreqs => 2,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => registerFileModule_call_reqs(0),
          ackR => registerFileModule_call_acks(0),
          dataR => registerFileModule_call_data(58 downto 0),
          tagR => registerFileModule_call_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 64,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => true, 
          twidth => 2,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 2) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => registerFileModule_return_acks(0), -- cross-over
          ackL => registerFileModule_return_reqs(0), -- cross-over
          dataL => registerFileModule_return_data(63 downto 0),
          tagL => registerFileModule_return_tag(1 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_378_call 
    cal_Next_program_cnt_call_group_1: Block -- 
      signal data_in: std_logic_vector(80 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 4);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_378_call_req_0;
      call_stmt_378_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_378_call_req_1;
      call_stmt_378_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      cal_Next_program_cnt_call_group_1_gI: SplitGuardInterface generic map(name => "cal_Next_program_cnt_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= opcode_385_delayed_7_0_368 & rd1_361 & rd2_361 & program_cnt_388_delayed_7_0_371 & is_rs1_neg_365;
      n_program_cnt_378 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 81,
        owidth => 81,
        buffering => inBUFs,
        full_rate =>  true,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => cal_Next_program_cnt_call_reqs(0),
          ackR => cal_Next_program_cnt_call_acks(0),
          dataR => cal_Next_program_cnt_call_data(80 downto 0),
          tagR => cal_Next_program_cnt_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 8,
          owidth => 8,
          detailed_buffering_per_output => outBUFs, 
          full_rate => true, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => cal_Next_program_cnt_return_acks(0), -- cross-over
          ackL => cal_Next_program_cnt_return_reqs(0), -- cross-over
          dataL => cal_Next_program_cnt_return_data(7 downto 0),
          tagL => cal_Next_program_cnt_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- shared call operator group (2) : call_stmt_645_call 
    receive_from_uart_call_group_2: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 4);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_645_call_req_0;
      call_stmt_645_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_645_call_req_1;
      call_stmt_645_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= is_uart_addr_619(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      receive_from_uart_call_group_2_gI: SplitGuardInterface generic map(name => "receive_from_uart_call_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_from_uart_645 <= data_out(31 downto 0);
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => receive_from_uart_call_reqs(0),
          ackR => receive_from_uart_call_acks(0),
          tagR => receive_from_uart_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => true, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => receive_from_uart_return_acks(0), -- cross-over
          ackL => receive_from_uart_return_reqs(0), -- cross-over
          dataL => receive_from_uart_return_data(31 downto 0),
          tagL => receive_from_uart_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    -- shared call operator group (3) : call_stmt_728_call 
    send_to_uart_call_group_3: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 4);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_728_call_req_0;
      call_stmt_728_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_728_call_req_1;
      call_stmt_728_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= write_to_uart_661_delayed_8_0_725(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      send_to_uart_call_group_3_gI: SplitGuardInterface generic map(name => "send_to_uart_call_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= regWriteData_700;
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 32,
        owidth => 32,
        buffering => inBUFs,
        full_rate =>  true,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => send_to_uart_call_reqs(0),
          ackR => send_to_uart_call_acks(0),
          dataR => send_to_uart_call_data(31 downto 0),
          tagR => send_to_uart_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => send_to_uart_return_acks(0), -- cross-over
          ackL => send_to_uart_return_reqs(0), -- cross-over
          tagL => send_to_uart_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 3
    -- 
  end Block; -- data_path
  -- 
end processor_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity receive_from_uart is -- 
  generic (tag_length : integer); 
  port ( -- 
    receive_data_from_uart : out  std_logic_vector(31 downto 0);
    in_pipe_pipe_read_req : out  std_logic_vector(0 downto 0);
    in_pipe_pipe_read_ack : in   std_logic_vector(0 downto 0);
    in_pipe_pipe_read_data : in   std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity receive_from_uart;
architecture receive_from_uart_arch of receive_from_uart is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal receive_data_from_uart_buffer :  std_logic_vector(31 downto 0);
  signal receive_data_from_uart_update_enable: Boolean;
  signal receive_from_uart_CP_351_start: Boolean;
  signal receive_from_uart_CP_351_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal CONCAT_u16_u32_272_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_272_inst_req_1 : boolean;
  signal RPIPE_in_pipe_254_inst_req_0 : boolean;
  signal RPIPE_in_pipe_254_inst_ack_0 : boolean;
  signal RPIPE_in_pipe_254_inst_req_1 : boolean;
  signal RPIPE_in_pipe_254_inst_ack_1 : boolean;
  signal RPIPE_in_pipe_257_inst_req_0 : boolean;
  signal RPIPE_in_pipe_257_inst_ack_0 : boolean;
  signal RPIPE_in_pipe_257_inst_req_1 : boolean;
  signal RPIPE_in_pipe_257_inst_ack_1 : boolean;
  signal RPIPE_in_pipe_260_inst_req_0 : boolean;
  signal RPIPE_in_pipe_260_inst_ack_0 : boolean;
  signal RPIPE_in_pipe_260_inst_req_1 : boolean;
  signal RPIPE_in_pipe_260_inst_ack_1 : boolean;
  signal RPIPE_in_pipe_263_inst_req_0 : boolean;
  signal RPIPE_in_pipe_263_inst_ack_0 : boolean;
  signal RPIPE_in_pipe_263_inst_req_1 : boolean;
  signal RPIPE_in_pipe_263_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_272_inst_req_0 : boolean;
  signal CONCAT_u16_u32_272_inst_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "receive_from_uart_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  receive_from_uart_CP_351_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "receive_from_uart_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= receive_data_from_uart_buffer;
  receive_data_from_uart <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= receive_from_uart_CP_351_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= receive_from_uart_CP_351_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= receive_from_uart_CP_351_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  receive_from_uart_CP_351: Block -- control-path 
    signal receive_from_uart_CP_351_elements: BooleanArray(10 downto 0);
    -- 
  begin -- 
    receive_from_uart_CP_351_elements(0) <= receive_from_uart_CP_351_start;
    receive_from_uart_CP_351_symbol <= receive_from_uart_CP_351_elements(10);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	10 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Update/cr
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/$entry
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_sample_start_
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Sample/rr
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_update_start_
      -- CP-element group 0: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Update/$entry
      -- 
    rr_364_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_364_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(0), ack => RPIPE_in_pipe_254_inst_req_0); -- 
    cr_425_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_425_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(0), ack => CONCAT_u16_u32_272_inst_req_1); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_sample_completed_
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_update_start_
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Sample/ra
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Update/$entry
      -- CP-element group 1: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Update/cr
      -- 
    ra_365_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_254_inst_ack_0, ack => receive_from_uart_CP_351_elements(1)); -- 
    cr_369_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_369_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(1), ack => RPIPE_in_pipe_254_inst_req_1); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_update_completed_
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Update/$exit
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_254_Update/ca
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_sample_start_
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Sample/rr
      -- 
    ca_370_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_254_inst_ack_1, ack => receive_from_uart_CP_351_elements(2)); -- 
    rr_378_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_378_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(2), ack => RPIPE_in_pipe_257_inst_req_0); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_sample_completed_
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_update_start_
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Sample/ra
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Update/$entry
      -- CP-element group 3: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Update/cr
      -- 
    ra_379_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_257_inst_ack_0, ack => receive_from_uart_CP_351_elements(3)); -- 
    cr_383_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_383_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(3), ack => RPIPE_in_pipe_257_inst_req_1); -- 
    -- CP-element group 4:  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_update_completed_
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Update/$exit
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_257_Update/ca
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_sample_start_
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Sample/$entry
      -- CP-element group 4: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Sample/rr
      -- 
    ca_384_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_257_inst_ack_1, ack => receive_from_uart_CP_351_elements(4)); -- 
    rr_392_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_392_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(4), ack => RPIPE_in_pipe_260_inst_req_0); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_sample_completed_
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_update_start_
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Sample/ra
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Update/$entry
      -- CP-element group 5: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Update/cr
      -- 
    ra_393_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_260_inst_ack_0, ack => receive_from_uart_CP_351_elements(5)); -- 
    cr_397_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_397_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(5), ack => RPIPE_in_pipe_260_inst_req_1); -- 
    -- CP-element group 6:  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_update_completed_
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Update/$exit
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_260_Update/ca
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_sample_start_
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Sample/$entry
      -- CP-element group 6: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Sample/rr
      -- 
    ca_398_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_260_inst_ack_1, ack => receive_from_uart_CP_351_elements(6)); -- 
    rr_406_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_406_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(6), ack => RPIPE_in_pipe_263_inst_req_0); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_sample_completed_
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_update_start_
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Sample/ra
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Update/$entry
      -- CP-element group 7: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Update/cr
      -- 
    ra_407_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_263_inst_ack_0, ack => receive_from_uart_CP_351_elements(7)); -- 
    cr_411_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_411_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(7), ack => RPIPE_in_pipe_263_inst_req_1); -- 
    -- CP-element group 8:  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_update_completed_
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Update/$exit
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/RPIPE_in_pipe_263_Update/ca
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_sample_start_
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Sample/$entry
      -- CP-element group 8: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Sample/rr
      -- 
    ca_412_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_in_pipe_263_inst_ack_1, ack => receive_from_uart_CP_351_elements(8)); -- 
    rr_420_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_420_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => receive_from_uart_CP_351_elements(8), ack => CONCAT_u16_u32_272_inst_req_0); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_sample_completed_
      -- CP-element group 9: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Sample/ra
      -- 
    ra_421_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_272_inst_ack_0, ack => receive_from_uart_CP_351_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10:  members (5) 
      -- CP-element group 10: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Update/ca
      -- CP-element group 10: 	 $exit
      -- CP-element group 10: 	 assign_stmt_255_to_assign_stmt_273/$exit
      -- CP-element group 10: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_update_completed_
      -- CP-element group 10: 	 assign_stmt_255_to_assign_stmt_273/CONCAT_u16_u32_272_Update/$exit
      -- 
    ca_426_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_272_inst_ack_1, ack => receive_from_uart_CP_351_elements(10)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u8_u16_268_wire : std_logic_vector(15 downto 0);
    signal CONCAT_u8_u16_271_wire : std_logic_vector(15 downto 0);
    signal in_data0_255 : std_logic_vector(7 downto 0);
    signal in_data1_258 : std_logic_vector(7 downto 0);
    signal in_data2_261 : std_logic_vector(7 downto 0);
    signal in_data3_264 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    -- shared split operator group (0) : CONCAT_u16_u32_272_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u8_u16_268_wire & CONCAT_u8_u16_271_wire;
      receive_data_from_uart_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_272_inst_req_0;
      CONCAT_u16_u32_272_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_272_inst_req_1;
      CONCAT_u16_u32_272_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- binary operator CONCAT_u8_u16_268_inst
    process(in_data0_255, in_data1_258) -- 
      variable tmp_var : std_logic_vector(15 downto 0); -- 
    begin -- 
      ApConcat_proc(in_data0_255, in_data1_258, tmp_var);
      CONCAT_u8_u16_268_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u8_u16_271_inst
    process(in_data2_261, in_data3_264) -- 
      variable tmp_var : std_logic_vector(15 downto 0); -- 
    begin -- 
      ApConcat_proc(in_data2_261, in_data3_264, tmp_var);
      CONCAT_u8_u16_271_wire <= tmp_var; --
    end process;
    -- shared inport operator group (0) : RPIPE_in_pipe_254_inst RPIPE_in_pipe_260_inst RPIPE_in_pipe_263_inst RPIPE_in_pipe_257_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 3 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= RPIPE_in_pipe_254_inst_req_0;
      reqL_unguarded(2) <= RPIPE_in_pipe_260_inst_req_0;
      reqL_unguarded(1) <= RPIPE_in_pipe_263_inst_req_0;
      reqL_unguarded(0) <= RPIPE_in_pipe_257_inst_req_0;
      RPIPE_in_pipe_254_inst_ack_0 <= ackL_unguarded(3);
      RPIPE_in_pipe_260_inst_ack_0 <= ackL_unguarded(2);
      RPIPE_in_pipe_263_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_in_pipe_257_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= RPIPE_in_pipe_254_inst_req_1;
      reqR_unguarded(2) <= RPIPE_in_pipe_260_inst_req_1;
      reqR_unguarded(1) <= RPIPE_in_pipe_263_inst_req_1;
      reqR_unguarded(0) <= RPIPE_in_pipe_257_inst_req_1;
      RPIPE_in_pipe_254_inst_ack_1 <= ackR_unguarded(3);
      RPIPE_in_pipe_260_inst_ack_1 <= ackR_unguarded(2);
      RPIPE_in_pipe_263_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_in_pipe_257_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      in_data0_255 <= data_out(31 downto 24);
      in_data2_261 <= data_out(23 downto 16);
      in_data3_264 <= data_out(15 downto 8);
      in_data1_258 <= data_out(7 downto 0);
      in_pipe_read_0_gI: SplitGuardInterface generic map(name => "in_pipe_read_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      in_pipe_read_0: InputPortRevised -- 
        generic map ( name => "in_pipe_read_0", data_width => 8,  num_reqs => 4,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => in_pipe_pipe_read_req(0),
          oack => in_pipe_pipe_read_ack(0),
          odata => in_pipe_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- 
  end Block; -- data_path
  -- 
end receive_from_uart_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity registerFileModule is -- 
  generic (tag_length : integer); 
  port ( -- 
    valid_1 : in  std_logic_vector(0 downto 0);
    addr_1 : in  std_logic_vector(7 downto 0);
    valid_2 : in  std_logic_vector(0 downto 0);
    addr_2 : in  std_logic_vector(7 downto 0);
    valid_w : in  std_logic_vector(0 downto 0);
    addr_w : in  std_logic_vector(7 downto 0);
    data_to_be_written : in  std_logic_vector(31 downto 0);
    read_data_1 : out  std_logic_vector(31 downto 0);
    read_data_2 : out  std_logic_vector(31 downto 0);
    memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
    memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_lr_addr : out  std_logic_vector(5 downto 0);
    memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
    memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
    memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_lc_data : in   std_logic_vector(31 downto 0);
    memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
    memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sr_addr : out  std_logic_vector(5 downto 0);
    memory_space_0_sr_data : out  std_logic_vector(31 downto 0);
    memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
    memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity registerFileModule;
architecture registerFileModule_arch of registerFileModule is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 59)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 64)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal valid_1_buffer :  std_logic_vector(0 downto 0);
  signal valid_1_update_enable: Boolean;
  signal addr_1_buffer :  std_logic_vector(7 downto 0);
  signal addr_1_update_enable: Boolean;
  signal valid_2_buffer :  std_logic_vector(0 downto 0);
  signal valid_2_update_enable: Boolean;
  signal addr_2_buffer :  std_logic_vector(7 downto 0);
  signal addr_2_update_enable: Boolean;
  signal valid_w_buffer :  std_logic_vector(0 downto 0);
  signal valid_w_update_enable: Boolean;
  signal addr_w_buffer :  std_logic_vector(7 downto 0);
  signal addr_w_update_enable: Boolean;
  signal data_to_be_written_buffer :  std_logic_vector(31 downto 0);
  signal data_to_be_written_update_enable: Boolean;
  -- output port buffer signals
  signal read_data_1_buffer :  std_logic_vector(31 downto 0);
  signal read_data_1_update_enable: Boolean;
  signal read_data_2_buffer :  std_logic_vector(31 downto 0);
  signal read_data_2_update_enable: Boolean;
  signal registerFileModule_CP_71_start: Boolean;
  signal registerFileModule_CP_71_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal array_obj_ref_220_load_0_req_0 : boolean;
  signal array_obj_ref_220_load_0_ack_0 : boolean;
  signal array_obj_ref_220_load_0_req_1 : boolean;
  signal array_obj_ref_220_load_0_ack_1 : boolean;
  signal array_obj_ref_225_load_0_req_0 : boolean;
  signal array_obj_ref_225_load_0_ack_0 : boolean;
  signal array_obj_ref_225_load_0_req_1 : boolean;
  signal array_obj_ref_225_load_0_ack_1 : boolean;
  signal W_valid_1_248_delayed_4_0_227_inst_req_0 : boolean;
  signal W_valid_1_248_delayed_4_0_227_inst_ack_0 : boolean;
  signal W_valid_1_248_delayed_4_0_227_inst_req_1 : boolean;
  signal W_valid_1_248_delayed_4_0_227_inst_ack_1 : boolean;
  signal MUX_234_inst_req_0 : boolean;
  signal MUX_234_inst_ack_0 : boolean;
  signal MUX_234_inst_req_1 : boolean;
  signal MUX_234_inst_ack_1 : boolean;
  signal W_valid_2_254_delayed_4_0_236_inst_req_0 : boolean;
  signal W_valid_2_254_delayed_4_0_236_inst_ack_0 : boolean;
  signal W_valid_2_254_delayed_4_0_236_inst_req_1 : boolean;
  signal W_valid_2_254_delayed_4_0_236_inst_ack_1 : boolean;
  signal MUX_243_inst_req_0 : boolean;
  signal MUX_243_inst_ack_0 : boolean;
  signal MUX_243_inst_req_1 : boolean;
  signal MUX_243_inst_ack_1 : boolean;
  signal array_obj_ref_247_store_0_req_0 : boolean;
  signal array_obj_ref_247_store_0_ack_0 : boolean;
  signal array_obj_ref_247_store_0_req_1 : boolean;
  signal array_obj_ref_247_store_0_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "registerFileModule_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 59) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(0 downto 0) <= valid_1;
  valid_1_buffer <= in_buffer_data_out(0 downto 0);
  in_buffer_data_in(8 downto 1) <= addr_1;
  addr_1_buffer <= in_buffer_data_out(8 downto 1);
  in_buffer_data_in(9 downto 9) <= valid_2;
  valid_2_buffer <= in_buffer_data_out(9 downto 9);
  in_buffer_data_in(17 downto 10) <= addr_2;
  addr_2_buffer <= in_buffer_data_out(17 downto 10);
  in_buffer_data_in(18 downto 18) <= valid_w;
  valid_w_buffer <= in_buffer_data_out(18 downto 18);
  in_buffer_data_in(26 downto 19) <= addr_w;
  addr_w_buffer <= in_buffer_data_out(26 downto 19);
  in_buffer_data_in(58 downto 27) <= data_to_be_written;
  data_to_be_written_buffer <= in_buffer_data_out(58 downto 27);
  in_buffer_data_in(tag_length + 58 downto 59) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 58 downto 59);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 8) := (0 => 7,1 => 7,2 => 7,3 => 7,4 => 7,5 => 7,6 => 7,7 => 1,8 => 7);
    constant place_markings: IntegerArray(0 to 8)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 1,8 => 7);
    constant place_delays: IntegerArray(0 to 8) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 9); -- 
  begin -- 
    preds <= valid_1_update_enable & addr_1_update_enable & valid_2_update_enable & addr_2_update_enable & valid_w_update_enable & addr_w_update_enable & data_to_be_written_update_enable & in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 9, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  registerFileModule_CP_71_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "registerFileModule_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 64) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= read_data_1_buffer;
  read_data_1 <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(63 downto 32) <= read_data_2_buffer;
  read_data_2 <= out_buffer_data_out(63 downto 32);
  out_buffer_data_in(tag_length + 63 downto 64) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 63 downto 64);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 7);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= registerFileModule_CP_71_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  read_data_1_update_enable_join: block -- 
    constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
    constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
    constant place_delays: IntegerArray(0 to 0) := (0 => 0);
    constant joinName: string(1 to 30) := "read_data_1_update_enable_join"; 
    signal preds: BooleanArray(1 to 1); -- 
  begin -- 
    preds(1) <= out_buffer_write_ack_symbol;
    gj_read_data_1_update_enable_join : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => read_data_1_update_enable, clk => clk, reset => reset); --
  end block;
  read_data_2_update_enable_join: block -- 
    constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
    constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
    constant place_delays: IntegerArray(0 to 0) := (0 => 0);
    constant joinName: string(1 to 30) := "read_data_2_update_enable_join"; 
    signal preds: BooleanArray(1 to 1); -- 
  begin -- 
    preds(1) <= out_buffer_write_ack_symbol;
    gj_read_data_2_update_enable_join : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => read_data_2_update_enable, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 7,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= registerFileModule_CP_71_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= registerFileModule_CP_71_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  registerFileModule_CP_71: Block -- control-path 
    signal registerFileModule_CP_71_elements: BooleanArray(51 downto 0);
    -- 
  begin -- 
    registerFileModule_CP_71_elements(0) <= registerFileModule_CP_71_start;
    registerFileModule_CP_71_symbol <= registerFileModule_CP_71_elements(51);
    -- CP-element group 0:  transition  bypass  pipeline-parent 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (1) 
      -- CP-element group 0: 	 $entry
      -- 
    -- CP-element group 1:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	11 
    -- CP-element group 1: 	15 
    -- CP-element group 1: 	19 
    -- CP-element group 1: 	27 
    -- CP-element group 1: 	35 
    -- CP-element group 1:  members (79) 
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_word_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_root_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_offset_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_resized_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_scaled_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_computed_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_resize_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_resize_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_resize_0/index_resize_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_resize_0/index_resize_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_scale_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_scale_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_scale_0/scale_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_index_scale_0/scale_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_final_index_sum_regn/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_final_index_sum_regn/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_final_index_sum_regn/req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_final_index_sum_regn/ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_base_plus_offset/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_base_plus_offset/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_base_plus_offset/sum_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_base_plus_offset/sum_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_word_addrgen/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_word_addrgen/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_word_addrgen/root_register_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_word_addrgen/root_register_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_word_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_root_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_offset_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_resized_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_scaled_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_computed_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_resize_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_resize_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_resize_0/index_resize_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_resize_0/index_resize_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_scale_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_scale_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_scale_0/scale_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_index_scale_0/scale_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_final_index_sum_regn/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_final_index_sum_regn/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_final_index_sum_regn/req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_final_index_sum_regn/ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_base_plus_offset/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_base_plus_offset/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_base_plus_offset/sum_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_base_plus_offset/sum_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_word_addrgen/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_word_addrgen/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_word_addrgen/root_register_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_word_addrgen/root_register_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_word_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_root_address_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_offset_calculated
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_resized_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_scaled_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_computed_0
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_resize_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_resize_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_resize_0/index_resize_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_resize_0/index_resize_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_scale_0/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_scale_0/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_scale_0/scale_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_index_scale_0/scale_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_final_index_sum_regn/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_final_index_sum_regn/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_final_index_sum_regn/req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_final_index_sum_regn/ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_base_plus_offset/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_base_plus_offset/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_base_plus_offset/sum_rename_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_base_plus_offset/sum_rename_ack
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_word_addrgen/$entry
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_word_addrgen/$exit
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_word_addrgen/root_register_req
      -- CP-element group 1: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_word_addrgen/root_register_ack
      -- 
    registerFileModule_CP_71_elements(1) <= registerFileModule_CP_71_elements(0);
    -- CP-element group 2:  join  transition  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: marked-predecessors 
    -- CP-element group 2: 	13 
    -- CP-element group 2: 	21 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	42 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 assign_stmt_221_to_assign_stmt_249/valid_1_update_enable
      -- CP-element group 2: 	 assign_stmt_221_to_assign_stmt_249/valid_1_update_enable_out
      -- 
    registerFileModule_cp_element_group_2: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_2"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(13) & registerFileModule_CP_71_elements(21);
      gj_registerFileModule_cp_element_group_2 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(2), clk => clk, reset => reset); --
    end block;
    -- CP-element group 3:  join  transition  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: marked-predecessors 
    -- CP-element group 3: 	13 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	43 
    -- CP-element group 3:  members (2) 
      -- CP-element group 3: 	 assign_stmt_221_to_assign_stmt_249/addr_1_update_enable
      -- CP-element group 3: 	 assign_stmt_221_to_assign_stmt_249/addr_1_update_enable_out
      -- 
    registerFileModule_cp_element_group_3: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_3"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(13);
      gj_registerFileModule_cp_element_group_3 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(3), clk => clk, reset => reset); --
    end block;
    -- CP-element group 4:  join  transition  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: marked-predecessors 
    -- CP-element group 4: 	17 
    -- CP-element group 4: 	29 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	44 
    -- CP-element group 4:  members (2) 
      -- CP-element group 4: 	 assign_stmt_221_to_assign_stmt_249/valid_2_update_enable
      -- CP-element group 4: 	 assign_stmt_221_to_assign_stmt_249/valid_2_update_enable_out
      -- 
    registerFileModule_cp_element_group_4: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_4"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(17) & registerFileModule_CP_71_elements(29);
      gj_registerFileModule_cp_element_group_4 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(4), clk => clk, reset => reset); --
    end block;
    -- CP-element group 5:  join  transition  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: marked-predecessors 
    -- CP-element group 5: 	17 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	45 
    -- CP-element group 5:  members (2) 
      -- CP-element group 5: 	 assign_stmt_221_to_assign_stmt_249/addr_2_update_enable
      -- CP-element group 5: 	 assign_stmt_221_to_assign_stmt_249/addr_2_update_enable_out
      -- 
    registerFileModule_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(17);
      gj_registerFileModule_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(5), clk => clk, reset => reset); --
    end block;
    -- CP-element group 6:  join  transition  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: marked-predecessors 
    -- CP-element group 6: 	37 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	46 
    -- CP-element group 6:  members (2) 
      -- CP-element group 6: 	 assign_stmt_221_to_assign_stmt_249/valid_w_update_enable
      -- CP-element group 6: 	 assign_stmt_221_to_assign_stmt_249/valid_w_update_enable_out
      -- 
    registerFileModule_cp_element_group_6: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_6"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_6 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(6), clk => clk, reset => reset); --
    end block;
    -- CP-element group 7:  join  transition  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: marked-predecessors 
    -- CP-element group 7: 	37 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	47 
    -- CP-element group 7:  members (2) 
      -- CP-element group 7: 	 assign_stmt_221_to_assign_stmt_249/addr_w_update_enable
      -- CP-element group 7: 	 assign_stmt_221_to_assign_stmt_249/addr_w_update_enable_out
      -- 
    registerFileModule_cp_element_group_7: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_7"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_7 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(7), clk => clk, reset => reset); --
    end block;
    -- CP-element group 8:  join  transition  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: marked-predecessors 
    -- CP-element group 8: 	37 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	48 
    -- CP-element group 8:  members (2) 
      -- CP-element group 8: 	 assign_stmt_221_to_assign_stmt_249/data_to_be_written_update_enable
      -- CP-element group 8: 	 assign_stmt_221_to_assign_stmt_249/data_to_be_written_update_enable_out
      -- 
    registerFileModule_cp_element_group_8: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 37) := "registerFileModule_cp_element_group_8"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_8 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(8), clk => clk, reset => reset); --
    end block;
    -- CP-element group 9:  transition  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	49 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	24 
    -- CP-element group 9:  members (2) 
      -- CP-element group 9: 	 assign_stmt_221_to_assign_stmt_249/read_data_1_update_enable
      -- CP-element group 9: 	 assign_stmt_221_to_assign_stmt_249/read_data_1_update_enable_in
      -- 
    registerFileModule_CP_71_elements(9) <= registerFileModule_CP_71_elements(49);
    -- CP-element group 10:  transition  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	50 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	32 
    -- CP-element group 10:  members (2) 
      -- CP-element group 10: 	 assign_stmt_221_to_assign_stmt_249/read_data_2_update_enable
      -- CP-element group 10: 	 assign_stmt_221_to_assign_stmt_249/read_data_2_update_enable_in
      -- 
    registerFileModule_CP_71_elements(10) <= registerFileModule_CP_71_elements(50);
    -- CP-element group 11:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	1 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	13 
    -- CP-element group 11: 	37 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	13 
    -- CP-element group 11:  members (5) 
      -- CP-element group 11: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_sample_start_
      -- CP-element group 11: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/$entry
      -- CP-element group 11: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/$entry
      -- CP-element group 11: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/word_0/$entry
      -- CP-element group 11: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/word_0/rr
      -- 
    rr_140_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_140_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(11), ack => array_obj_ref_220_load_0_req_0); -- 
    registerFileModule_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(1) & registerFileModule_CP_71_elements(13) & registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: marked-predecessors 
    -- CP-element group 12: 	14 
    -- CP-element group 12: 	25 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	14 
    -- CP-element group 12:  members (5) 
      -- CP-element group 12: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_update_start_
      -- CP-element group 12: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/$entry
      -- CP-element group 12: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/$entry
      -- CP-element group 12: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/word_0/$entry
      -- CP-element group 12: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/word_0/cr
      -- 
    cr_151_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_151_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(12), ack => array_obj_ref_220_load_0_req_1); -- 
    registerFileModule_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(14) & registerFileModule_CP_71_elements(25);
      gj_registerFileModule_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	11 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	39 
    -- CP-element group 13: marked-successors 
    -- CP-element group 13: 	2 
    -- CP-element group 13: 	3 
    -- CP-element group 13: 	11 
    -- CP-element group 13:  members (5) 
      -- CP-element group 13: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_sample_completed_
      -- CP-element group 13: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/$exit
      -- CP-element group 13: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/word_0/$exit
      -- CP-element group 13: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Sample/word_access_start/word_0/ra
      -- 
    ra_141_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_220_load_0_ack_0, ack => registerFileModule_CP_71_elements(13)); -- 
    -- CP-element group 14:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	12 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	23 
    -- CP-element group 14: marked-successors 
    -- CP-element group 14: 	12 
    -- CP-element group 14:  members (9) 
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_update_completed_
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/$exit
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/$exit
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/word_0/$exit
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/word_access_complete/word_0/ca
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/array_obj_ref_220_Merge/$entry
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/array_obj_ref_220_Merge/$exit
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/array_obj_ref_220_Merge/merge_req
      -- CP-element group 14: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_Update/array_obj_ref_220_Merge/merge_ack
      -- 
    ca_152_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_220_load_0_ack_1, ack => registerFileModule_CP_71_elements(14)); -- 
    -- CP-element group 15:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	1 
    -- CP-element group 15: marked-predecessors 
    -- CP-element group 15: 	17 
    -- CP-element group 15: 	37 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	17 
    -- CP-element group 15:  members (5) 
      -- CP-element group 15: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_sample_start_
      -- CP-element group 15: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/$entry
      -- CP-element group 15: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/$entry
      -- CP-element group 15: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/word_0/$entry
      -- CP-element group 15: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/word_0/rr
      -- 
    rr_203_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_203_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(15), ack => array_obj_ref_225_load_0_req_0); -- 
    registerFileModule_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(1) & registerFileModule_CP_71_elements(17) & registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: marked-predecessors 
    -- CP-element group 16: 	18 
    -- CP-element group 16: 	33 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	18 
    -- CP-element group 16:  members (5) 
      -- CP-element group 16: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_update_start_
      -- CP-element group 16: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/$entry
      -- CP-element group 16: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/$entry
      -- CP-element group 16: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/word_0/$entry
      -- CP-element group 16: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/word_0/cr
      -- 
    cr_214_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_214_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(16), ack => array_obj_ref_225_load_0_req_1); -- 
    registerFileModule_cp_element_group_16: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_16"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(18) & registerFileModule_CP_71_elements(33);
      gj_registerFileModule_cp_element_group_16 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(16), clk => clk, reset => reset); --
    end block;
    -- CP-element group 17:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	15 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	40 
    -- CP-element group 17: marked-successors 
    -- CP-element group 17: 	4 
    -- CP-element group 17: 	5 
    -- CP-element group 17: 	15 
    -- CP-element group 17:  members (5) 
      -- CP-element group 17: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_sample_completed_
      -- CP-element group 17: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/$exit
      -- CP-element group 17: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/$exit
      -- CP-element group 17: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/word_0/$exit
      -- CP-element group 17: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Sample/word_access_start/word_0/ra
      -- 
    ra_204_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_225_load_0_ack_0, ack => registerFileModule_CP_71_elements(17)); -- 
    -- CP-element group 18:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	16 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	31 
    -- CP-element group 18: marked-successors 
    -- CP-element group 18: 	16 
    -- CP-element group 18:  members (9) 
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_update_completed_
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/$exit
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/$exit
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/word_0/$exit
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/word_access_complete/word_0/ca
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/array_obj_ref_225_Merge/$entry
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/array_obj_ref_225_Merge/$exit
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/array_obj_ref_225_Merge/merge_req
      -- CP-element group 18: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_Update/array_obj_ref_225_Merge/merge_ack
      -- 
    ca_215_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_225_load_0_ack_1, ack => registerFileModule_CP_71_elements(18)); -- 
    -- CP-element group 19:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	1 
    -- CP-element group 19: marked-predecessors 
    -- CP-element group 19: 	21 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	21 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_sample_start_
      -- CP-element group 19: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Sample/$entry
      -- CP-element group 19: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Sample/req
      -- 
    req_228_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_228_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(19), ack => W_valid_1_248_delayed_4_0_227_inst_req_0); -- 
    registerFileModule_cp_element_group_19: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_19"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(1) & registerFileModule_CP_71_elements(21);
      gj_registerFileModule_cp_element_group_19 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(19), clk => clk, reset => reset); --
    end block;
    -- CP-element group 20:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: marked-predecessors 
    -- CP-element group 20: 	22 
    -- CP-element group 20: 	25 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	22 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_update_start_
      -- CP-element group 20: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Update/$entry
      -- CP-element group 20: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Update/req
      -- 
    req_233_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_233_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(20), ack => W_valid_1_248_delayed_4_0_227_inst_req_1); -- 
    registerFileModule_cp_element_group_20: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_20"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(22) & registerFileModule_CP_71_elements(25);
      gj_registerFileModule_cp_element_group_20 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(20), clk => clk, reset => reset); --
    end block;
    -- CP-element group 21:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	19 
    -- CP-element group 21: successors 
    -- CP-element group 21: marked-successors 
    -- CP-element group 21: 	2 
    -- CP-element group 21: 	19 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_sample_completed_
      -- CP-element group 21: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Sample/ack
      -- 
    ack_229_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_valid_1_248_delayed_4_0_227_inst_ack_0, ack => registerFileModule_CP_71_elements(21)); -- 
    -- CP-element group 22:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	20 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	23 
    -- CP-element group 22: marked-successors 
    -- CP-element group 22: 	20 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_update_completed_
      -- CP-element group 22: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Update/$exit
      -- CP-element group 22: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_229_Update/ack
      -- 
    ack_234_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_valid_1_248_delayed_4_0_227_inst_ack_1, ack => registerFileModule_CP_71_elements(22)); -- 
    -- CP-element group 23:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	14 
    -- CP-element group 23: 	22 
    -- CP-element group 23: marked-predecessors 
    -- CP-element group 23: 	25 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	25 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_sample_start_
      -- CP-element group 23: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_start/$entry
      -- CP-element group 23: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_start/req
      -- 
    req_242_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_242_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(23), ack => MUX_234_inst_req_0); -- 
    registerFileModule_cp_element_group_23: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_23"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(14) & registerFileModule_CP_71_elements(22) & registerFileModule_CP_71_elements(25);
      gj_registerFileModule_cp_element_group_23 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(23), clk => clk, reset => reset); --
    end block;
    -- CP-element group 24:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	9 
    -- CP-element group 24: marked-predecessors 
    -- CP-element group 24: 	26 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	26 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_update_start_
      -- CP-element group 24: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_complete/$entry
      -- CP-element group 24: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_complete/req
      -- 
    req_247_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_247_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(24), ack => MUX_234_inst_req_1); -- 
    registerFileModule_cp_element_group_24: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_24"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(9) & registerFileModule_CP_71_elements(26);
      gj_registerFileModule_cp_element_group_24 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(24), clk => clk, reset => reset); --
    end block;
    -- CP-element group 25:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	23 
    -- CP-element group 25: successors 
    -- CP-element group 25: marked-successors 
    -- CP-element group 25: 	12 
    -- CP-element group 25: 	20 
    -- CP-element group 25: 	23 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_sample_completed_
      -- CP-element group 25: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_start/$exit
      -- CP-element group 25: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_start/ack
      -- 
    ack_243_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_234_inst_ack_0, ack => registerFileModule_CP_71_elements(25)); -- 
    -- CP-element group 26:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	24 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	41 
    -- CP-element group 26: marked-successors 
    -- CP-element group 26: 	24 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_update_completed_
      -- CP-element group 26: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_complete/$exit
      -- CP-element group 26: 	 assign_stmt_221_to_assign_stmt_249/MUX_234_complete/ack
      -- 
    ack_248_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_234_inst_ack_1, ack => registerFileModule_CP_71_elements(26)); -- 
    -- CP-element group 27:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	1 
    -- CP-element group 27: marked-predecessors 
    -- CP-element group 27: 	29 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	29 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_sample_start_
      -- CP-element group 27: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Sample/$entry
      -- CP-element group 27: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Sample/req
      -- 
    req_256_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_256_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(27), ack => W_valid_2_254_delayed_4_0_236_inst_req_0); -- 
    registerFileModule_cp_element_group_27: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_27"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(1) & registerFileModule_CP_71_elements(29);
      gj_registerFileModule_cp_element_group_27 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(27), clk => clk, reset => reset); --
    end block;
    -- CP-element group 28:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: marked-predecessors 
    -- CP-element group 28: 	30 
    -- CP-element group 28: 	33 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	30 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_update_start_
      -- CP-element group 28: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Update/$entry
      -- CP-element group 28: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Update/req
      -- 
    req_261_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_261_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(28), ack => W_valid_2_254_delayed_4_0_236_inst_req_1); -- 
    registerFileModule_cp_element_group_28: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_28"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(30) & registerFileModule_CP_71_elements(33);
      gj_registerFileModule_cp_element_group_28 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(28), clk => clk, reset => reset); --
    end block;
    -- CP-element group 29:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	27 
    -- CP-element group 29: successors 
    -- CP-element group 29: marked-successors 
    -- CP-element group 29: 	4 
    -- CP-element group 29: 	27 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_sample_completed_
      -- CP-element group 29: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Sample/$exit
      -- CP-element group 29: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Sample/ack
      -- 
    ack_257_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_valid_2_254_delayed_4_0_236_inst_ack_0, ack => registerFileModule_CP_71_elements(29)); -- 
    -- CP-element group 30:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	28 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	31 
    -- CP-element group 30: marked-successors 
    -- CP-element group 30: 	28 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_update_completed_
      -- CP-element group 30: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Update/$exit
      -- CP-element group 30: 	 assign_stmt_221_to_assign_stmt_249/assign_stmt_238_Update/ack
      -- 
    ack_262_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_valid_2_254_delayed_4_0_236_inst_ack_1, ack => registerFileModule_CP_71_elements(30)); -- 
    -- CP-element group 31:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	18 
    -- CP-element group 31: 	30 
    -- CP-element group 31: marked-predecessors 
    -- CP-element group 31: 	33 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	33 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_sample_start_
      -- CP-element group 31: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_start/$entry
      -- CP-element group 31: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_start/req
      -- 
    req_270_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_270_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(31), ack => MUX_243_inst_req_0); -- 
    registerFileModule_cp_element_group_31: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_31"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(18) & registerFileModule_CP_71_elements(30) & registerFileModule_CP_71_elements(33);
      gj_registerFileModule_cp_element_group_31 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(31), clk => clk, reset => reset); --
    end block;
    -- CP-element group 32:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	10 
    -- CP-element group 32: marked-predecessors 
    -- CP-element group 32: 	34 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	34 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_update_start_
      -- CP-element group 32: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_complete/$entry
      -- CP-element group 32: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_complete/req
      -- 
    req_275_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_275_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(32), ack => MUX_243_inst_req_1); -- 
    registerFileModule_cp_element_group_32: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_32"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(10) & registerFileModule_CP_71_elements(34);
      gj_registerFileModule_cp_element_group_32 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(32), clk => clk, reset => reset); --
    end block;
    -- CP-element group 33:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	31 
    -- CP-element group 33: successors 
    -- CP-element group 33: marked-successors 
    -- CP-element group 33: 	16 
    -- CP-element group 33: 	28 
    -- CP-element group 33: 	31 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_sample_completed_
      -- CP-element group 33: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_start/$exit
      -- CP-element group 33: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_start/ack
      -- 
    ack_271_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_243_inst_ack_0, ack => registerFileModule_CP_71_elements(33)); -- 
    -- CP-element group 34:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	32 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	41 
    -- CP-element group 34: marked-successors 
    -- CP-element group 34: 	32 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_update_completed_
      -- CP-element group 34: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_complete/$exit
      -- CP-element group 34: 	 assign_stmt_221_to_assign_stmt_249/MUX_243_complete/ack
      -- 
    ack_276_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_243_inst_ack_1, ack => registerFileModule_CP_71_elements(34)); -- 
    -- CP-element group 35:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	1 
    -- CP-element group 35: 	39 
    -- CP-element group 35: 	40 
    -- CP-element group 35: marked-predecessors 
    -- CP-element group 35: 	37 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	37 
    -- CP-element group 35:  members (9) 
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_sample_start_
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/$entry
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/array_obj_ref_247_Split/$entry
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/array_obj_ref_247_Split/$exit
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/array_obj_ref_247_Split/split_req
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/array_obj_ref_247_Split/split_ack
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/$entry
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/word_0/$entry
      -- CP-element group 35: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/word_0/rr
      -- 
    rr_326_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_326_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(35), ack => array_obj_ref_247_store_0_req_0); -- 
    registerFileModule_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 7,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 1);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(1) & registerFileModule_CP_71_elements(39) & registerFileModule_CP_71_elements(40) & registerFileModule_CP_71_elements(37);
      gj_registerFileModule_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: marked-predecessors 
    -- CP-element group 36: 	38 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	38 
    -- CP-element group 36:  members (5) 
      -- CP-element group 36: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_update_start_
      -- CP-element group 36: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/$entry
      -- CP-element group 36: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/$entry
      -- CP-element group 36: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/word_0/$entry
      -- CP-element group 36: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/word_0/cr
      -- 
    cr_337_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_337_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => registerFileModule_CP_71_elements(36), ack => array_obj_ref_247_store_0_req_1); -- 
    registerFileModule_cp_element_group_36: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_36"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= registerFileModule_CP_71_elements(38);
      gj_registerFileModule_cp_element_group_36 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(36), clk => clk, reset => reset); --
    end block;
    -- CP-element group 37:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	35 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	41 
    -- CP-element group 37: marked-successors 
    -- CP-element group 37: 	6 
    -- CP-element group 37: 	7 
    -- CP-element group 37: 	8 
    -- CP-element group 37: 	11 
    -- CP-element group 37: 	15 
    -- CP-element group 37: 	35 
    -- CP-element group 37:  members (6) 
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_sample_completed_
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/$exit
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/$exit
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/word_0/$exit
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Sample/word_access_start/word_0/ra
      -- CP-element group 37: 	 assign_stmt_221_to_assign_stmt_249/ring_reenable_memory_space_0
      -- 
    ra_327_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_247_store_0_ack_0, ack => registerFileModule_CP_71_elements(37)); -- 
    -- CP-element group 38:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	36 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	41 
    -- CP-element group 38: marked-successors 
    -- CP-element group 38: 	36 
    -- CP-element group 38:  members (5) 
      -- CP-element group 38: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_update_completed_
      -- CP-element group 38: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/$exit
      -- CP-element group 38: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/$exit
      -- CP-element group 38: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/word_0/$exit
      -- CP-element group 38: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_247_Update/word_access_complete/word_0/ca
      -- 
    ca_338_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_247_store_0_ack_1, ack => registerFileModule_CP_71_elements(38)); -- 
    -- CP-element group 39:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	13 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	35 
    -- CP-element group 39:  members (1) 
      -- CP-element group 39: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_220_array_obj_ref_247_delay
      -- 
    -- Element group registerFileModule_CP_71_elements(39) is a control-delay.
    cp_element_39_delay: control_delay_element  generic map(name => " 39_delay", delay_value => 1)  port map(req => registerFileModule_CP_71_elements(13), ack => registerFileModule_CP_71_elements(39), clk => clk, reset =>reset);
    -- CP-element group 40:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	17 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	35 
    -- CP-element group 40:  members (1) 
      -- CP-element group 40: 	 assign_stmt_221_to_assign_stmt_249/array_obj_ref_225_array_obj_ref_247_delay
      -- 
    -- Element group registerFileModule_CP_71_elements(40) is a control-delay.
    cp_element_40_delay: control_delay_element  generic map(name => " 40_delay", delay_value => 1)  port map(req => registerFileModule_CP_71_elements(17), ack => registerFileModule_CP_71_elements(40), clk => clk, reset =>reset);
    -- CP-element group 41:  join  transition  bypass  pipeline-parent 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	26 
    -- CP-element group 41: 	34 
    -- CP-element group 41: 	37 
    -- CP-element group 41: 	38 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	51 
    -- CP-element group 41:  members (1) 
      -- CP-element group 41: 	 assign_stmt_221_to_assign_stmt_249/$exit
      -- 
    registerFileModule_cp_element_group_41: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 7,1 => 7,2 => 7,3 => 7);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 38) := "registerFileModule_cp_element_group_41"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= registerFileModule_CP_71_elements(26) & registerFileModule_CP_71_elements(34) & registerFileModule_CP_71_elements(37) & registerFileModule_CP_71_elements(38);
      gj_registerFileModule_cp_element_group_41 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => registerFileModule_CP_71_elements(41), clk => clk, reset => reset); --
    end block;
    -- CP-element group 42:  place  bypass  pipeline-parent 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	2 
    -- CP-element group 42: successors 
    -- CP-element group 42:  members (1) 
      -- CP-element group 42: 	 valid_1_update_enable
      -- 
    registerFileModule_CP_71_elements(42) <= registerFileModule_CP_71_elements(2);
    -- CP-element group 43:  place  bypass  pipeline-parent 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	3 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (1) 
      -- CP-element group 43: 	 addr_1_update_enable
      -- 
    registerFileModule_CP_71_elements(43) <= registerFileModule_CP_71_elements(3);
    -- CP-element group 44:  place  bypass  pipeline-parent 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	4 
    -- CP-element group 44: successors 
    -- CP-element group 44:  members (1) 
      -- CP-element group 44: 	 valid_2_update_enable
      -- 
    registerFileModule_CP_71_elements(44) <= registerFileModule_CP_71_elements(4);
    -- CP-element group 45:  place  bypass  pipeline-parent 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	5 
    -- CP-element group 45: successors 
    -- CP-element group 45:  members (1) 
      -- CP-element group 45: 	 addr_2_update_enable
      -- 
    registerFileModule_CP_71_elements(45) <= registerFileModule_CP_71_elements(5);
    -- CP-element group 46:  place  bypass  pipeline-parent 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	6 
    -- CP-element group 46: successors 
    -- CP-element group 46:  members (1) 
      -- CP-element group 46: 	 valid_w_update_enable
      -- 
    registerFileModule_CP_71_elements(46) <= registerFileModule_CP_71_elements(6);
    -- CP-element group 47:  place  bypass  pipeline-parent 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	7 
    -- CP-element group 47: successors 
    -- CP-element group 47:  members (1) 
      -- CP-element group 47: 	 addr_w_update_enable
      -- 
    registerFileModule_CP_71_elements(47) <= registerFileModule_CP_71_elements(7);
    -- CP-element group 48:  place  bypass  pipeline-parent 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	8 
    -- CP-element group 48: successors 
    -- CP-element group 48:  members (1) 
      -- CP-element group 48: 	 data_to_be_written_update_enable
      -- 
    registerFileModule_CP_71_elements(48) <= registerFileModule_CP_71_elements(8);
    -- CP-element group 49:  place  bypass  pipeline-parent 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	9 
    -- CP-element group 49:  members (1) 
      -- CP-element group 49: 	 read_data_1_update_enable
      -- 
    -- CP-element group 50:  place  bypass  pipeline-parent 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	10 
    -- CP-element group 50:  members (1) 
      -- CP-element group 50: 	 read_data_2_update_enable
      -- 
    -- CP-element group 51:  transition  bypass  pipeline-parent 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	41 
    -- CP-element group 51: successors 
    -- CP-element group 51:  members (1) 
      -- CP-element group 51: 	 $exit
      -- 
    registerFileModule_CP_71_elements(51) <= registerFileModule_CP_71_elements(41);
    --  hookup: inputs to control-path 
    registerFileModule_CP_71_elements(49) <= read_data_1_update_enable;
    registerFileModule_CP_71_elements(50) <= read_data_2_update_enable;
    -- hookup: output from control-path 
    valid_1_update_enable <= registerFileModule_CP_71_elements(42);
    addr_1_update_enable <= registerFileModule_CP_71_elements(43);
    valid_2_update_enable <= registerFileModule_CP_71_elements(44);
    addr_2_update_enable <= registerFileModule_CP_71_elements(45);
    valid_w_update_enable <= registerFileModule_CP_71_elements(46);
    addr_w_update_enable <= registerFileModule_CP_71_elements(47);
    data_to_be_written_update_enable <= registerFileModule_CP_71_elements(48);
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_addr_1_219_resized : std_logic_vector(5 downto 0);
    signal R_addr_1_219_scaled : std_logic_vector(5 downto 0);
    signal R_addr_2_224_resized : std_logic_vector(5 downto 0);
    signal R_addr_2_224_scaled : std_logic_vector(5 downto 0);
    signal R_addr_w_246_resized : std_logic_vector(5 downto 0);
    signal R_addr_w_246_scaled : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_data_0 : std_logic_vector(31 downto 0);
    signal array_obj_ref_220_final_offset : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_offset_scale_factor_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_resized_base_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_root_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_word_address_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_220_word_offset_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_data_0 : std_logic_vector(31 downto 0);
    signal array_obj_ref_225_final_offset : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_offset_scale_factor_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_resized_base_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_root_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_word_address_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_225_word_offset_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_data_0 : std_logic_vector(31 downto 0);
    signal array_obj_ref_247_final_offset : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_offset_scale_factor_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_resized_base_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_root_address : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_word_address_0 : std_logic_vector(5 downto 0);
    signal array_obj_ref_247_word_offset_0 : std_logic_vector(5 downto 0);
    signal konst_233_wire_constant : std_logic_vector(31 downto 0);
    signal konst_242_wire_constant : std_logic_vector(31 downto 0);
    signal t_read_data_1_221 : std_logic_vector(31 downto 0);
    signal t_read_data_2_226 : std_logic_vector(31 downto 0);
    signal valid_1_248_delayed_4_0_229 : std_logic_vector(0 downto 0);
    signal valid_2_254_delayed_4_0_238 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    array_obj_ref_220_offset_scale_factor_0 <= "000001";
    array_obj_ref_220_resized_base_address <= "000000";
    array_obj_ref_220_word_offset_0 <= "000000";
    array_obj_ref_225_offset_scale_factor_0 <= "000001";
    array_obj_ref_225_resized_base_address <= "000000";
    array_obj_ref_225_word_offset_0 <= "000000";
    array_obj_ref_247_offset_scale_factor_0 <= "000001";
    array_obj_ref_247_resized_base_address <= "000000";
    array_obj_ref_247_word_offset_0 <= "000000";
    konst_233_wire_constant <= "00000000000000000000000000000000";
    konst_242_wire_constant <= "00000000000000000000000000000000";
    MUX_234_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_234_inst_req_0;
      MUX_234_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_234_inst_req_1;
      MUX_234_inst_ack_1<= update_ack(0);
      MUX_234_inst: SelectSplitProtocol generic map(name => "MUX_234_inst", data_width => 32, buffering => 1, flow_through => false, full_rate => false) -- 
        port map( x => t_read_data_1_221, y => konst_233_wire_constant, sel => valid_1_248_delayed_4_0_229, z => read_data_1_buffer, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    MUX_243_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_243_inst_req_0;
      MUX_243_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_243_inst_req_1;
      MUX_243_inst_ack_1<= update_ack(0);
      MUX_243_inst: SelectSplitProtocol generic map(name => "MUX_243_inst", data_width => 32, buffering => 1, flow_through => false, full_rate => false) -- 
        port map( x => t_read_data_2_226, y => konst_242_wire_constant, sel => valid_2_254_delayed_4_0_238, z => read_data_2_buffer, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    W_valid_1_248_delayed_4_0_227_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_valid_1_248_delayed_4_0_227_inst_req_0;
      W_valid_1_248_delayed_4_0_227_inst_ack_0<= wack(0);
      rreq(0) <= W_valid_1_248_delayed_4_0_227_inst_req_1;
      W_valid_1_248_delayed_4_0_227_inst_ack_1<= rack(0);
      W_valid_1_248_delayed_4_0_227_inst : InterlockBuffer generic map ( -- 
        name => "W_valid_1_248_delayed_4_0_227_inst",
        buffer_size => 4,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => valid_1_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => valid_1_248_delayed_4_0_229,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_valid_2_254_delayed_4_0_236_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_valid_2_254_delayed_4_0_236_inst_req_0;
      W_valid_2_254_delayed_4_0_236_inst_ack_0<= wack(0);
      rreq(0) <= W_valid_2_254_delayed_4_0_236_inst_req_1;
      W_valid_2_254_delayed_4_0_236_inst_ack_1<= rack(0);
      W_valid_2_254_delayed_4_0_236_inst : InterlockBuffer generic map ( -- 
        name => "W_valid_2_254_delayed_4_0_236_inst",
        buffer_size => 4,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => valid_2_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => valid_2_254_delayed_4_0_238,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence array_obj_ref_220_addr_0
    process(array_obj_ref_220_root_address) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_220_root_address;
      ov(5 downto 0) := iv;
      array_obj_ref_220_word_address_0 <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_220_gather_scatter
    process(array_obj_ref_220_data_0) --
      variable iv : std_logic_vector(31 downto 0);
      variable ov : std_logic_vector(31 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_220_data_0;
      ov(31 downto 0) := iv;
      t_read_data_1_221 <= ov(31 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_220_index_0_rename
    process(R_addr_1_219_resized) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_1_219_resized;
      ov(5 downto 0) := iv;
      R_addr_1_219_scaled <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_220_index_0_resize
    process(addr_1_buffer) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := addr_1_buffer;
      ov := iv(5 downto 0);
      R_addr_1_219_resized <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_220_index_offset
    process(R_addr_1_219_scaled) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_1_219_scaled;
      ov(5 downto 0) := iv;
      array_obj_ref_220_final_offset <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_220_root_address_inst
    process(array_obj_ref_220_final_offset) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_220_final_offset;
      ov(5 downto 0) := iv;
      array_obj_ref_220_root_address <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_addr_0
    process(array_obj_ref_225_root_address) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_225_root_address;
      ov(5 downto 0) := iv;
      array_obj_ref_225_word_address_0 <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_gather_scatter
    process(array_obj_ref_225_data_0) --
      variable iv : std_logic_vector(31 downto 0);
      variable ov : std_logic_vector(31 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_225_data_0;
      ov(31 downto 0) := iv;
      t_read_data_2_226 <= ov(31 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_index_0_rename
    process(R_addr_2_224_resized) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_2_224_resized;
      ov(5 downto 0) := iv;
      R_addr_2_224_scaled <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_index_0_resize
    process(addr_2_buffer) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := addr_2_buffer;
      ov := iv(5 downto 0);
      R_addr_2_224_resized <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_index_offset
    process(R_addr_2_224_scaled) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_2_224_scaled;
      ov(5 downto 0) := iv;
      array_obj_ref_225_final_offset <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_225_root_address_inst
    process(array_obj_ref_225_final_offset) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_225_final_offset;
      ov(5 downto 0) := iv;
      array_obj_ref_225_root_address <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_addr_0
    process(array_obj_ref_247_root_address) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_247_root_address;
      ov(5 downto 0) := iv;
      array_obj_ref_247_word_address_0 <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_gather_scatter
    process(data_to_be_written_buffer) --
      variable iv : std_logic_vector(31 downto 0);
      variable ov : std_logic_vector(31 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := data_to_be_written_buffer;
      ov(31 downto 0) := iv;
      array_obj_ref_247_data_0 <= ov(31 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_index_0_rename
    process(R_addr_w_246_resized) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_w_246_resized;
      ov(5 downto 0) := iv;
      R_addr_w_246_scaled <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_index_0_resize
    process(addr_w_buffer) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := addr_w_buffer;
      ov := iv(5 downto 0);
      R_addr_w_246_resized <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_index_offset
    process(R_addr_w_246_scaled) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_addr_w_246_scaled;
      ov(5 downto 0) := iv;
      array_obj_ref_247_final_offset <= ov(5 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_247_root_address_inst
    process(array_obj_ref_247_final_offset) --
      variable iv : std_logic_vector(5 downto 0);
      variable ov : std_logic_vector(5 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_247_final_offset;
      ov(5 downto 0) := iv;
      array_obj_ref_247_root_address <= ov(5 downto 0);
      --
    end process;
    -- shared load operator group (0) : array_obj_ref_225_load_0 array_obj_ref_220_load_0 
    LoadGroup0: Block -- 
      signal data_in: std_logic_vector(11 downto 0);
      signal data_out: std_logic_vector(63 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqL_unregulated, ackL_unregulated: BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 0, 0 => 0);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => true, 1 => true);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 4, 1 => 4);
      -- 
    begin -- 
      reqL_unguarded(1) <= array_obj_ref_225_load_0_req_0;
      reqL_unguarded(0) <= array_obj_ref_220_load_0_req_0;
      array_obj_ref_225_load_0_ack_0 <= ackL_unguarded(1);
      array_obj_ref_220_load_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= array_obj_ref_225_load_0_req_1;
      reqR_unguarded(0) <= array_obj_ref_220_load_0_req_1;
      array_obj_ref_225_load_0_ack_1 <= ackR_unguarded(1);
      array_obj_ref_220_load_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= valid_1_buffer(0);
      guard_vector(1)  <= valid_2_buffer(0);
      LoadGroup0_accessRegulator_0: access_regulator_base generic map (name => "LoadGroup0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      LoadGroup0_accessRegulator_1: access_regulator_base generic map (name => "LoadGroup0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      LoadGroup0_gI: SplitGuardInterface generic map(name => "LoadGroup0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= array_obj_ref_225_word_address_0 & array_obj_ref_220_word_address_0;
      array_obj_ref_225_data_0 <= data_out(63 downto 32);
      array_obj_ref_220_data_0 <= data_out(31 downto 0);
      LoadReq: LoadReqSharedWithInputBuffers -- 
        generic map ( name => "LoadGroup0", addr_width => 6,
        num_reqs => 2,
        tag_length => 2,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          mreq => memory_space_0_lr_req(0),
          mack => memory_space_0_lr_ack(0),
          maddr => memory_space_0_lr_addr(5 downto 0),
          mtag => memory_space_0_lr_tag(18 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      LoadComplete: LoadCompleteShared -- 
        generic map ( name => "LoadGroup0 load-complete ",
        data_width => 32,
        num_reqs => 2,
        tag_length => 2,
        detailed_buffering_per_output => outBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          mreq => memory_space_0_lc_req(0),
          mack => memory_space_0_lc_ack(0),
          mdata => memory_space_0_lc_data(31 downto 0),
          mtag => memory_space_0_lc_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- load group 0
    -- shared store operator group (0) : array_obj_ref_247_store_0 
    StoreGroup0: Block -- 
      signal addr_in: std_logic_vector(5 downto 0);
      signal data_in: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 7);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 4);
      -- 
    begin -- 
      reqL_unguarded(0) <= array_obj_ref_247_store_0_req_0;
      array_obj_ref_247_store_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= array_obj_ref_247_store_0_req_1;
      array_obj_ref_247_store_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= valid_w_buffer(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      StoreGroup0_gI: SplitGuardInterface generic map(name => "StoreGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      addr_in <= array_obj_ref_247_word_address_0;
      data_in <= array_obj_ref_247_data_0;
      StoreReq: StoreReqSharedWithInputBuffers -- 
        generic map ( name => "StoreGroup0 Req ", addr_width => 6,
        data_width => 32,
        num_reqs => 1,
        tag_length => 2,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map (--
          reqL => reqL , 
          ackL => ackL , 
          addr => addr_in, 
          data => data_in, 
          mreq => memory_space_0_sr_req(0),
          mack => memory_space_0_sr_ack(0),
          maddr => memory_space_0_sr_addr(5 downto 0),
          mdata => memory_space_0_sr_data(31 downto 0),
          mtag => memory_space_0_sr_tag(18 downto 0),
          clk => clk, reset => reset -- 
        );--
      StoreComplete: StoreCompleteShared -- 
        generic map ( -- 
          name => "StoreGroup0 Complete ",
          num_reqs => 1,
          detailed_buffering_per_output => outBUFs,
          tag_length => 2 -- 
        )
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          mreq => memory_space_0_sc_req(0),
          mack => memory_space_0_sc_ack(0),
          mtag => memory_space_0_sc_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- store group 0
    -- 
  end Block; -- data_path
  -- 
end registerFileModule_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity send_to_uart is -- 
  generic (tag_length : integer); 
  port ( -- 
    data_to_send : in  std_logic_vector(31 downto 0);
    out_pipe_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_pipe_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_pipe_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity send_to_uart;
architecture send_to_uart_arch of send_to_uart is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal data_to_send_buffer :  std_logic_vector(31 downto 0);
  signal data_to_send_update_enable: Boolean;
  -- output port buffer signals
  signal send_to_uart_CP_427_start: Boolean;
  signal send_to_uart_CP_427_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal slice_283_inst_req_1 : boolean;
  signal slice_279_inst_req_0 : boolean;
  signal slice_291_inst_req_0 : boolean;
  signal slice_283_inst_ack_1 : boolean;
  signal WPIPE_out_pipe_302_inst_ack_1 : boolean;
  signal WPIPE_out_pipe_302_inst_req_1 : boolean;
  signal WPIPE_out_pipe_302_inst_ack_0 : boolean;
  signal WPIPE_out_pipe_302_inst_req_0 : boolean;
  signal slice_287_inst_ack_0 : boolean;
  signal slice_279_inst_req_1 : boolean;
  signal slice_287_inst_req_0 : boolean;
  signal slice_279_inst_ack_0 : boolean;
  signal WPIPE_out_pipe_299_inst_ack_1 : boolean;
  signal WPIPE_out_pipe_299_inst_req_1 : boolean;
  signal WPIPE_out_pipe_299_inst_ack_0 : boolean;
  signal WPIPE_out_pipe_299_inst_req_0 : boolean;
  signal WPIPE_out_pipe_296_inst_ack_1 : boolean;
  signal WPIPE_out_pipe_296_inst_req_1 : boolean;
  signal WPIPE_out_pipe_296_inst_ack_0 : boolean;
  signal WPIPE_out_pipe_296_inst_req_0 : boolean;
  signal WPIPE_out_pipe_293_inst_ack_1 : boolean;
  signal WPIPE_out_pipe_293_inst_req_1 : boolean;
  signal WPIPE_out_pipe_293_inst_ack_0 : boolean;
  signal WPIPE_out_pipe_293_inst_req_0 : boolean;
  signal slice_291_inst_ack_1 : boolean;
  signal slice_291_inst_req_1 : boolean;
  signal slice_291_inst_ack_0 : boolean;
  signal slice_283_inst_ack_0 : boolean;
  signal slice_283_inst_req_0 : boolean;
  signal slice_287_inst_ack_1 : boolean;
  signal slice_287_inst_req_1 : boolean;
  signal slice_279_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "send_to_uart_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 32) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= data_to_send;
  data_to_send_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(tag_length + 31 downto 32) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 31 downto 32);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  send_to_uart_CP_427_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "send_to_uart_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_to_uart_CP_427_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= send_to_uart_CP_427_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_to_uart_CP_427_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  send_to_uart_CP_427: Block -- control-path 
    signal send_to_uart_CP_427_elements: BooleanArray(19 downto 0);
    -- 
  begin -- 
    send_to_uart_CP_427_elements(0) <= send_to_uart_CP_427_start;
    send_to_uart_CP_427_symbol <= send_to_uart_CP_427_elements(19);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0:  members (26) 
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Update/cr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Sample/rr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Sample/rr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Update/cr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Sample/rr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Update/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_update_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Update/cr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Update/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_update_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Update/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Sample/rr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_update_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_291_sample_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_update_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Update/cr
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_283_sample_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Update/$entry
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_287_sample_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/slice_279_sample_start_
      -- CP-element group 0: 	 assign_stmt_280_to_assign_stmt_304/$entry
      -- CP-element group 0: 	 $entry
      -- 
    rr_440_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_440_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_279_inst_req_0); -- 
    cr_445_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_445_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_279_inst_req_1); -- 
    rr_454_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_454_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_283_inst_req_0); -- 
    cr_459_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_459_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_283_inst_req_1); -- 
    rr_468_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_468_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_287_inst_req_0); -- 
    cr_473_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_473_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_287_inst_req_1); -- 
    rr_482_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_482_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_291_inst_req_0); -- 
    cr_487_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_487_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(0), ack => slice_291_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Sample/ra
      -- CP-element group 1: 	 assign_stmt_280_to_assign_stmt_304/slice_279_sample_completed_
      -- 
    ra_441_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_279_inst_ack_0, ack => send_to_uart_CP_427_elements(1)); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	9 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/slice_279_update_completed_
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Update/$exit
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Sample/req
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_sample_start_
      -- CP-element group 2: 	 assign_stmt_280_to_assign_stmt_304/slice_279_Update/ca
      -- 
    ca_446_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_279_inst_ack_1, ack => send_to_uart_CP_427_elements(2)); -- 
    req_496_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_496_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(2), ack => WPIPE_out_pipe_293_inst_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Sample/ra
      -- CP-element group 3: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_280_to_assign_stmt_304/slice_283_sample_completed_
      -- 
    ra_455_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_283_inst_ack_0, ack => send_to_uart_CP_427_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	11 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Update/ca
      -- CP-element group 4: 	 assign_stmt_280_to_assign_stmt_304/slice_283_Update/$exit
      -- CP-element group 4: 	 assign_stmt_280_to_assign_stmt_304/slice_283_update_completed_
      -- 
    ca_460_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_283_inst_ack_1, ack => send_to_uart_CP_427_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Sample/ra
      -- CP-element group 5: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_280_to_assign_stmt_304/slice_287_sample_completed_
      -- 
    ra_469_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_287_inst_ack_0, ack => send_to_uart_CP_427_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	14 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_280_to_assign_stmt_304/slice_287_update_completed_
      -- CP-element group 6: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Update/ca
      -- CP-element group 6: 	 assign_stmt_280_to_assign_stmt_304/slice_287_Update/$exit
      -- 
    ca_474_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_287_inst_ack_1, ack => send_to_uart_CP_427_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Sample/ra
      -- CP-element group 7: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_280_to_assign_stmt_304/slice_291_sample_completed_
      -- 
    ra_483_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_291_inst_ack_0, ack => send_to_uart_CP_427_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	17 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Update/ca
      -- CP-element group 8: 	 assign_stmt_280_to_assign_stmt_304/slice_291_Update/$exit
      -- CP-element group 8: 	 assign_stmt_280_to_assign_stmt_304/slice_291_update_completed_
      -- 
    ca_488_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_291_inst_ack_1, ack => send_to_uart_CP_427_elements(8)); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Update/req
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Update/$entry
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Sample/ack
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_update_start_
      -- CP-element group 9: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_sample_completed_
      -- 
    ack_497_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_293_inst_ack_0, ack => send_to_uart_CP_427_elements(9)); -- 
    req_501_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_501_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(9), ack => WPIPE_out_pipe_293_inst_req_1); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Update/ack
      -- CP-element group 10: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_Update/$exit
      -- CP-element group 10: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_293_update_completed_
      -- 
    ack_502_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_293_inst_ack_1, ack => send_to_uart_CP_427_elements(10)); -- 
    -- CP-element group 11:  join  transition  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	4 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Sample/req
      -- CP-element group 11: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Sample/$entry
      -- CP-element group 11: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_sample_start_
      -- 
    req_510_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_510_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(11), ack => WPIPE_out_pipe_296_inst_req_0); -- 
    send_to_uart_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 32) := "send_to_uart_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_to_uart_CP_427_elements(4) & send_to_uart_CP_427_elements(10);
      gj_send_to_uart_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_to_uart_CP_427_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Update/req
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Update/$entry
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Sample/ack
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Sample/$exit
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_update_start_
      -- CP-element group 12: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_sample_completed_
      -- 
    ack_511_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_296_inst_ack_0, ack => send_to_uart_CP_427_elements(12)); -- 
    req_515_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_515_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(12), ack => WPIPE_out_pipe_296_inst_req_1); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Update/ack
      -- CP-element group 13: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_Update/$exit
      -- CP-element group 13: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_296_update_completed_
      -- 
    ack_516_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_296_inst_ack_1, ack => send_to_uart_CP_427_elements(13)); -- 
    -- CP-element group 14:  join  transition  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	6 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Sample/req
      -- CP-element group 14: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Sample/$entry
      -- CP-element group 14: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_sample_start_
      -- 
    req_524_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_524_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(14), ack => WPIPE_out_pipe_299_inst_req_0); -- 
    send_to_uart_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 32) := "send_to_uart_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_to_uart_CP_427_elements(6) & send_to_uart_CP_427_elements(13);
      gj_send_to_uart_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_to_uart_CP_427_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  transition  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Update/req
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Update/$entry
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Sample/ack
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_update_start_
      -- CP-element group 15: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_sample_completed_
      -- 
    ack_525_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_299_inst_ack_0, ack => send_to_uart_CP_427_elements(15)); -- 
    req_529_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_529_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(15), ack => WPIPE_out_pipe_299_inst_req_1); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Update/ack
      -- CP-element group 16: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_Update/$exit
      -- CP-element group 16: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_299_update_completed_
      -- 
    ack_530_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_299_inst_ack_1, ack => send_to_uart_CP_427_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	8 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Sample/req
      -- CP-element group 17: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Sample/$entry
      -- CP-element group 17: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_sample_start_
      -- 
    req_538_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_538_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(17), ack => WPIPE_out_pipe_302_inst_req_0); -- 
    send_to_uart_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 32) := "send_to_uart_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_to_uart_CP_427_elements(8) & send_to_uart_CP_427_elements(16);
      gj_send_to_uart_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_to_uart_CP_427_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18:  members (6) 
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Update/req
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Update/$entry
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Sample/ack
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Sample/$exit
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_update_start_
      -- CP-element group 18: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_sample_completed_
      -- 
    ack_539_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_302_inst_ack_0, ack => send_to_uart_CP_427_elements(18)); -- 
    req_543_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_543_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_to_uart_CP_427_elements(18), ack => WPIPE_out_pipe_302_inst_req_1); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (5) 
      -- CP-element group 19: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Update/ack
      -- CP-element group 19: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_Update/$exit
      -- CP-element group 19: 	 assign_stmt_280_to_assign_stmt_304/WPIPE_out_pipe_302_update_completed_
      -- CP-element group 19: 	 assign_stmt_280_to_assign_stmt_304/$exit
      -- CP-element group 19: 	 $exit
      -- 
    ack_544_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_pipe_302_inst_ack_1, ack => send_to_uart_CP_427_elements(19)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal out_data_0_280 : std_logic_vector(7 downto 0);
    signal out_data_1_284 : std_logic_vector(7 downto 0);
    signal out_data_2_288 : std_logic_vector(7 downto 0);
    signal out_data_3_292 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    slice_279_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_279_inst_req_0;
      slice_279_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_279_inst_req_1;
      slice_279_inst_ack_1<= update_ack(0);
      slice_279_inst: SliceSplitProtocol generic map(name => "slice_279_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => data_to_send_buffer, dout => out_data_0_280, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_283_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_283_inst_req_0;
      slice_283_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_283_inst_req_1;
      slice_283_inst_ack_1<= update_ack(0);
      slice_283_inst: SliceSplitProtocol generic map(name => "slice_283_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => data_to_send_buffer, dout => out_data_1_284, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_287_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_287_inst_req_0;
      slice_287_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_287_inst_req_1;
      slice_287_inst_ack_1<= update_ack(0);
      slice_287_inst: SliceSplitProtocol generic map(name => "slice_287_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => data_to_send_buffer, dout => out_data_2_288, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_291_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_291_inst_req_0;
      slice_291_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_291_inst_req_1;
      slice_291_inst_ack_1<= update_ack(0);
      slice_291_inst: SliceSplitProtocol generic map(name => "slice_291_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => data_to_send_buffer, dout => out_data_3_292, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared outport operator group (0) : WPIPE_out_pipe_299_inst WPIPE_out_pipe_296_inst WPIPE_out_pipe_293_inst WPIPE_out_pipe_302_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 3 downto 0);
      signal update_req, update_ack : BooleanArray( 3 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 3 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 0, 2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      sample_req_unguarded(3) <= WPIPE_out_pipe_299_inst_req_0;
      sample_req_unguarded(2) <= WPIPE_out_pipe_296_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_out_pipe_293_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_pipe_302_inst_req_0;
      WPIPE_out_pipe_299_inst_ack_0 <= sample_ack_unguarded(3);
      WPIPE_out_pipe_296_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_out_pipe_293_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_pipe_302_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(3) <= WPIPE_out_pipe_299_inst_req_1;
      update_req_unguarded(2) <= WPIPE_out_pipe_296_inst_req_1;
      update_req_unguarded(1) <= WPIPE_out_pipe_293_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_pipe_302_inst_req_1;
      WPIPE_out_pipe_299_inst_ack_1 <= update_ack_unguarded(3);
      WPIPE_out_pipe_296_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_out_pipe_293_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_pipe_302_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      data_in <= out_data_2_288 & out_data_1_284 & out_data_0_280 & out_data_3_292;
      out_pipe_write_0_gI: SplitGuardInterface generic map(name => "out_pipe_write_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_pipe_write_0: OutputPortRevised -- 
        generic map ( name => "out_pipe", data_width => 8, num_reqs => 4, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_pipe_pipe_write_req(0),
          oack => out_pipe_pipe_write_ack(0),
          odata => out_pipe_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end send_to_uart_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library memory_lib;
use memory_lib.memory_libComponents.all;
library work;
use work.ahir_system_global_package.all;
entity ahir_system is  -- system 
  port (-- 
    clk : in std_logic;
    reset : in std_logic;
    in_pipe_pipe_write_data: in std_logic_vector(7 downto 0);
    in_pipe_pipe_write_req : in std_logic_vector(0 downto 0);
    in_pipe_pipe_write_ack : out std_logic_vector(0 downto 0);
    out_pipe_pipe_read_data: out std_logic_vector(7 downto 0);
    out_pipe_pipe_read_req : in std_logic_vector(0 downto 0);
    out_pipe_pipe_read_ack : out std_logic_vector(0 downto 0);
    start_processor: in std_logic_vector(7 downto 0)); -- 
  -- 
end entity; 
architecture ahir_system_arch  of ahir_system is -- system-architecture 
  -- interface signals to connect to memory space memory_space_0
  signal memory_space_0_lr_req :  std_logic_vector(0 downto 0);
  signal memory_space_0_lr_ack : std_logic_vector(0 downto 0);
  signal memory_space_0_lr_addr : std_logic_vector(5 downto 0);
  signal memory_space_0_lr_tag : std_logic_vector(18 downto 0);
  signal memory_space_0_lc_req : std_logic_vector(0 downto 0);
  signal memory_space_0_lc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_0_lc_data : std_logic_vector(31 downto 0);
  signal memory_space_0_lc_tag :  std_logic_vector(1 downto 0);
  signal memory_space_0_sr_req :  std_logic_vector(0 downto 0);
  signal memory_space_0_sr_ack : std_logic_vector(0 downto 0);
  signal memory_space_0_sr_addr : std_logic_vector(5 downto 0);
  signal memory_space_0_sr_data : std_logic_vector(31 downto 0);
  signal memory_space_0_sr_tag : std_logic_vector(18 downto 0);
  signal memory_space_0_sc_req : std_logic_vector(0 downto 0);
  signal memory_space_0_sc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_0_sc_tag :  std_logic_vector(1 downto 0);
  -- declarations related to module cal_Next_program_cnt
  component cal_Next_program_cnt is -- 
    generic (tag_length : integer); 
    port ( -- 
      opcode : in  std_logic_vector(7 downto 0);
      rd1 : in  std_logic_vector(31 downto 0);
      rd2 : in  std_logic_vector(31 downto 0);
      program_cnt : in  std_logic_vector(7 downto 0);
      is_rs1_neg : in  std_logic_vector(0 downto 0);
      n_program_cnt : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module cal_Next_program_cnt
  signal cal_Next_program_cnt_opcode :  std_logic_vector(7 downto 0);
  signal cal_Next_program_cnt_rd1 :  std_logic_vector(31 downto 0);
  signal cal_Next_program_cnt_rd2 :  std_logic_vector(31 downto 0);
  signal cal_Next_program_cnt_program_cnt :  std_logic_vector(7 downto 0);
  signal cal_Next_program_cnt_is_rs1_neg :  std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_n_program_cnt :  std_logic_vector(7 downto 0);
  signal cal_Next_program_cnt_in_args    : std_logic_vector(80 downto 0);
  signal cal_Next_program_cnt_out_args   : std_logic_vector(7 downto 0);
  signal cal_Next_program_cnt_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal cal_Next_program_cnt_tag_out   : std_logic_vector(1 downto 0);
  signal cal_Next_program_cnt_start_req : std_logic;
  signal cal_Next_program_cnt_start_ack : std_logic;
  signal cal_Next_program_cnt_fin_req   : std_logic;
  signal cal_Next_program_cnt_fin_ack : std_logic;
  -- caller side aggregated signals for module cal_Next_program_cnt
  signal cal_Next_program_cnt_call_reqs: std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_call_acks: std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_return_reqs: std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_return_acks: std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_call_data: std_logic_vector(80 downto 0);
  signal cal_Next_program_cnt_call_tag: std_logic_vector(0 downto 0);
  signal cal_Next_program_cnt_return_data: std_logic_vector(7 downto 0);
  signal cal_Next_program_cnt_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module memory_daemon
  -- argument signals for module memory_daemon
  signal memory_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal memory_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal memory_daemon_start_req : std_logic;
  signal memory_daemon_start_ack : std_logic;
  signal memory_daemon_fin_req   : std_logic;
  signal memory_daemon_fin_ack : std_logic;
  -- declarations related to module processor
  component processor is -- 
    generic (tag_length : integer); 
    port ( -- 
      mem_out_pipe_read_req : out  std_logic_vector(0 downto 0);
      mem_out_pipe_read_ack : in   std_logic_vector(0 downto 0);
      mem_out_pipe_read_data : in   std_logic_vector(31 downto 0);
      start_processor : in std_logic_vector(7 downto 0);
      mem_in_pipe_write_req : out  std_logic_vector(0 downto 0);
      mem_in_pipe_write_ack : in   std_logic_vector(0 downto 0);
      mem_in_pipe_write_data : out  std_logic_vector(63 downto 0);
      cal_Next_program_cnt_call_reqs : out  std_logic_vector(0 downto 0);
      cal_Next_program_cnt_call_acks : in   std_logic_vector(0 downto 0);
      cal_Next_program_cnt_call_data : out  std_logic_vector(80 downto 0);
      cal_Next_program_cnt_call_tag  :  out  std_logic_vector(0 downto 0);
      cal_Next_program_cnt_return_reqs : out  std_logic_vector(0 downto 0);
      cal_Next_program_cnt_return_acks : in   std_logic_vector(0 downto 0);
      cal_Next_program_cnt_return_data : in   std_logic_vector(7 downto 0);
      cal_Next_program_cnt_return_tag :  in   std_logic_vector(0 downto 0);
      registerFileModule_call_reqs : out  std_logic_vector(0 downto 0);
      registerFileModule_call_acks : in   std_logic_vector(0 downto 0);
      registerFileModule_call_data : out  std_logic_vector(58 downto 0);
      registerFileModule_call_tag  :  out  std_logic_vector(1 downto 0);
      registerFileModule_return_reqs : out  std_logic_vector(0 downto 0);
      registerFileModule_return_acks : in   std_logic_vector(0 downto 0);
      registerFileModule_return_data : in   std_logic_vector(63 downto 0);
      registerFileModule_return_tag :  in   std_logic_vector(1 downto 0);
      send_to_uart_call_reqs : out  std_logic_vector(0 downto 0);
      send_to_uart_call_acks : in   std_logic_vector(0 downto 0);
      send_to_uart_call_data : out  std_logic_vector(31 downto 0);
      send_to_uart_call_tag  :  out  std_logic_vector(0 downto 0);
      send_to_uart_return_reqs : out  std_logic_vector(0 downto 0);
      send_to_uart_return_acks : in   std_logic_vector(0 downto 0);
      send_to_uart_return_tag :  in   std_logic_vector(0 downto 0);
      receive_from_uart_call_reqs : out  std_logic_vector(0 downto 0);
      receive_from_uart_call_acks : in   std_logic_vector(0 downto 0);
      receive_from_uart_call_tag  :  out  std_logic_vector(0 downto 0);
      receive_from_uart_return_reqs : out  std_logic_vector(0 downto 0);
      receive_from_uart_return_acks : in   std_logic_vector(0 downto 0);
      receive_from_uart_return_data : in   std_logic_vector(31 downto 0);
      receive_from_uart_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module processor
  signal processor_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal processor_tag_out   : std_logic_vector(1 downto 0);
  signal processor_start_req : std_logic;
  signal processor_start_ack : std_logic;
  signal processor_fin_req   : std_logic;
  signal processor_fin_ack : std_logic;
  -- declarations related to module receive_from_uart
  component receive_from_uart is -- 
    generic (tag_length : integer); 
    port ( -- 
      receive_data_from_uart : out  std_logic_vector(31 downto 0);
      in_pipe_pipe_read_req : out  std_logic_vector(0 downto 0);
      in_pipe_pipe_read_ack : in   std_logic_vector(0 downto 0);
      in_pipe_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module receive_from_uart
  signal receive_from_uart_receive_data_from_uart :  std_logic_vector(31 downto 0);
  signal receive_from_uart_out_args   : std_logic_vector(31 downto 0);
  signal receive_from_uart_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal receive_from_uart_tag_out   : std_logic_vector(1 downto 0);
  signal receive_from_uart_start_req : std_logic;
  signal receive_from_uart_start_ack : std_logic;
  signal receive_from_uart_fin_req   : std_logic;
  signal receive_from_uart_fin_ack : std_logic;
  -- caller side aggregated signals for module receive_from_uart
  signal receive_from_uart_call_reqs: std_logic_vector(0 downto 0);
  signal receive_from_uart_call_acks: std_logic_vector(0 downto 0);
  signal receive_from_uart_return_reqs: std_logic_vector(0 downto 0);
  signal receive_from_uart_return_acks: std_logic_vector(0 downto 0);
  signal receive_from_uart_call_tag: std_logic_vector(0 downto 0);
  signal receive_from_uart_return_data: std_logic_vector(31 downto 0);
  signal receive_from_uart_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module registerFileModule
  component registerFileModule is -- 
    generic (tag_length : integer); 
    port ( -- 
      valid_1 : in  std_logic_vector(0 downto 0);
      addr_1 : in  std_logic_vector(7 downto 0);
      valid_2 : in  std_logic_vector(0 downto 0);
      addr_2 : in  std_logic_vector(7 downto 0);
      valid_w : in  std_logic_vector(0 downto 0);
      addr_w : in  std_logic_vector(7 downto 0);
      data_to_be_written : in  std_logic_vector(31 downto 0);
      read_data_1 : out  std_logic_vector(31 downto 0);
      read_data_2 : out  std_logic_vector(31 downto 0);
      memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lr_addr : out  std_logic_vector(5 downto 0);
      memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_data : in   std_logic_vector(31 downto 0);
      memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
      memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sr_addr : out  std_logic_vector(5 downto 0);
      memory_space_0_sr_data : out  std_logic_vector(31 downto 0);
      memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module registerFileModule
  signal registerFileModule_valid_1 :  std_logic_vector(0 downto 0);
  signal registerFileModule_addr_1 :  std_logic_vector(7 downto 0);
  signal registerFileModule_valid_2 :  std_logic_vector(0 downto 0);
  signal registerFileModule_addr_2 :  std_logic_vector(7 downto 0);
  signal registerFileModule_valid_w :  std_logic_vector(0 downto 0);
  signal registerFileModule_addr_w :  std_logic_vector(7 downto 0);
  signal registerFileModule_data_to_be_written :  std_logic_vector(31 downto 0);
  signal registerFileModule_read_data_1 :  std_logic_vector(31 downto 0);
  signal registerFileModule_read_data_2 :  std_logic_vector(31 downto 0);
  signal registerFileModule_in_args    : std_logic_vector(58 downto 0);
  signal registerFileModule_out_args   : std_logic_vector(63 downto 0);
  signal registerFileModule_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal registerFileModule_tag_out   : std_logic_vector(2 downto 0);
  signal registerFileModule_start_req : std_logic;
  signal registerFileModule_start_ack : std_logic;
  signal registerFileModule_fin_req   : std_logic;
  signal registerFileModule_fin_ack : std_logic;
  -- caller side aggregated signals for module registerFileModule
  signal registerFileModule_call_reqs: std_logic_vector(0 downto 0);
  signal registerFileModule_call_acks: std_logic_vector(0 downto 0);
  signal registerFileModule_return_reqs: std_logic_vector(0 downto 0);
  signal registerFileModule_return_acks: std_logic_vector(0 downto 0);
  signal registerFileModule_call_data: std_logic_vector(58 downto 0);
  signal registerFileModule_call_tag: std_logic_vector(1 downto 0);
  signal registerFileModule_return_data: std_logic_vector(63 downto 0);
  signal registerFileModule_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module send_to_uart
  component send_to_uart is -- 
    generic (tag_length : integer); 
    port ( -- 
      data_to_send : in  std_logic_vector(31 downto 0);
      out_pipe_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_pipe_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_pipe_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module send_to_uart
  signal send_to_uart_data_to_send :  std_logic_vector(31 downto 0);
  signal send_to_uart_in_args    : std_logic_vector(31 downto 0);
  signal send_to_uart_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal send_to_uart_tag_out   : std_logic_vector(1 downto 0);
  signal send_to_uart_start_req : std_logic;
  signal send_to_uart_start_ack : std_logic;
  signal send_to_uart_fin_req   : std_logic;
  signal send_to_uart_fin_ack : std_logic;
  -- caller side aggregated signals for module send_to_uart
  signal send_to_uart_call_reqs: std_logic_vector(0 downto 0);
  signal send_to_uart_call_acks: std_logic_vector(0 downto 0);
  signal send_to_uart_return_reqs: std_logic_vector(0 downto 0);
  signal send_to_uart_return_acks: std_logic_vector(0 downto 0);
  signal send_to_uart_call_data: std_logic_vector(31 downto 0);
  signal send_to_uart_call_tag: std_logic_vector(0 downto 0);
  signal send_to_uart_return_tag: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe in_pipe
  signal in_pipe_pipe_read_data: std_logic_vector(7 downto 0);
  signal in_pipe_pipe_read_req: std_logic_vector(0 downto 0);
  signal in_pipe_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe mem_in
  signal mem_in_pipe_write_data: std_logic_vector(63 downto 0);
  signal mem_in_pipe_write_req: std_logic_vector(0 downto 0);
  signal mem_in_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe mem_in
  signal mem_in_pipe_read_data: std_logic_vector(63 downto 0);
  signal mem_in_pipe_read_req: std_logic_vector(0 downto 0);
  signal mem_in_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe mem_out
  signal mem_out_pipe_write_data: std_logic_vector(31 downto 0);
  signal mem_out_pipe_write_req: std_logic_vector(0 downto 0);
  signal mem_out_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe mem_out
  signal mem_out_pipe_read_data: std_logic_vector(31 downto 0);
  signal mem_out_pipe_read_req: std_logic_vector(0 downto 0);
  signal mem_out_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe out_pipe
  signal out_pipe_pipe_write_data: std_logic_vector(7 downto 0);
  signal out_pipe_pipe_write_req: std_logic_vector(0 downto 0);
  signal out_pipe_pipe_write_ack: std_logic_vector(0 downto 0);
  -- 
begin -- 
  -- module cal_Next_program_cnt
  cal_Next_program_cnt_opcode <= cal_Next_program_cnt_in_args(80 downto 73);
  cal_Next_program_cnt_rd1 <= cal_Next_program_cnt_in_args(72 downto 41);
  cal_Next_program_cnt_rd2 <= cal_Next_program_cnt_in_args(40 downto 9);
  cal_Next_program_cnt_program_cnt <= cal_Next_program_cnt_in_args(8 downto 1);
  cal_Next_program_cnt_is_rs1_neg <= cal_Next_program_cnt_in_args(0 downto 0);
  cal_Next_program_cnt_out_args <= cal_Next_program_cnt_n_program_cnt ;
  -- call arbiter for module cal_Next_program_cnt
  cal_Next_program_cnt_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 81,
      return_data_width => 8,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => cal_Next_program_cnt_call_reqs,
      call_acks => cal_Next_program_cnt_call_acks,
      return_reqs => cal_Next_program_cnt_return_reqs,
      return_acks => cal_Next_program_cnt_return_acks,
      call_data  => cal_Next_program_cnt_call_data,
      call_tag  => cal_Next_program_cnt_call_tag,
      return_tag  => cal_Next_program_cnt_return_tag,
      call_mtag => cal_Next_program_cnt_tag_in,
      return_mtag => cal_Next_program_cnt_tag_out,
      return_data =>cal_Next_program_cnt_return_data,
      call_mreq => cal_Next_program_cnt_start_req,
      call_mack => cal_Next_program_cnt_start_ack,
      return_mreq => cal_Next_program_cnt_fin_req,
      return_mack => cal_Next_program_cnt_fin_ack,
      call_mdata => cal_Next_program_cnt_in_args,
      return_mdata => cal_Next_program_cnt_out_args,
      clk => clk, 
      reset => reset --
    ); --
  cal_Next_program_cnt_instance:cal_Next_program_cnt-- 
    generic map(tag_length => 2)
    port map(-- 
      opcode => cal_Next_program_cnt_opcode,
      rd1 => cal_Next_program_cnt_rd1,
      rd2 => cal_Next_program_cnt_rd2,
      program_cnt => cal_Next_program_cnt_program_cnt,
      is_rs1_neg => cal_Next_program_cnt_is_rs1_neg,
      n_program_cnt => cal_Next_program_cnt_n_program_cnt,
      start_req => cal_Next_program_cnt_start_req,
      start_ack => cal_Next_program_cnt_start_ack,
      fin_req => cal_Next_program_cnt_fin_req,
      fin_ack => cal_Next_program_cnt_fin_ack,
      clk => clk,
      reset => reset,
      tag_in => cal_Next_program_cnt_tag_in,
      tag_out => cal_Next_program_cnt_tag_out-- 
    ); -- 
  -- module memory_daemon
  memory_daemon_instance:memory_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => memory_daemon_start_req,
      start_ack => memory_daemon_start_ack,
      fin_req => memory_daemon_fin_req,
      fin_ack => memory_daemon_fin_ack,
      clk => clk,
      reset => reset,
      mem_in_pipe_read_req => mem_in_pipe_read_req(0 downto 0),
      mem_in_pipe_read_ack => mem_in_pipe_read_ack(0 downto 0),
      mem_in_pipe_read_data => mem_in_pipe_read_data(63 downto 0),
      mem_out_pipe_write_req => mem_out_pipe_write_req(0 downto 0),
      mem_out_pipe_write_ack => mem_out_pipe_write_ack(0 downto 0),
      mem_out_pipe_write_data => mem_out_pipe_write_data(31 downto 0),
      tag_in => memory_daemon_tag_in,
      tag_out => memory_daemon_tag_out-- 
    ); -- 
  -- module will be run forever 
  memory_daemon_tag_in <= (others => '0');
  memory_daemon_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => memory_daemon_start_req, start_ack => memory_daemon_start_ack,  fin_req => memory_daemon_fin_req,  fin_ack => memory_daemon_fin_ack);
  -- module processor
  processor_instance:processor-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => processor_start_req,
      start_ack => processor_start_ack,
      fin_req => processor_fin_req,
      fin_ack => processor_fin_ack,
      clk => clk,
      reset => reset,
      mem_out_pipe_read_req => mem_out_pipe_read_req(0 downto 0),
      mem_out_pipe_read_ack => mem_out_pipe_read_ack(0 downto 0),
      mem_out_pipe_read_data => mem_out_pipe_read_data(31 downto 0),
      start_processor => start_processor,
      mem_in_pipe_write_req => mem_in_pipe_write_req(0 downto 0),
      mem_in_pipe_write_ack => mem_in_pipe_write_ack(0 downto 0),
      mem_in_pipe_write_data => mem_in_pipe_write_data(63 downto 0),
      cal_Next_program_cnt_call_reqs => cal_Next_program_cnt_call_reqs(0 downto 0),
      cal_Next_program_cnt_call_acks => cal_Next_program_cnt_call_acks(0 downto 0),
      cal_Next_program_cnt_call_data => cal_Next_program_cnt_call_data(80 downto 0),
      cal_Next_program_cnt_call_tag => cal_Next_program_cnt_call_tag(0 downto 0),
      cal_Next_program_cnt_return_reqs => cal_Next_program_cnt_return_reqs(0 downto 0),
      cal_Next_program_cnt_return_acks => cal_Next_program_cnt_return_acks(0 downto 0),
      cal_Next_program_cnt_return_data => cal_Next_program_cnt_return_data(7 downto 0),
      cal_Next_program_cnt_return_tag => cal_Next_program_cnt_return_tag(0 downto 0),
      registerFileModule_call_reqs => registerFileModule_call_reqs(0 downto 0),
      registerFileModule_call_acks => registerFileModule_call_acks(0 downto 0),
      registerFileModule_call_data => registerFileModule_call_data(58 downto 0),
      registerFileModule_call_tag => registerFileModule_call_tag(1 downto 0),
      registerFileModule_return_reqs => registerFileModule_return_reqs(0 downto 0),
      registerFileModule_return_acks => registerFileModule_return_acks(0 downto 0),
      registerFileModule_return_data => registerFileModule_return_data(63 downto 0),
      registerFileModule_return_tag => registerFileModule_return_tag(1 downto 0),
      receive_from_uart_call_reqs => receive_from_uart_call_reqs(0 downto 0),
      receive_from_uart_call_acks => receive_from_uart_call_acks(0 downto 0),
      receive_from_uart_call_tag => receive_from_uart_call_tag(0 downto 0),
      receive_from_uart_return_reqs => receive_from_uart_return_reqs(0 downto 0),
      receive_from_uart_return_acks => receive_from_uart_return_acks(0 downto 0),
      receive_from_uart_return_data => receive_from_uart_return_data(31 downto 0),
      receive_from_uart_return_tag => receive_from_uart_return_tag(0 downto 0),
      send_to_uart_call_reqs => send_to_uart_call_reqs(0 downto 0),
      send_to_uart_call_acks => send_to_uart_call_acks(0 downto 0),
      send_to_uart_call_data => send_to_uart_call_data(31 downto 0),
      send_to_uart_call_tag => send_to_uart_call_tag(0 downto 0),
      send_to_uart_return_reqs => send_to_uart_return_reqs(0 downto 0),
      send_to_uart_return_acks => send_to_uart_return_acks(0 downto 0),
      send_to_uart_return_tag => send_to_uart_return_tag(0 downto 0),
      tag_in => processor_tag_in,
      tag_out => processor_tag_out-- 
    ); -- 
  -- module will be run forever 
  processor_tag_in <= (others => '0');
  processor_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => processor_start_req, start_ack => processor_start_ack,  fin_req => processor_fin_req,  fin_ack => processor_fin_ack);
  -- module receive_from_uart
  receive_from_uart_out_args <= receive_from_uart_receive_data_from_uart ;
  -- call arbiter for module receive_from_uart
  receive_from_uart_arbiter: SplitCallArbiterNoInargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargs", num_reqs => 1,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => receive_from_uart_call_reqs,
      call_acks => receive_from_uart_call_acks,
      return_reqs => receive_from_uart_return_reqs,
      return_acks => receive_from_uart_return_acks,
      call_tag  => receive_from_uart_call_tag,
      return_tag  => receive_from_uart_return_tag,
      call_mtag => receive_from_uart_tag_in,
      return_mtag => receive_from_uart_tag_out,
      return_data =>receive_from_uart_return_data,
      call_mreq => receive_from_uart_start_req,
      call_mack => receive_from_uart_start_ack,
      return_mreq => receive_from_uart_fin_req,
      return_mack => receive_from_uart_fin_ack,
      return_mdata => receive_from_uart_out_args,
      clk => clk, 
      reset => reset --
    ); --
  receive_from_uart_instance:receive_from_uart-- 
    generic map(tag_length => 2)
    port map(-- 
      receive_data_from_uart => receive_from_uart_receive_data_from_uart,
      start_req => receive_from_uart_start_req,
      start_ack => receive_from_uart_start_ack,
      fin_req => receive_from_uart_fin_req,
      fin_ack => receive_from_uart_fin_ack,
      clk => clk,
      reset => reset,
      in_pipe_pipe_read_req => in_pipe_pipe_read_req(0 downto 0),
      in_pipe_pipe_read_ack => in_pipe_pipe_read_ack(0 downto 0),
      in_pipe_pipe_read_data => in_pipe_pipe_read_data(7 downto 0),
      tag_in => receive_from_uart_tag_in,
      tag_out => receive_from_uart_tag_out-- 
    ); -- 
  -- module registerFileModule
  registerFileModule_valid_1 <= registerFileModule_in_args(58 downto 58);
  registerFileModule_addr_1 <= registerFileModule_in_args(57 downto 50);
  registerFileModule_valid_2 <= registerFileModule_in_args(49 downto 49);
  registerFileModule_addr_2 <= registerFileModule_in_args(48 downto 41);
  registerFileModule_valid_w <= registerFileModule_in_args(40 downto 40);
  registerFileModule_addr_w <= registerFileModule_in_args(39 downto 32);
  registerFileModule_data_to_be_written <= registerFileModule_in_args(31 downto 0);
  registerFileModule_out_args <= registerFileModule_read_data_1 & registerFileModule_read_data_2 ;
  -- call arbiter for module registerFileModule
  registerFileModule_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 59,
      return_data_width => 64,
      callee_tag_length => 1,
      caller_tag_length => 2--
    )
    port map(-- 
      call_reqs => registerFileModule_call_reqs,
      call_acks => registerFileModule_call_acks,
      return_reqs => registerFileModule_return_reqs,
      return_acks => registerFileModule_return_acks,
      call_data  => registerFileModule_call_data,
      call_tag  => registerFileModule_call_tag,
      return_tag  => registerFileModule_return_tag,
      call_mtag => registerFileModule_tag_in,
      return_mtag => registerFileModule_tag_out,
      return_data =>registerFileModule_return_data,
      call_mreq => registerFileModule_start_req,
      call_mack => registerFileModule_start_ack,
      return_mreq => registerFileModule_fin_req,
      return_mack => registerFileModule_fin_ack,
      call_mdata => registerFileModule_in_args,
      return_mdata => registerFileModule_out_args,
      clk => clk, 
      reset => reset --
    ); --
  registerFileModule_instance:registerFileModule-- 
    generic map(tag_length => 3)
    port map(-- 
      valid_1 => registerFileModule_valid_1,
      addr_1 => registerFileModule_addr_1,
      valid_2 => registerFileModule_valid_2,
      addr_2 => registerFileModule_addr_2,
      valid_w => registerFileModule_valid_w,
      addr_w => registerFileModule_addr_w,
      data_to_be_written => registerFileModule_data_to_be_written,
      read_data_1 => registerFileModule_read_data_1,
      read_data_2 => registerFileModule_read_data_2,
      start_req => registerFileModule_start_req,
      start_ack => registerFileModule_start_ack,
      fin_req => registerFileModule_fin_req,
      fin_ack => registerFileModule_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_0_lr_req => memory_space_0_lr_req(0 downto 0),
      memory_space_0_lr_ack => memory_space_0_lr_ack(0 downto 0),
      memory_space_0_lr_addr => memory_space_0_lr_addr(5 downto 0),
      memory_space_0_lr_tag => memory_space_0_lr_tag(18 downto 0),
      memory_space_0_lc_req => memory_space_0_lc_req(0 downto 0),
      memory_space_0_lc_ack => memory_space_0_lc_ack(0 downto 0),
      memory_space_0_lc_data => memory_space_0_lc_data(31 downto 0),
      memory_space_0_lc_tag => memory_space_0_lc_tag(1 downto 0),
      memory_space_0_sr_req => memory_space_0_sr_req(0 downto 0),
      memory_space_0_sr_ack => memory_space_0_sr_ack(0 downto 0),
      memory_space_0_sr_addr => memory_space_0_sr_addr(5 downto 0),
      memory_space_0_sr_data => memory_space_0_sr_data(31 downto 0),
      memory_space_0_sr_tag => memory_space_0_sr_tag(18 downto 0),
      memory_space_0_sc_req => memory_space_0_sc_req(0 downto 0),
      memory_space_0_sc_ack => memory_space_0_sc_ack(0 downto 0),
      memory_space_0_sc_tag => memory_space_0_sc_tag(1 downto 0),
      tag_in => registerFileModule_tag_in,
      tag_out => registerFileModule_tag_out-- 
    ); -- 
  -- module send_to_uart
  send_to_uart_data_to_send <= send_to_uart_in_args(31 downto 0);
  -- call arbiter for module send_to_uart
  send_to_uart_arbiter: SplitCallArbiterNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoOutargs", num_reqs => 1,
      call_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => send_to_uart_call_reqs,
      call_acks => send_to_uart_call_acks,
      return_reqs => send_to_uart_return_reqs,
      return_acks => send_to_uart_return_acks,
      call_data  => send_to_uart_call_data,
      call_tag  => send_to_uart_call_tag,
      return_tag  => send_to_uart_return_tag,
      call_mtag => send_to_uart_tag_in,
      return_mtag => send_to_uart_tag_out,
      call_mreq => send_to_uart_start_req,
      call_mack => send_to_uart_start_ack,
      return_mreq => send_to_uart_fin_req,
      return_mack => send_to_uart_fin_ack,
      call_mdata => send_to_uart_in_args,
      clk => clk, 
      reset => reset --
    ); --
  send_to_uart_instance:send_to_uart-- 
    generic map(tag_length => 2)
    port map(-- 
      data_to_send => send_to_uart_data_to_send,
      start_req => send_to_uart_start_req,
      start_ack => send_to_uart_start_ack,
      fin_req => send_to_uart_fin_req,
      fin_ack => send_to_uart_fin_ack,
      clk => clk,
      reset => reset,
      out_pipe_pipe_write_req => out_pipe_pipe_write_req(0 downto 0),
      out_pipe_pipe_write_ack => out_pipe_pipe_write_ack(0 downto 0),
      out_pipe_pipe_write_data => out_pipe_pipe_write_data(7 downto 0),
      tag_in => send_to_uart_tag_in,
      tag_out => send_to_uart_tag_out-- 
    ); -- 
  in_pipe_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe in_pipe",
      num_reads => 1,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 32 --
    )
    port map( -- 
      read_req => in_pipe_pipe_read_req,
      read_ack => in_pipe_pipe_read_ack,
      read_data => in_pipe_pipe_read_data,
      write_req => in_pipe_pipe_write_req,
      write_ack => in_pipe_pipe_write_ack,
      write_data => in_pipe_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  mem_in_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe mem_in",
      num_reads => 1,
      num_writes => 1,
      data_width => 64,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 8 --
    )
    port map( -- 
      read_req => mem_in_pipe_read_req,
      read_ack => mem_in_pipe_read_ack,
      read_data => mem_in_pipe_read_data,
      write_req => mem_in_pipe_write_req,
      write_ack => mem_in_pipe_write_ack,
      write_data => mem_in_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  mem_out_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe mem_out",
      num_reads => 1,
      num_writes => 1,
      data_width => 32,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 8 --
    )
    port map( -- 
      read_req => mem_out_pipe_read_req,
      read_ack => mem_out_pipe_read_ack,
      read_data => mem_out_pipe_read_data,
      write_req => mem_out_pipe_write_req,
      write_ack => mem_out_pipe_write_ack,
      write_data => mem_out_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  out_pipe_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe out_pipe",
      num_reads => 1,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 8 --
    )
    port map( -- 
      read_req => out_pipe_pipe_read_req,
      read_ack => out_pipe_pipe_read_ack,
      read_data => out_pipe_pipe_read_data,
      write_req => out_pipe_pipe_write_req,
      write_ack => out_pipe_pipe_write_ack,
      write_data => out_pipe_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- input signal-pipe start_processor accessed directly. 
  MemorySpace_memory_space_0: ordered_memory_subsystem -- 
    generic map(-- 
      name => "memory_space_0",
      num_loads => 1,
      num_stores => 1,
      addr_width => 6,
      data_width => 32,
      tag_width => 2,
      time_stamp_width => 17,
      number_of_banks => 1,
      mux_degree => 2,
      demux_degree => 2,
      base_bank_addr_width => 6,
      base_bank_data_width => 32
      ) -- 
    port map(-- 
      lr_addr_in => memory_space_0_lr_addr,
      lr_req_in => memory_space_0_lr_req,
      lr_ack_out => memory_space_0_lr_ack,
      lr_tag_in => memory_space_0_lr_tag,
      lc_req_in => memory_space_0_lc_req,
      lc_ack_out => memory_space_0_lc_ack,
      lc_data_out => memory_space_0_lc_data,
      lc_tag_out => memory_space_0_lc_tag,
      sr_addr_in => memory_space_0_sr_addr,
      sr_data_in => memory_space_0_sr_data,
      sr_req_in => memory_space_0_sr_req,
      sr_ack_out => memory_space_0_sr_ack,
      sr_tag_in => memory_space_0_sr_tag,
      sc_req_in=> memory_space_0_sc_req,
      sc_ack_out => memory_space_0_sc_ack,
      sc_tag_out => memory_space_0_sc_tag,
      clock => clk,
      reset => reset); -- 
  -- 
end ahir_system_arch;
